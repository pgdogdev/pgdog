#!/bin/bash
set -euo pipefail

LABEL="${1:-suite}"
PROFILES_DIR="target/llvm-cov-target/profiles"
SNAPSHOT_FILE="${PROFILES_DIR}/.last_snapshot"

if [ ! -d "${PROFILES_DIR}" ]; then
    echo "Coverage profile directory '${PROFILES_DIR}' not found" >&2
    exit 1
fi

PREV_HASH=""
PREV_COUNT=0
if [ -f "${SNAPSHOT_FILE}" ]; then
    read -r PREV_HASH PREV_COUNT < "${SNAPSHOT_FILE}"
fi

read -r CURRENT_HASH CURRENT_COUNT <<EOF
$(python3 - "$PROFILES_DIR" <<'PY'
import hashlib
import json
import os
import sys

profiles = sys.argv[1]
entries = []
for root, _, files in os.walk(profiles):
    for name in files:
        if not name.endswith('.profraw'):
            continue
        path = os.path.join(root, name)
        stat = os.stat(path)
        entries.append((os.path.relpath(path, profiles), stat.st_size, stat.st_mtime_ns))

entries.sort()
digest = hashlib.sha256(json.dumps(entries).encode('utf-8')).hexdigest()
print(digest, len(entries))
PY
)
EOF

if [ "${CURRENT_COUNT}" = "0" ]; then
    echo "No coverage profiles were generated by '${LABEL}'" >&2
    exit 1
fi

if [ "${CURRENT_HASH}" = "${PREV_HASH}" ]; then
    echo "Coverage artifacts unchanged after '${LABEL}'" >&2
    find "${PROFILES_DIR}" -maxdepth 1 -name '*.profraw' -print
    exit 1
fi

echo "${CURRENT_HASH} ${CURRENT_COUNT}" > "${SNAPSHOT_FILE}"
DELTA=$((CURRENT_COUNT - PREV_COUNT))
echo "Coverage profile fingerprint updated after '${LABEL}': count=${CURRENT_COUNT} (delta=${DELTA})"

SAFE_LABEL=$(printf '%s' "${LABEL}" | tr '[:upper:]' '[:lower:]' | tr -c 'a-z0-9' '_')
if [ -z "${SAFE_LABEL}" ]; then
    SAFE_LABEL="suite"
fi

REPORTS_DIR="target/llvm-cov-target/reports"
mkdir -p "${REPORTS_DIR}"
REPORT_PATH="${REPORTS_DIR}/${SAFE_LABEL}.lcov"
cargo llvm-cov report --release --package pgdog --lcov --keep-profraw --output-path "${REPORT_PATH}"

LCOV_HASH=$(python3 - "$REPORT_PATH" <<'PY'
import hashlib
import sys

path = sys.argv[1]
with open(path, 'rb') as fh:
    digest = hashlib.sha256(fh.read()).hexdigest()
print(digest)
PY
)

LCOV_SNAPSHOT="${REPORTS_DIR}/.last_lcov_hash"
PREV_LCOV_HASH=""
if [ -f "${LCOV_SNAPSHOT}" ]; then
    read -r PREV_LCOV_HASH < "${LCOV_SNAPSHOT}"
fi

if [ -n "${PREV_LCOV_HASH}" ] && [ "${LCOV_HASH}" = "${PREV_LCOV_HASH}" ]; then
    echo "LCOV report unchanged after '${LABEL}'" >&2
    exit 1
fi

echo "${LCOV_HASH}" > "${LCOV_SNAPSHOT}"
echo "LCOV report captured at ${REPORT_PATH}"
