<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1430" onload="init(evt)" viewBox="0 0 1200 1430" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1430" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1413.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1413.00"> </text><svg id="frames" x="10" width="1180" total_samples="28028152838"><g><title>[ld-linux-x86-64.so.2] (3,224,198 samples, 0.01%)</title><rect x="0.0000%" y="1301" width="0.0115%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3224198"/><text x="0.2500%" y="1311.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,272,286 samples, 0.01%)</title><rect x="0.0000%" y="1317" width="0.0117%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3272286"/><text x="0.2500%" y="1327.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,274,806 samples, 0.01%)</title><rect x="0.0000%" y="1333" width="0.0117%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="3274806"/><text x="0.2500%" y="1343.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,274,807 samples, 0.01%)</title><rect x="0.0000%" y="1349" width="0.0117%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="3274807"/><text x="0.2500%" y="1359.50"></text></g><g><title>[libc.so.6] (3,854,540 samples, 0.01%)</title><rect x="0.0117%" y="1333" width="0.0138%" height="15" fill="rgb(208,68,35)" fg:x="3274807" fg:w="3854540"/><text x="0.2617%" y="1343.50"></text></g><g><title>[unknown] (3,854,540 samples, 0.01%)</title><rect x="0.0117%" y="1317" width="0.0138%" height="15" fill="rgb(232,128,0)" fg:x="3274807" fg:w="3854540"/><text x="0.2617%" y="1327.50"></text></g><g><title>[libc.so.6] (90,195,772 samples, 0.32%)</title><rect x="0.0117%" y="1349" width="0.3218%" height="15" fill="rgb(207,160,47)" fg:x="3274807" fg:w="90195772"/><text x="0.2617%" y="1359.50"></text></g><g><title>[unknown] (86,341,232 samples, 0.31%)</title><rect x="0.0254%" y="1333" width="0.3081%" height="15" fill="rgb(228,23,34)" fg:x="7129347" fg:w="86341232"/><text x="0.2754%" y="1343.50"></text></g><g><title>[unknown] (73,997,705 samples, 0.26%)</title><rect x="0.3335%" y="1349" width="0.2640%" height="15" fill="rgb(218,30,26)" fg:x="93470579" fg:w="73997705"/><text x="0.5835%" y="1359.50"></text></g><g><title>rustls_pki_types::pem::read (5,152,889 samples, 0.02%)</title><rect x="0.6938%" y="741" width="0.0184%" height="15" fill="rgb(220,122,19)" fg:x="194446217" fg:w="5152889"/><text x="0.9438%" y="751.50"></text></g><g><title>rustls_pki_types::base64::decode_public (5,133,786 samples, 0.02%)</title><rect x="0.6938%" y="725" width="0.0183%" height="15" fill="rgb(250,228,42)" fg:x="194465320" fg:w="5133786"/><text x="0.9438%" y="735.50"></text></g><g><title>rustls_pki_types::base64::decode (5,133,786 samples, 0.02%)</title><rect x="0.6938%" y="709" width="0.0183%" height="15" fill="rgb(240,193,28)" fg:x="194465320" fg:w="5133786"/><text x="0.9438%" y="719.50"></text></g><g><title>&lt;rustls_pki_types::pem::ReadIter&lt;R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,154,321 samples, 0.02%)</title><rect x="0.6938%" y="773" width="0.0184%" height="15" fill="rgb(216,20,37)" fg:x="194446217" fg:w="5154321"/><text x="0.9438%" y="783.50"></text></g><g><title>rustls_pki_types::pem::from_buf (5,154,321 samples, 0.02%)</title><rect x="0.6938%" y="757" width="0.0184%" height="15" fill="rgb(206,188,39)" fg:x="194446217" fg:w="5154321"/><text x="0.9438%" y="767.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (7,836,601 samples, 0.03%)</title><rect x="0.6842%" y="997" width="0.0280%" height="15" fill="rgb(217,207,13)" fg:x="191763938" fg:w="7836601"/><text x="0.9342%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::_{{closure}}::_{{closure}} (7,836,601 samples, 0.03%)</title><rect x="0.6842%" y="981" width="0.0280%" height="15" fill="rgb(231,73,38)" fg:x="191763938" fg:w="7836601"/><text x="0.9342%" y="991.50"></text></g><g><title>tokio::runtime::coop::budget (7,836,601 samples, 0.03%)</title><rect x="0.6842%" y="965" width="0.0280%" height="15" fill="rgb(225,20,46)" fg:x="191763938" fg:w="7836601"/><text x="0.9342%" y="975.50"></text></g><g><title>tokio::runtime::coop::with_budget (7,836,601 samples, 0.03%)</title><rect x="0.6842%" y="949" width="0.0280%" height="15" fill="rgb(210,31,41)" fg:x="191763938" fg:w="7836601"/><text x="0.9342%" y="959.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::_{{closure}}::_{{closure}}::_{{closure}} (7,836,601 samples, 0.03%)</title><rect x="0.6842%" y="933" width="0.0280%" height="15" fill="rgb(221,200,47)" fg:x="191763938" fg:w="7836601"/><text x="0.9342%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7,836,601 samples, 0.03%)</title><rect x="0.6842%" y="917" width="0.0280%" height="15" fill="rgb(226,26,5)" fg:x="191763938" fg:w="7836601"/><text x="0.9342%" y="927.50"></text></g><g><title>pgdog::main::_{{closure}} (7,836,601 samples, 0.03%)</title><rect x="0.6842%" y="901" width="0.0280%" height="15" fill="rgb(249,33,26)" fg:x="191763938" fg:w="7836601"/><text x="0.9342%" y="911.50"></text></g><g><title>pgdog::pgdog::_{{closure}} (7,836,601 samples, 0.03%)</title><rect x="0.6842%" y="885" width="0.0280%" height="15" fill="rgb(235,183,28)" fg:x="191763938" fg:w="7836601"/><text x="0.9342%" y="895.50"></text></g><g><title>pgdog::net::tls::load (7,836,601 samples, 0.03%)</title><rect x="0.6842%" y="869" width="0.0280%" height="15" fill="rgb(221,5,38)" fg:x="191763938" fg:w="7836601"/><text x="0.9342%" y="879.50"></text></g><g><title>pgdog::net::tls::connector (7,836,601 samples, 0.03%)</title><rect x="0.6842%" y="853" width="0.0280%" height="15" fill="rgb(247,18,42)" fg:x="191763938" fg:w="7836601"/><text x="0.9342%" y="863.50"></text></g><g><title>rustls_native_certs::load_native_certs (7,836,601 samples, 0.03%)</title><rect x="0.6842%" y="837" width="0.0280%" height="15" fill="rgb(241,131,45)" fg:x="191763938" fg:w="7836601"/><text x="0.9342%" y="847.50"></text></g><g><title>rustls_native_certs::CertPaths::load (7,836,601 samples, 0.03%)</title><rect x="0.6842%" y="821" width="0.0280%" height="15" fill="rgb(249,31,29)" fg:x="191763938" fg:w="7836601"/><text x="0.9342%" y="831.50"></text></g><g><title>rustls_native_certs::load_pem_certs_from_dir (5,154,322 samples, 0.02%)</title><rect x="0.6938%" y="805" width="0.0184%" height="15" fill="rgb(225,111,53)" fg:x="194446217" fg:w="5154322"/><text x="0.9438%" y="815.50"></text></g><g><title>rustls_native_certs::load_pem_certs (5,154,322 samples, 0.02%)</title><rect x="0.6938%" y="789" width="0.0184%" height="15" fill="rgb(238,160,17)" fg:x="194446217" fg:w="5154322"/><text x="0.9438%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (5,494,897 samples, 0.02%)</title><rect x="0.7461%" y="981" width="0.0196%" height="15" fill="rgb(214,148,48)" fg:x="209115063" fg:w="5494897"/><text x="0.9961%" y="991.50"></text></g><g><title>core::mem::replace (5,494,897 samples, 0.02%)</title><rect x="0.7461%" y="965" width="0.0196%" height="15" fill="rgb(232,36,49)" fg:x="209115063" fg:w="5494897"/><text x="0.9961%" y="975.50"></text></g><g><title>core::ptr::read (5,494,897 samples, 0.02%)</title><rect x="0.7461%" y="949" width="0.0196%" height="15" fill="rgb(209,103,24)" fg:x="209115063" fg:w="5494897"/><text x="0.9961%" y="959.50"></text></g><g><title>tokio::runtime::driver::Driver::park (7,706,952 samples, 0.03%)</title><rect x="0.7992%" y="949" width="0.0275%" height="15" fill="rgb(229,88,8)" fg:x="224009671" fg:w="7706952"/><text x="1.0492%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (7,336,696 samples, 0.03%)</title><rect x="0.8468%" y="789" width="0.0262%" height="15" fill="rgb(213,181,19)" fg:x="237329219" fg:w="7336696"/><text x="1.0968%" y="799.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (5,453,874 samples, 0.02%)</title><rect x="0.8535%" y="773" width="0.0195%" height="15" fill="rgb(254,191,54)" fg:x="239212041" fg:w="5453874"/><text x="1.1035%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (11,052,142 samples, 0.04%)</title><rect x="0.8402%" y="933" width="0.0394%" height="15" fill="rgb(241,83,37)" fg:x="235503573" fg:w="11052142"/><text x="1.0902%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (11,052,142 samples, 0.04%)</title><rect x="0.8402%" y="917" width="0.0394%" height="15" fill="rgb(233,36,39)" fg:x="235503573" fg:w="11052142"/><text x="1.0902%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (11,052,142 samples, 0.04%)</title><rect x="0.8402%" y="901" width="0.0394%" height="15" fill="rgb(226,3,54)" fg:x="235503573" fg:w="11052142"/><text x="1.0902%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11,052,142 samples, 0.04%)</title><rect x="0.8402%" y="885" width="0.0394%" height="15" fill="rgb(245,192,40)" fg:x="235503573" fg:w="11052142"/><text x="1.0902%" y="895.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (11,052,142 samples, 0.04%)</title><rect x="0.8402%" y="869" width="0.0394%" height="15" fill="rgb(238,167,29)" fg:x="235503573" fg:w="11052142"/><text x="1.0902%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11,052,142 samples, 0.04%)</title><rect x="0.8402%" y="853" width="0.0394%" height="15" fill="rgb(232,182,51)" fg:x="235503573" fg:w="11052142"/><text x="1.0902%" y="863.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (11,052,142 samples, 0.04%)</title><rect x="0.8402%" y="837" width="0.0394%" height="15" fill="rgb(231,60,39)" fg:x="235503573" fg:w="11052142"/><text x="1.0902%" y="847.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (11,052,142 samples, 0.04%)</title><rect x="0.8402%" y="821" width="0.0394%" height="15" fill="rgb(208,69,12)" fg:x="235503573" fg:w="11052142"/><text x="1.0902%" y="831.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (11,052,142 samples, 0.04%)</title><rect x="0.8402%" y="805" width="0.0394%" height="15" fill="rgb(235,93,37)" fg:x="235503573" fg:w="11052142"/><text x="1.0902%" y="815.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::write (3,673,027 samples, 0.01%)</title><rect x="0.8797%" y="933" width="0.0131%" height="15" fill="rgb(213,116,39)" fg:x="246555715" fg:w="3673027"/><text x="1.1297%" y="943.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (3,673,027 samples, 0.01%)</title><rect x="0.8797%" y="917" width="0.0131%" height="15" fill="rgb(222,207,29)" fg:x="246555715" fg:w="3673027"/><text x="1.1297%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (3,673,027 samples, 0.01%)</title><rect x="0.8797%" y="901" width="0.0131%" height="15" fill="rgb(206,96,30)" fg:x="246555715" fg:w="3673027"/><text x="1.1297%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3,941,502 samples, 0.01%)</title><rect x="0.8991%" y="885" width="0.0141%" height="15" fill="rgb(218,138,4)" fg:x="252008881" fg:w="3941502"/><text x="1.1491%" y="895.50"></text></g><g><title>mio::poll::Poll::poll (1,062,909,391 samples, 3.79%)</title><rect x="0.8991%" y="917" width="3.7923%" height="15" fill="rgb(250,191,14)" fg:x="252008881" fg:w="1062909391"/><text x="1.1491%" y="927.50">mio:..</text></g><g><title>mio::sys::unix::selector::Selector::select (1,062,909,391 samples, 3.79%)</title><rect x="0.8991%" y="901" width="3.7923%" height="15" fill="rgb(239,60,40)" fg:x="252008881" fg:w="1062909391"/><text x="1.1491%" y="911.50">mio:..</text></g><g><title>epoll_wait (1,058,967,889 samples, 3.78%)</title><rect x="0.9132%" y="885" width="3.7782%" height="15" fill="rgb(206,27,48)" fg:x="255950383" fg:w="1058967889"/><text x="1.1632%" y="895.50">epol..</text></g><g><title>[libc.so.6] (1,058,967,889 samples, 3.78%)</title><rect x="0.9132%" y="869" width="3.7782%" height="15" fill="rgb(225,35,8)" fg:x="255950383" fg:w="1058967889"/><text x="1.1632%" y="879.50">[lib..</text></g><g><title>[libc.so.6] (1,053,602,542 samples, 3.76%)</title><rect x="0.9323%" y="853" width="3.7591%" height="15" fill="rgb(250,213,24)" fg:x="261315730" fg:w="1053602542"/><text x="1.1823%" y="863.50">[lib..</text></g><g><title>[unknown] (1,053,602,542 samples, 3.76%)</title><rect x="0.9323%" y="837" width="3.7591%" height="15" fill="rgb(247,123,22)" fg:x="261315730" fg:w="1053602542"/><text x="1.1823%" y="847.50">[unk..</text></g><g><title>[unknown] (1,044,123,612 samples, 3.73%)</title><rect x="0.9662%" y="821" width="3.7253%" height="15" fill="rgb(231,138,38)" fg:x="270794660" fg:w="1044123612"/><text x="1.2162%" y="831.50">[unk..</text></g><g><title>[unknown] (1,025,676,786 samples, 3.66%)</title><rect x="1.0320%" y="805" width="3.6595%" height="15" fill="rgb(231,145,46)" fg:x="289241486" fg:w="1025676786"/><text x="1.2820%" y="815.50">[unk..</text></g><g><title>[unknown] (999,077,068 samples, 3.56%)</title><rect x="1.1269%" y="789" width="3.5645%" height="15" fill="rgb(251,118,11)" fg:x="315841204" fg:w="999077068"/><text x="1.3769%" y="799.50">[unk..</text></g><g><title>[unknown] (673,325,243 samples, 2.40%)</title><rect x="2.2891%" y="773" width="2.4023%" height="15" fill="rgb(217,147,25)" fg:x="641593029" fg:w="673325243"/><text x="2.5391%" y="783.50">[u..</text></g><g><title>[unknown] (381,899,449 samples, 1.36%)</title><rect x="3.3289%" y="757" width="1.3626%" height="15" fill="rgb(247,81,37)" fg:x="933018823" fg:w="381899449"/><text x="3.5789%" y="767.50"></text></g><g><title>[unknown] (152,709,596 samples, 0.54%)</title><rect x="4.1466%" y="741" width="0.5448%" height="15" fill="rgb(209,12,38)" fg:x="1162208676" fg:w="152709596"/><text x="4.3966%" y="751.50"></text></g><g><title>[unknown] (21,629,747 samples, 0.08%)</title><rect x="4.6142%" y="725" width="0.0772%" height="15" fill="rgb(227,1,9)" fg:x="1293288525" fg:w="21629747"/><text x="4.8642%" y="735.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (1,064,795,195 samples, 3.80%)</title><rect x="0.8991%" y="933" width="3.7990%" height="15" fill="rgb(248,47,43)" fg:x="252008881" fg:w="1064795195"/><text x="1.1491%" y="943.50">toki..</text></g><g><title>core::time::Duration::as_millis (3,682,448 samples, 0.01%)</title><rect x="4.7048%" y="901" width="0.0131%" height="15" fill="rgb(221,10,30)" fg:x="1318661780" fg:w="3682448"/><text x="4.9548%" y="911.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (7,515,686 samples, 0.03%)</title><rect x="4.6982%" y="917" width="0.0268%" height="15" fill="rgb(210,229,1)" fg:x="1316807788" fg:w="7515686"/><text x="4.9482%" y="927.50"></text></g><g><title>clock_gettime (20,727,932 samples, 0.07%)</title><rect x="4.7315%" y="837" width="0.0740%" height="15" fill="rgb(222,148,37)" fg:x="1326144440" fg:w="20727932"/><text x="4.9815%" y="847.50"></text></g><g><title>__vdso_clock_gettime (16,955,392 samples, 0.06%)</title><rect x="4.7449%" y="821" width="0.0605%" height="15" fill="rgb(234,67,33)" fg:x="1329916980" fg:w="16955392"/><text x="4.9949%" y="831.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (31,993,838 samples, 0.11%)</title><rect x="4.6982%" y="933" width="0.1141%" height="15" fill="rgb(247,98,35)" fg:x="1316807788" fg:w="31993838"/><text x="4.9482%" y="943.50"></text></g><g><title>tokio::time::clock::Clock::now (24,478,152 samples, 0.09%)</title><rect x="4.7250%" y="917" width="0.0873%" height="15" fill="rgb(247,138,52)" fg:x="1324323474" fg:w="24478152"/><text x="4.9750%" y="927.50"></text></g><g><title>tokio::time::clock::now (24,478,152 samples, 0.09%)</title><rect x="4.7250%" y="901" width="0.0873%" height="15" fill="rgb(213,79,30)" fg:x="1324323474" fg:w="24478152"/><text x="4.9750%" y="911.50"></text></g><g><title>std::time::Instant::now (24,478,152 samples, 0.09%)</title><rect x="4.7250%" y="885" width="0.0873%" height="15" fill="rgb(246,177,23)" fg:x="1324323474" fg:w="24478152"/><text x="4.9750%" y="895.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (24,478,152 samples, 0.09%)</title><rect x="4.7250%" y="869" width="0.0873%" height="15" fill="rgb(230,62,27)" fg:x="1324323474" fg:w="24478152"/><text x="4.9750%" y="879.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (22,657,186 samples, 0.08%)</title><rect x="4.7315%" y="853" width="0.0808%" height="15" fill="rgb(216,154,8)" fg:x="1326144440" fg:w="22657186"/><text x="4.9815%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park (1,152,849,506 samples, 4.11%)</title><rect x="0.7121%" y="997" width="4.1132%" height="15" fill="rgb(244,35,45)" fg:x="199600539" fg:w="1152849506"/><text x="0.9621%" y="1007.50">toki..</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (1,137,840,085 samples, 4.06%)</title><rect x="0.7657%" y="981" width="4.0596%" height="15" fill="rgb(251,115,12)" fg:x="214609960" fg:w="1137840085"/><text x="1.0157%" y="991.50">toki..</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::park::_{{closure}} (1,128,440,374 samples, 4.03%)</title><rect x="0.7992%" y="965" width="4.0261%" height="15" fill="rgb(240,54,50)" fg:x="224009671" fg:w="1128440374"/><text x="1.0492%" y="975.50">toki..</text></g><g><title>tokio::runtime::time::Driver::park_internal (1,120,733,421 samples, 4.00%)</title><rect x="0.8267%" y="949" width="3.9986%" height="15" fill="rgb(233,84,52)" fg:x="231716624" fg:w="1120733421"/><text x="1.0767%" y="959.50">toki..</text></g><g><title>tokio::runtime::time::source::TimeSource::tick_to_duration (3,648,419 samples, 0.01%)</title><rect x="4.8123%" y="933" width="0.0130%" height="15" fill="rgb(207,117,47)" fg:x="1348801626" fg:w="3648419"/><text x="5.0623%" y="943.50"></text></g><g><title>core::time::Duration::from_millis (3,648,419 samples, 0.01%)</title><rect x="4.8123%" y="917" width="0.0130%" height="15" fill="rgb(249,43,39)" fg:x="1348801626" fg:w="3648419"/><text x="5.0623%" y="927.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (7,404,616 samples, 0.03%)</title><rect x="4.8253%" y="965" width="0.0264%" height="15" fill="rgb(209,38,44)" fg:x="1352450045" fg:w="7404616"/><text x="5.0753%" y="975.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (7,404,616 samples, 0.03%)</title><rect x="4.8253%" y="949" width="0.0264%" height="15" fill="rgb(236,212,23)" fg:x="1352450045" fg:w="7404616"/><text x="5.0753%" y="959.50"></text></g><g><title>core::cell::BorrowRefMut::new (7,404,616 samples, 0.03%)</title><rect x="4.8253%" y="933" width="0.0264%" height="15" fill="rgb(242,79,21)" fg:x="1352450045" fg:w="7404616"/><text x="5.0753%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (3,943,770 samples, 0.01%)</title><rect x="4.8517%" y="965" width="0.0141%" height="15" fill="rgb(211,96,35)" fg:x="1359854661" fg:w="3943770"/><text x="5.1017%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5,566,367 samples, 0.02%)</title><rect x="4.9512%" y="837" width="0.0199%" height="15" fill="rgb(253,215,40)" fg:x="1387729249" fg:w="5566367"/><text x="5.2012%" y="847.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (5,566,367 samples, 0.02%)</title><rect x="4.9512%" y="821" width="0.0199%" height="15" fill="rgb(211,81,21)" fg:x="1387729249" fg:w="5566367"/><text x="5.2012%" y="831.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (5,566,367 samples, 0.02%)</title><rect x="4.9512%" y="805" width="0.0199%" height="15" fill="rgb(208,190,38)" fg:x="1387729249" fg:w="5566367"/><text x="5.2012%" y="815.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (5,566,367 samples, 0.02%)</title><rect x="4.9512%" y="789" width="0.0199%" height="15" fill="rgb(235,213,38)" fg:x="1387729249" fg:w="5566367"/><text x="5.2012%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tokio::runtime::coop::with_budget::ResetGuard,std::thread::local::AccessError&gt;&gt; (34,825,500 samples, 0.12%)</title><rect x="4.8658%" y="917" width="0.1243%" height="15" fill="rgb(237,122,38)" fg:x="1363798431" fg:w="34825500"/><text x="5.1158%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::with_budget::ResetGuard&gt; (10,894,682 samples, 0.04%)</title><rect x="4.9512%" y="901" width="0.0389%" height="15" fill="rgb(244,218,35)" fg:x="1387729249" fg:w="10894682"/><text x="5.2012%" y="911.50"></text></g><g><title>&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (10,894,682 samples, 0.04%)</title><rect x="4.9512%" y="885" width="0.0389%" height="15" fill="rgb(240,68,47)" fg:x="1387729249" fg:w="10894682"/><text x="5.2012%" y="895.50"></text></g><g><title>tokio::runtime::context::budget (10,894,682 samples, 0.04%)</title><rect x="4.9512%" y="869" width="0.0389%" height="15" fill="rgb(210,16,53)" fg:x="1387729249" fg:w="10894682"/><text x="5.2012%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10,894,682 samples, 0.04%)</title><rect x="4.9512%" y="853" width="0.0389%" height="15" fill="rgb(235,124,12)" fg:x="1387729249" fg:w="10894682"/><text x="5.2012%" y="863.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (5,328,315 samples, 0.02%)</title><rect x="4.9711%" y="837" width="0.0190%" height="15" fill="rgb(224,169,11)" fg:x="1393295616" fg:w="5328315"/><text x="5.2211%" y="847.50"></text></g><g><title>&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop::_{{closure}} (5,328,315 samples, 0.02%)</title><rect x="4.9711%" y="821" width="0.0190%" height="15" fill="rgb(250,166,2)" fg:x="1393295616" fg:w="5328315"/><text x="5.2211%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (5,328,315 samples, 0.02%)</title><rect x="4.9711%" y="805" width="0.0190%" height="15" fill="rgb(242,216,29)" fg:x="1393295616" fg:w="5328315"/><text x="5.2211%" y="815.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (5,328,315 samples, 0.02%)</title><rect x="4.9711%" y="789" width="0.0190%" height="15" fill="rgb(230,116,27)" fg:x="1393295616" fg:w="5328315"/><text x="5.2211%" y="799.50"></text></g><g><title>core::mem::replace (5,328,315 samples, 0.02%)</title><rect x="4.9711%" y="773" width="0.0190%" height="15" fill="rgb(228,99,48)" fg:x="1393295616" fg:w="5328315"/><text x="5.2211%" y="783.50"></text></g><g><title>core::ptr::write (5,328,315 samples, 0.02%)</title><rect x="4.9711%" y="757" width="0.0190%" height="15" fill="rgb(253,11,6)" fg:x="1393295616" fg:w="5328315"/><text x="5.2211%" y="767.50"></text></g><g><title>[libc.so.6] (4,473,783 samples, 0.02%)</title><rect x="5.9226%" y="485" width="0.0160%" height="15" fill="rgb(247,143,39)" fg:x="1660007943" fg:w="4473783"/><text x="6.1726%" y="495.50"></text></g><g><title>ring::digest::BlockContext::finish (32,067,675 samples, 0.11%)</title><rect x="5.9386%" y="469" width="0.1144%" height="15" fill="rgb(236,97,10)" fg:x="1664481726" fg:w="32067675"/><text x="6.1886%" y="479.50"></text></g><g><title>GFp_sha256_block_data_order_ssse3 (32,067,675 samples, 0.11%)</title><rect x="5.9386%" y="453" width="0.1144%" height="15" fill="rgb(233,208,19)" fg:x="1664481726" fg:w="32067675"/><text x="6.1886%" y="463.50"></text></g><g><title>pgdog::auth::scram::server::Server::handle::_{{closure}} (63,405,321 samples, 0.23%)</title><rect x="5.8899%" y="597" width="0.2262%" height="15" fill="rgb(216,164,2)" fg:x="1650835560" fg:w="63405321"/><text x="6.1399%" y="607.50"></text></g><g><title>scram::server::ScramServer&lt;P&gt;::handle_client_first (63,405,321 samples, 0.23%)</title><rect x="5.8899%" y="581" width="0.2262%" height="15" fill="rgb(220,129,5)" fg:x="1650835560" fg:w="63405321"/><text x="6.1399%" y="591.50"></text></g><g><title>&lt;pgdog::auth::scram::server::UserPassword as scram::server::AuthenticationProvider&gt;::get_password_for (63,405,321 samples, 0.23%)</title><rect x="5.8899%" y="565" width="0.2262%" height="15" fill="rgb(242,17,10)" fg:x="1650835560" fg:w="63405321"/><text x="6.1399%" y="575.50"></text></g><g><title>scram::utils::hash_password (63,405,321 samples, 0.23%)</title><rect x="5.8899%" y="549" width="0.2262%" height="15" fill="rgb(242,107,0)" fg:x="1650835560" fg:w="63405321"/><text x="6.1399%" y="559.50"></text></g><g><title>ring::pbkdf2::derive (63,405,321 samples, 0.23%)</title><rect x="5.8899%" y="533" width="0.2262%" height="15" fill="rgb(251,28,31)" fg:x="1650835560" fg:w="63405321"/><text x="6.1399%" y="543.50"></text></g><g><title>ring::pbkdf2::derive_block (63,405,321 samples, 0.23%)</title><rect x="5.8899%" y="517" width="0.2262%" height="15" fill="rgb(233,223,10)" fg:x="1650835560" fg:w="63405321"/><text x="6.1399%" y="527.50"></text></g><g><title>ring::hmac::sign (54,232,938 samples, 0.19%)</title><rect x="5.9226%" y="501" width="0.1935%" height="15" fill="rgb(215,21,27)" fg:x="1660007943" fg:w="54232938"/><text x="6.1726%" y="511.50"></text></g><g><title>ring::hmac::Context::sign (49,759,155 samples, 0.18%)</title><rect x="5.9386%" y="485" width="0.1775%" height="15" fill="rgb(232,23,21)" fg:x="1664481726" fg:w="49759155"/><text x="6.1886%" y="495.50"></text></g><g><title>ring::digest::Context::finish (17,691,480 samples, 0.06%)</title><rect x="6.0530%" y="469" width="0.0631%" height="15" fill="rgb(244,5,23)" fg:x="1696549401" fg:w="17691480"/><text x="6.3030%" y="479.50"></text></g><g><title>ring::digest::BlockContext::finish (17,691,480 samples, 0.06%)</title><rect x="6.0530%" y="453" width="0.0631%" height="15" fill="rgb(226,81,46)" fg:x="1696549401" fg:w="17691480"/><text x="6.3030%" y="463.50"></text></g><g><title>GFp_sha256_block_data_order_ssse3 (13,297,782 samples, 0.05%)</title><rect x="6.0687%" y="437" width="0.0474%" height="15" fill="rgb(247,70,30)" fg:x="1700943099" fg:w="13297782"/><text x="6.3187%" y="447.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (280,217,355 samples, 1.00%)</title><rect x="5.2515%" y="677" width="0.9998%" height="15" fill="rgb(212,68,19)" fg:x="1471910203" fg:w="280217355"/><text x="5.5015%" y="687.50"></text></g><g><title>&lt;tokio_util::task::task_tracker::TrackedFuture&lt;F&gt; as core::future::future::Future&gt;::poll (280,217,355 samples, 1.00%)</title><rect x="5.2515%" y="661" width="0.9998%" height="15" fill="rgb(240,187,13)" fg:x="1471910203" fg:w="280217355"/><text x="5.5015%" y="671.50"></text></g><g><title>pgdog::frontend::listener::Listener::listen::_{{closure}}::_{{closure}} (280,217,355 samples, 1.00%)</title><rect x="5.2515%" y="645" width="0.9998%" height="15" fill="rgb(223,113,26)" fg:x="1471910203" fg:w="280217355"/><text x="5.5015%" y="655.50"></text></g><g><title>pgdog::frontend::listener::Listener::handle_client::_{{closure}} (206,519,336 samples, 0.74%)</title><rect x="5.5145%" y="629" width="0.7368%" height="15" fill="rgb(206,192,2)" fg:x="1545608222" fg:w="206519336"/><text x="5.7645%" y="639.50"></text></g><g><title>pgdog::frontend::client::Client::spawn::_{{closure}} (162,685,631 samples, 0.58%)</title><rect x="5.6709%" y="613" width="0.5804%" height="15" fill="rgb(241,108,4)" fg:x="1589441927" fg:w="162685631"/><text x="5.9209%" y="623.50"></text></g><g><title>pgdog::frontend::client::Client::spawn_internal::_{{closure}} (37,886,677 samples, 0.14%)</title><rect x="6.1161%" y="597" width="0.1352%" height="15" fill="rgb(247,173,49)" fg:x="1714240881" fg:w="37886677"/><text x="6.3661%" y="607.50"></text></g><g><title>pgdog::frontend::client::Client::run::_{{closure}} (7,940,131 samples, 0.03%)</title><rect x="6.2230%" y="581" width="0.0283%" height="15" fill="rgb(224,114,35)" fg:x="1744187427" fg:w="7940131"/><text x="6.4730%" y="591.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (294,987,447 samples, 1.05%)</title><rect x="5.2515%" y="821" width="1.0525%" height="15" fill="rgb(245,159,27)" fg:x="1471910203" fg:w="294987447"/><text x="5.5015%" y="831.50"></text></g><g><title>std::panic::catch_unwind (294,987,447 samples, 1.05%)</title><rect x="5.2515%" y="805" width="1.0525%" height="15" fill="rgb(245,172,44)" fg:x="1471910203" fg:w="294987447"/><text x="5.5015%" y="815.50"></text></g><g><title>std::panicking::try (294,987,447 samples, 1.05%)</title><rect x="5.2515%" y="789" width="1.0525%" height="15" fill="rgb(236,23,11)" fg:x="1471910203" fg:w="294987447"/><text x="5.5015%" y="799.50"></text></g><g><title>std::panicking::try::do_call (294,987,447 samples, 1.05%)</title><rect x="5.2515%" y="773" width="1.0525%" height="15" fill="rgb(205,117,38)" fg:x="1471910203" fg:w="294987447"/><text x="5.5015%" y="783.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (294,987,447 samples, 1.05%)</title><rect x="5.2515%" y="757" width="1.0525%" height="15" fill="rgb(237,72,25)" fg:x="1471910203" fg:w="294987447"/><text x="5.5015%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (294,987,447 samples, 1.05%)</title><rect x="5.2515%" y="741" width="1.0525%" height="15" fill="rgb(244,70,9)" fg:x="1471910203" fg:w="294987447"/><text x="5.5015%" y="751.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (294,987,447 samples, 1.05%)</title><rect x="5.2515%" y="725" width="1.0525%" height="15" fill="rgb(217,125,39)" fg:x="1471910203" fg:w="294987447"/><text x="5.5015%" y="735.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (294,987,447 samples, 1.05%)</title><rect x="5.2515%" y="709" width="1.0525%" height="15" fill="rgb(235,36,10)" fg:x="1471910203" fg:w="294987447"/><text x="5.5015%" y="719.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (294,987,447 samples, 1.05%)</title><rect x="5.2515%" y="693" width="1.0525%" height="15" fill="rgb(251,123,47)" fg:x="1471910203" fg:w="294987447"/><text x="5.5015%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (14,770,092 samples, 0.05%)</title><rect x="6.2513%" y="677" width="0.0527%" height="15" fill="rgb(221,13,13)" fg:x="1752127558" fg:w="14770092"/><text x="6.5013%" y="687.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (14,770,092 samples, 0.05%)</title><rect x="6.2513%" y="661" width="0.0527%" height="15" fill="rgb(238,131,9)" fg:x="1752127558" fg:w="14770092"/><text x="6.5013%" y="671.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (14,770,092 samples, 0.05%)</title><rect x="6.2513%" y="645" width="0.0527%" height="15" fill="rgb(211,50,8)" fg:x="1752127558" fg:w="14770092"/><text x="6.5013%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14,770,092 samples, 0.05%)</title><rect x="6.2513%" y="629" width="0.0527%" height="15" fill="rgb(245,182,24)" fg:x="1752127558" fg:w="14770092"/><text x="6.5013%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (14,770,092 samples, 0.05%)</title><rect x="6.2513%" y="613" width="0.0527%" height="15" fill="rgb(242,14,37)" fg:x="1752127558" fg:w="14770092"/><text x="6.5013%" y="623.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (14,770,092 samples, 0.05%)</title><rect x="6.2513%" y="597" width="0.0527%" height="15" fill="rgb(246,228,12)" fg:x="1752127558" fg:w="14770092"/><text x="6.5013%" y="607.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (14,770,092 samples, 0.05%)</title><rect x="6.2513%" y="581" width="0.0527%" height="15" fill="rgb(213,55,15)" fg:x="1752127558" fg:w="14770092"/><text x="6.5013%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (14,770,092 samples, 0.05%)</title><rect x="6.2513%" y="565" width="0.0527%" height="15" fill="rgb(209,9,3)" fg:x="1752127558" fg:w="14770092"/><text x="6.5013%" y="575.50"></text></g><g><title>tokio::runtime::task::state::State::load (12,875,332 samples, 0.05%)</title><rect x="6.3445%" y="789" width="0.0459%" height="15" fill="rgb(230,59,30)" fg:x="1778257324" fg:w="12875332"/><text x="6.5945%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12,875,332 samples, 0.05%)</title><rect x="6.3445%" y="773" width="0.0459%" height="15" fill="rgb(209,121,21)" fg:x="1778257324" fg:w="12875332"/><text x="6.5945%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (12,875,332 samples, 0.05%)</title><rect x="6.3445%" y="757" width="0.0459%" height="15" fill="rgb(220,109,13)" fg:x="1778257324" fg:w="12875332"/><text x="6.5945%" y="767.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (39,412,386 samples, 0.14%)</title><rect x="6.3040%" y="821" width="0.1406%" height="15" fill="rgb(232,18,1)" fg:x="1766897650" fg:w="39412386"/><text x="6.5540%" y="831.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (39,412,386 samples, 0.14%)</title><rect x="6.3040%" y="805" width="0.1406%" height="15" fill="rgb(215,41,42)" fg:x="1766897650" fg:w="39412386"/><text x="6.5540%" y="815.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle::_{{closure}} (15,177,380 samples, 0.05%)</title><rect x="6.3905%" y="789" width="0.0542%" height="15" fill="rgb(224,123,36)" fg:x="1791132656" fg:w="15177380"/><text x="6.6405%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (461,486,090 samples, 1.65%)</title><rect x="4.8253%" y="997" width="1.6465%" height="15" fill="rgb(240,125,3)" fg:x="1352450045" fg:w="461486090"/><text x="5.0753%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (461,486,090 samples, 1.65%)</title><rect x="4.8253%" y="981" width="1.6465%" height="15" fill="rgb(205,98,50)" fg:x="1352450045" fg:w="461486090"/><text x="5.0753%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task::_{{closure}} (450,137,704 samples, 1.61%)</title><rect x="4.8658%" y="965" width="1.6060%" height="15" fill="rgb(205,185,37)" fg:x="1363798431" fg:w="450137704"/><text x="5.1158%" y="975.50"></text></g><g><title>tokio::runtime::coop::budget (450,137,704 samples, 1.61%)</title><rect x="4.8658%" y="949" width="1.6060%" height="15" fill="rgb(238,207,15)" fg:x="1363798431" fg:w="450137704"/><text x="5.1158%" y="959.50"></text></g><g><title>tokio::runtime::coop::with_budget (450,137,704 samples, 1.61%)</title><rect x="4.8658%" y="933" width="1.6060%" height="15" fill="rgb(213,199,42)" fg:x="1363798431" fg:w="450137704"/><text x="5.1158%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::_{{closure}}::_{{closure}} (415,312,204 samples, 1.48%)</title><rect x="4.9901%" y="917" width="1.4818%" height="15" fill="rgb(235,201,11)" fg:x="1398623931" fg:w="415312204"/><text x="5.2401%" y="927.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (415,312,204 samples, 1.48%)</title><rect x="4.9901%" y="901" width="1.4818%" height="15" fill="rgb(207,46,11)" fg:x="1398623931" fg:w="415312204"/><text x="5.2401%" y="911.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (415,312,204 samples, 1.48%)</title><rect x="4.9901%" y="885" width="1.4818%" height="15" fill="rgb(241,35,35)" fg:x="1398623931" fg:w="415312204"/><text x="5.2401%" y="895.50"></text></g><g><title>tokio::runtime::task::raw::poll (398,222,825 samples, 1.42%)</title><rect x="5.0510%" y="869" width="1.4208%" height="15" fill="rgb(243,32,47)" fg:x="1415713310" fg:w="398222825"/><text x="5.3010%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (348,016,988 samples, 1.24%)</title><rect x="5.2302%" y="853" width="1.2417%" height="15" fill="rgb(247,202,23)" fg:x="1465919147" fg:w="348016988"/><text x="5.4802%" y="863.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (348,016,988 samples, 1.24%)</title><rect x="5.2302%" y="837" width="1.2417%" height="15" fill="rgb(219,102,11)" fg:x="1465919147" fg:w="348016988"/><text x="5.4802%" y="847.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (7,626,099 samples, 0.03%)</title><rect x="6.4446%" y="821" width="0.0272%" height="15" fill="rgb(243,110,44)" fg:x="1806310036" fg:w="7626099"/><text x="6.6946%" y="831.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (7,626,099 samples, 0.03%)</title><rect x="6.4446%" y="805" width="0.0272%" height="15" fill="rgb(222,74,54)" fg:x="1806310036" fg:w="7626099"/><text x="6.6946%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (7,429,504 samples, 0.03%)</title><rect x="6.5643%" y="981" width="0.0265%" height="15" fill="rgb(216,99,12)" fg:x="1839839416" fg:w="7429504"/><text x="6.8143%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Core::next_task::_{{closure}} (7,429,504 samples, 0.03%)</title><rect x="6.5643%" y="965" width="0.0265%" height="15" fill="rgb(226,22,26)" fg:x="1839839416" fg:w="7429504"/><text x="6.8143%" y="975.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Handle::next_remote_task (5,639,468 samples, 0.02%)</title><rect x="6.5706%" y="949" width="0.0201%" height="15" fill="rgb(217,163,10)" fg:x="1841629452" fg:w="5639468"/><text x="6.8206%" y="959.50"></text></g><g><title>tokio::runtime::scheduler::inject::Inject&lt;T&gt;::pop (5,639,468 samples, 0.02%)</title><rect x="6.5706%" y="933" width="0.0201%" height="15" fill="rgb(213,25,53)" fg:x="1841629452" fg:w="5639468"/><text x="6.8206%" y="943.50"></text></g><g><title>tokio::runtime::scheduler::current_thread::Core::next_task (37,178,685 samples, 0.13%)</title><rect x="6.4718%" y="997" width="0.1326%" height="15" fill="rgb(252,105,26)" fg:x="1813936135" fg:w="37178685"/><text x="6.7218%" y="1007.50"></text></g><g><title>_start (1,692,716,873 samples, 6.04%)</title><rect x="0.5975%" y="1349" width="6.0393%" height="15" fill="rgb(220,39,43)" fg:x="167468284" fg:w="1692716873"/><text x="0.8475%" y="1359.50">_start</text></g><g><title>__libc_start_main (1,692,716,873 samples, 6.04%)</title><rect x="0.5975%" y="1333" width="6.0393%" height="15" fill="rgb(229,68,48)" fg:x="167468284" fg:w="1692716873"/><text x="0.8475%" y="1343.50">__libc_s..</text></g><g><title>[libc.so.6] (1,692,716,873 samples, 6.04%)</title><rect x="0.5975%" y="1317" width="6.0393%" height="15" fill="rgb(252,8,32)" fg:x="167468284" fg:w="1692716873"/><text x="0.8475%" y="1327.50">[libc.so..</text></g><g><title>main (1,692,716,873 samples, 6.04%)</title><rect x="0.5975%" y="1301" width="6.0393%" height="15" fill="rgb(223,20,43)" fg:x="167468284" fg:w="1692716873"/><text x="0.8475%" y="1311.50">main</text></g><g><title>std::rt::lang_start::_{{closure}} (1,692,716,873 samples, 6.04%)</title><rect x="0.5975%" y="1285" width="6.0393%" height="15" fill="rgb(229,81,49)" fg:x="167468284" fg:w="1692716873"/><text x="0.8475%" y="1295.50">std::rt:..</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (1,692,716,873 samples, 6.04%)</title><rect x="0.5975%" y="1269" width="6.0393%" height="15" fill="rgb(236,28,36)" fg:x="167468284" fg:w="1692716873"/><text x="0.8475%" y="1279.50">std::sys..</text></g><g><title>core::ops::function::FnOnce::call_once (1,692,716,873 samples, 6.04%)</title><rect x="0.5975%" y="1253" width="6.0393%" height="15" fill="rgb(249,185,26)" fg:x="167468284" fg:w="1692716873"/><text x="0.8475%" y="1263.50">core::op..</text></g><g><title>pgdog::main (1,692,716,873 samples, 6.04%)</title><rect x="0.5975%" y="1237" width="6.0393%" height="15" fill="rgb(249,174,33)" fg:x="167468284" fg:w="1692716873"/><text x="0.8475%" y="1247.50">pgdog::m..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (1,689,972,914 samples, 6.03%)</title><rect x="0.6073%" y="1221" width="6.0296%" height="15" fill="rgb(233,201,37)" fg:x="170212243" fg:w="1689972914"/><text x="0.8573%" y="1231.50">tokio::r..</text></g><g><title>tokio::runtime::runtime::Runtime::block_on_inner (1,689,972,914 samples, 6.03%)</title><rect x="0.6073%" y="1205" width="6.0296%" height="15" fill="rgb(221,78,26)" fg:x="170212243" fg:w="1689972914"/><text x="0.8573%" y="1215.50">tokio::r..</text></g><g><title>tokio::runtime::scheduler::current_thread::CurrentThread::block_on (1,689,972,914 samples, 6.03%)</title><rect x="0.6073%" y="1189" width="6.0296%" height="15" fill="rgb(250,127,30)" fg:x="170212243" fg:w="1689972914"/><text x="0.8573%" y="1199.50">tokio::r..</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (1,689,972,914 samples, 6.03%)</title><rect x="0.6073%" y="1173" width="6.0296%" height="15" fill="rgb(230,49,44)" fg:x="170212243" fg:w="1689972914"/><text x="0.8573%" y="1183.50">tokio::r..</text></g><g><title>tokio::runtime::scheduler::current_thread::CurrentThread::block_on::_{{closure}} (1,689,972,914 samples, 6.03%)</title><rect x="0.6073%" y="1157" width="6.0296%" height="15" fill="rgb(229,67,23)" fg:x="170212243" fg:w="1689972914"/><text x="0.8573%" y="1167.50">tokio::r..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (1,689,972,914 samples, 6.03%)</title><rect x="0.6073%" y="1141" width="6.0296%" height="15" fill="rgb(249,83,47)" fg:x="170212243" fg:w="1689972914"/><text x="0.8573%" y="1151.50">tokio::r..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::enter (1,689,972,914 samples, 6.03%)</title><rect x="0.6073%" y="1125" width="6.0296%" height="15" fill="rgb(215,43,3)" fg:x="170212243" fg:w="1689972914"/><text x="0.8573%" y="1135.50">tokio::r..</text></g><g><title>tokio::runtime::context::set_scheduler (1,689,972,914 samples, 6.03%)</title><rect x="0.6073%" y="1109" width="6.0296%" height="15" fill="rgb(238,154,13)" fg:x="170212243" fg:w="1689972914"/><text x="0.8573%" y="1119.50">tokio::r..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,689,972,914 samples, 6.03%)</title><rect x="0.6073%" y="1093" width="6.0296%" height="15" fill="rgb(219,56,2)" fg:x="170212243" fg:w="1689972914"/><text x="0.8573%" y="1103.50">std::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,689,972,914 samples, 6.03%)</title><rect x="0.6073%" y="1077" width="6.0296%" height="15" fill="rgb(233,0,4)" fg:x="170212243" fg:w="1689972914"/><text x="0.8573%" y="1087.50">std::thr..</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (1,689,972,914 samples, 6.03%)</title><rect x="0.6073%" y="1061" width="6.0296%" height="15" fill="rgb(235,30,7)" fg:x="170212243" fg:w="1689972914"/><text x="0.8573%" y="1071.50">tokio::r..</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (1,689,972,914 samples, 6.03%)</title><rect x="0.6073%" y="1045" width="6.0296%" height="15" fill="rgb(250,79,13)" fg:x="170212243" fg:w="1689972914"/><text x="0.8573%" y="1055.50">tokio::r..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::enter::_{{closure}} (1,689,972,914 samples, 6.03%)</title><rect x="0.6073%" y="1029" width="6.0296%" height="15" fill="rgb(211,146,34)" fg:x="170212243" fg:w="1689972914"/><text x="0.8573%" y="1039.50">tokio::r..</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::_{{closure}} (1,689,972,914 samples, 6.03%)</title><rect x="0.6073%" y="1013" width="6.0296%" height="15" fill="rgb(228,22,38)" fg:x="170212243" fg:w="1689972914"/><text x="0.8573%" y="1023.50">tokio::r..</text></g><g><title>tokio::runtime::scheduler::defer::Defer::is_empty (7,195,040 samples, 0.03%)</title><rect x="6.6112%" y="997" width="0.0257%" height="15" fill="rgb(235,168,5)" fg:x="1852990117" fg:w="7195040"/><text x="6.8612%" y="1007.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (7,195,040 samples, 0.03%)</title><rect x="6.6112%" y="981" width="0.0257%" height="15" fill="rgb(221,155,16)" fg:x="1852990117" fg:w="7195040"/><text x="6.8612%" y="991.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (7,195,040 samples, 0.03%)</title><rect x="6.6112%" y="965" width="0.0257%" height="15" fill="rgb(215,215,53)" fg:x="1852990117" fg:w="7195040"/><text x="6.8612%" y="975.50"></text></g><g><title>core::cell::BorrowRef::new (7,195,040 samples, 0.03%)</title><rect x="6.6112%" y="949" width="0.0257%" height="15" fill="rgb(223,4,10)" fg:x="1852990117" fg:w="7195040"/><text x="6.8612%" y="959.50"></text></g><g><title>core::cell::is_reading (7,195,040 samples, 0.03%)</title><rect x="6.6112%" y="933" width="0.0257%" height="15" fill="rgb(234,103,6)" fg:x="1852990117" fg:w="7195040"/><text x="6.8612%" y="943.50"></text></g><g><title>[libc.so.6] (598,024,433 samples, 2.13%)</title><rect x="6.7836%" y="1173" width="2.1337%" height="15" fill="rgb(227,97,0)" fg:x="1901329828" fg:w="598024433"/><text x="7.0336%" y="1183.50">[..</text></g><g><title>[libc.so.6] (97,512,936 samples, 0.35%)</title><rect x="8.9173%" y="1157" width="0.3479%" height="15" fill="rgb(234,150,53)" fg:x="2499354261" fg:w="97512936"/><text x="9.1673%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (114,391,040 samples, 0.41%)</title><rect x="8.9173%" y="1173" width="0.4081%" height="15" fill="rgb(228,201,54)" fg:x="2499354261" fg:w="114391040"/><text x="9.1673%" y="1183.50"></text></g><g><title>pgdog::backend::pool::pool_impl::Pool::get_internal::_{{closure}}::_{{closure}} (16,878,104 samples, 0.06%)</title><rect x="9.2652%" y="1157" width="0.0602%" height="15" fill="rgb(222,22,37)" fg:x="2596867197" fg:w="16878104"/><text x="9.5152%" y="1167.50"></text></g><g><title>&lt;pgdog::backend::pool::pool_impl::Pool as core::clone::Clone&gt;::clone (16,878,104 samples, 0.06%)</title><rect x="9.2652%" y="1141" width="0.0602%" height="15" fill="rgb(237,53,32)" fg:x="2596867197" fg:w="16878104"/><text x="9.5152%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (16,878,104 samples, 0.06%)</title><rect x="9.2652%" y="1125" width="0.0602%" height="15" fill="rgb(233,25,53)" fg:x="2596867197" fg:w="16878104"/><text x="9.5152%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (16,878,104 samples, 0.06%)</title><rect x="9.2652%" y="1109" width="0.0602%" height="15" fill="rgb(210,40,34)" fg:x="2596867197" fg:w="16878104"/><text x="9.5152%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_add (16,878,104 samples, 0.06%)</title><rect x="9.2652%" y="1093" width="0.0602%" height="15" fill="rgb(241,220,44)" fg:x="2596867197" fg:w="16878104"/><text x="9.5152%" y="1103.50"></text></g><g><title>core::time::Duration::as_micros (5,490,322 samples, 0.02%)</title><rect x="9.3390%" y="1173" width="0.0196%" height="15" fill="rgb(235,28,35)" fg:x="2617537237" fg:w="5490322"/><text x="9.5890%" y="1183.50"></text></g><g><title>pgdog::backend::pool::config::Config::healthcheck_timeout (3,685,936 samples, 0.01%)</title><rect x="9.3713%" y="1173" width="0.0132%" height="15" fill="rgb(210,56,17)" fg:x="2626593293" fg:w="3685936"/><text x="9.6213%" y="1183.50"></text></g><g><title>core::time::Duration::from_millis (3,685,936 samples, 0.01%)</title><rect x="9.3713%" y="1157" width="0.0132%" height="15" fill="rgb(224,130,29)" fg:x="2626593293" fg:w="3685936"/><text x="9.6213%" y="1167.50"></text></g><g><title>[libc.so.6] (181,212,957 samples, 0.65%)</title><rect x="9.4236%" y="1157" width="0.6465%" height="15" fill="rgb(235,212,8)" fg:x="2641258479" fg:w="181212957"/><text x="9.6736%" y="1167.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (124,180,752 samples, 0.44%)</title><rect x="10.0701%" y="1141" width="0.4431%" height="15" fill="rgb(223,33,50)" fg:x="2822471436" fg:w="124180752"/><text x="10.3201%" y="1151.50"></text></g><g><title>core::ptr::read (124,180,752 samples, 0.44%)</title><rect x="10.0701%" y="1125" width="0.4431%" height="15" fill="rgb(219,149,13)" fg:x="2822471436" fg:w="124180752"/><text x="10.3201%" y="1135.50"></text></g><g><title>[libc.so.6] (111,212,408 samples, 0.40%)</title><rect x="10.1164%" y="1109" width="0.3968%" height="15" fill="rgb(250,156,29)" fg:x="2835439780" fg:w="111212408"/><text x="10.3664%" y="1119.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_back (125,998,986 samples, 0.45%)</title><rect x="10.0701%" y="1157" width="0.4495%" height="15" fill="rgb(216,193,19)" fg:x="2822471436" fg:w="125998986"/><text x="10.3201%" y="1167.50"></text></g><g><title>pgdog::backend::pool::inner::Inner::take (333,272,782 samples, 1.19%)</title><rect x="9.3844%" y="1173" width="1.1891%" height="15" fill="rgb(216,135,14)" fg:x="2630279229" fg:w="333272782"/><text x="9.6344%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15,081,589 samples, 0.05%)</title><rect x="10.5197%" y="1157" width="0.0538%" height="15" fill="rgb(241,47,5)" fg:x="2948470422" fg:w="15081589"/><text x="10.7697%" y="1167.50"></text></g><g><title>core::ptr::write (9,458,244 samples, 0.03%)</title><rect x="10.5397%" y="1141" width="0.0337%" height="15" fill="rgb(233,42,35)" fg:x="2954093767" fg:w="9458244"/><text x="10.7897%" y="1151.50"></text></g><g><title>pgdog::backend::pool::pool_impl::Pool::lock (9,266,852 samples, 0.03%)</title><rect x="10.5735%" y="1173" width="0.0331%" height="15" fill="rgb(231,13,6)" fg:x="2963552011" fg:w="9266852"/><text x="10.8235%" y="1183.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (9,266,852 samples, 0.03%)</title><rect x="10.5735%" y="1157" width="0.0331%" height="15" fill="rgb(207,181,40)" fg:x="2963552011" fg:w="9266852"/><text x="10.8235%" y="1167.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (9,266,852 samples, 0.03%)</title><rect x="10.5735%" y="1141" width="0.0331%" height="15" fill="rgb(254,173,49)" fg:x="2963552011" fg:w="9266852"/><text x="10.8235%" y="1151.50"></text></g><g><title>&lt;pgdog::backend::pool::guard::Guard as core::ops::deref::DerefMut&gt;::deref_mut (3,679,592 samples, 0.01%)</title><rect x="10.6451%" y="1157" width="0.0131%" height="15" fill="rgb(221,1,38)" fg:x="2983612341" fg:w="3679592"/><text x="10.8951%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (3,679,592 samples, 0.01%)</title><rect x="10.6451%" y="1141" width="0.0131%" height="15" fill="rgb(206,124,46)" fg:x="2983612341" fg:w="3679592"/><text x="10.8951%" y="1151.50"></text></g><g><title>&lt;pgdog::backend::pool::pool_impl::Pool as core::clone::Clone&gt;::clone (5,392,078 samples, 0.02%)</title><rect x="10.6582%" y="1157" width="0.0192%" height="15" fill="rgb(249,21,11)" fg:x="2987291933" fg:w="5392078"/><text x="10.9082%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,392,078 samples, 0.02%)</title><rect x="10.6582%" y="1141" width="0.0192%" height="15" fill="rgb(222,201,40)" fg:x="2987291933" fg:w="5392078"/><text x="10.9082%" y="1151.50"></text></g><g><title>[libc.so.6] (260,986,966 samples, 0.93%)</title><rect x="10.6774%" y="1157" width="0.9312%" height="15" fill="rgb(235,61,29)" fg:x="2992684011" fg:w="260986966"/><text x="10.9274%" y="1167.50"></text></g><g><title>pgdog::backend::pool::healthcheck::Healtcheck::conditional (3,696,798 samples, 0.01%)</title><rect x="11.6086%" y="1157" width="0.0132%" height="15" fill="rgb(219,207,3)" fg:x="3253670977" fg:w="3696798"/><text x="11.8586%" y="1167.50"></text></g><g><title>pgdog::backend::server::Server::healthcheck_age (18,863,831 samples, 0.07%)</title><rect x="11.8285%" y="1141" width="0.0673%" height="15" fill="rgb(222,56,46)" fg:x="3315309903" fg:w="18863831"/><text x="12.0785%" y="1151.50"></text></g><g><title>std::time::Instant::duration_since (18,863,831 samples, 0.07%)</title><rect x="11.8285%" y="1125" width="0.0673%" height="15" fill="rgb(239,76,54)" fg:x="3315309903" fg:w="18863831"/><text x="12.0785%" y="1135.50"></text></g><g><title>std::time::Instant::checked_duration_since (18,863,831 samples, 0.07%)</title><rect x="11.8285%" y="1109" width="0.0673%" height="15" fill="rgb(231,124,27)" fg:x="3315309903" fg:w="18863831"/><text x="12.0785%" y="1119.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (18,863,831 samples, 0.07%)</title><rect x="11.8285%" y="1093" width="0.0673%" height="15" fill="rgb(249,195,6)" fg:x="3315309903" fg:w="18863831"/><text x="12.0785%" y="1103.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (18,863,831 samples, 0.07%)</title><rect x="11.8285%" y="1077" width="0.0673%" height="15" fill="rgb(237,174,47)" fg:x="3315309903" fg:w="18863831"/><text x="12.0785%" y="1087.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (9,416,780 samples, 0.03%)</title><rect x="11.8622%" y="1061" width="0.0336%" height="15" fill="rgb(206,201,31)" fg:x="3324756954" fg:w="9416780"/><text x="12.1122%" y="1071.50"></text></g><g><title>core::cmp::PartialOrd::ge (9,416,780 samples, 0.03%)</title><rect x="11.8622%" y="1045" width="0.0336%" height="15" fill="rgb(231,57,52)" fg:x="3324756954" fg:w="9416780"/><text x="12.1122%" y="1055.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (9,416,780 samples, 0.03%)</title><rect x="11.8622%" y="1029" width="0.0336%" height="15" fill="rgb(248,177,22)" fg:x="3324756954" fg:w="9416780"/><text x="12.1122%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (7,632,472 samples, 0.03%)</title><rect x="11.8686%" y="1013" width="0.0272%" height="15" fill="rgb(215,211,37)" fg:x="3326541262" fg:w="7632472"/><text x="12.1186%" y="1023.50"></text></g><g><title>clock_gettime (97,227,704 samples, 0.35%)</title><rect x="11.9085%" y="1093" width="0.3469%" height="15" fill="rgb(241,128,51)" fg:x="3337733195" fg:w="97227704"/><text x="12.1585%" y="1103.50"></text></g><g><title>__vdso_clock_gettime (89,762,032 samples, 0.32%)</title><rect x="11.9351%" y="1077" width="0.3203%" height="15" fill="rgb(227,165,31)" fg:x="3345198867" fg:w="89762032"/><text x="12.1851%" y="1087.50"></text></g><g><title>pgdog::backend::pool::pool_impl::Pool::maybe_healthcheck::_{{closure}} (477,054,100 samples, 1.70%)</title><rect x="10.6065%" y="1173" width="1.7021%" height="15" fill="rgb(228,167,24)" fg:x="2972818863" fg:w="477054100"/><text x="10.8565%" y="1183.50"></text></g><g><title>pgdog::backend::pool::healthcheck::Healtcheck::healthcheck::_{{closure}} (192,505,188 samples, 0.69%)</title><rect x="11.6218%" y="1157" width="0.6868%" height="15" fill="rgb(228,143,12)" fg:x="3257367775" fg:w="192505188"/><text x="11.8718%" y="1167.50"></text></g><g><title>std::time::Instant::now (115,699,229 samples, 0.41%)</title><rect x="11.8958%" y="1141" width="0.4128%" height="15" fill="rgb(249,149,8)" fg:x="3334173734" fg:w="115699229"/><text x="12.1458%" y="1151.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (115,699,229 samples, 0.41%)</title><rect x="11.8958%" y="1125" width="0.4128%" height="15" fill="rgb(243,35,44)" fg:x="3334173734" fg:w="115699229"/><text x="12.1458%" y="1135.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (115,699,229 samples, 0.41%)</title><rect x="11.8958%" y="1109" width="0.4128%" height="15" fill="rgb(246,89,9)" fg:x="3334173734" fg:w="115699229"/><text x="12.1458%" y="1119.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (14,912,064 samples, 0.05%)</title><rect x="12.2554%" y="1093" width="0.0532%" height="15" fill="rgb(233,213,13)" fg:x="3434960899" fg:w="14912064"/><text x="12.5054%" y="1103.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (3,701,730 samples, 0.01%)</title><rect x="12.3086%" y="1093" width="0.0132%" height="15" fill="rgb(233,141,41)" fg:x="3449872963" fg:w="3701730"/><text x="12.5586%" y="1103.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (18,810,237 samples, 0.07%)</title><rect x="12.3086%" y="1157" width="0.0671%" height="15" fill="rgb(239,167,4)" fg:x="3449872963" fg:w="18810237"/><text x="12.5586%" y="1167.50"></text></g><g><title>std::time::Instant::duration_since (18,810,237 samples, 0.07%)</title><rect x="12.3086%" y="1141" width="0.0671%" height="15" fill="rgb(209,217,16)" fg:x="3449872963" fg:w="18810237"/><text x="12.5586%" y="1151.50"></text></g><g><title>std::time::Instant::checked_duration_since (18,810,237 samples, 0.07%)</title><rect x="12.3086%" y="1125" width="0.0671%" height="15" fill="rgb(219,88,35)" fg:x="3449872963" fg:w="18810237"/><text x="12.5586%" y="1135.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (18,810,237 samples, 0.07%)</title><rect x="12.3086%" y="1109" width="0.0671%" height="15" fill="rgb(220,193,23)" fg:x="3449872963" fg:w="18810237"/><text x="12.5586%" y="1119.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (15,108,507 samples, 0.05%)</title><rect x="12.3218%" y="1093" width="0.0539%" height="15" fill="rgb(230,90,52)" fg:x="3453574693" fg:w="15108507"/><text x="12.5718%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (5,881,269 samples, 0.02%)</title><rect x="12.3547%" y="1077" width="0.0210%" height="15" fill="rgb(252,106,19)" fg:x="3462801931" fg:w="5881269"/><text x="12.6047%" y="1087.50"></text></g><g><title>core::cmp::PartialOrd::ge (5,881,269 samples, 0.02%)</title><rect x="12.3547%" y="1061" width="0.0210%" height="15" fill="rgb(206,74,20)" fg:x="3462801931" fg:w="5881269"/><text x="12.6047%" y="1071.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (3,852,307 samples, 0.01%)</title><rect x="12.3620%" y="1045" width="0.0137%" height="15" fill="rgb(230,138,44)" fg:x="3464830893" fg:w="3852307"/><text x="12.6120%" y="1055.50"></text></g><g><title>clock_gettime (101,472,118 samples, 0.36%)</title><rect x="12.3824%" y="1109" width="0.3620%" height="15" fill="rgb(235,182,43)" fg:x="3470545298" fg:w="101472118"/><text x="12.6324%" y="1119.50"></text></g><g><title>__vdso_clock_gettime (92,299,561 samples, 0.33%)</title><rect x="12.4151%" y="1093" width="0.3293%" height="15" fill="rgb(242,16,51)" fg:x="3479717855" fg:w="92299561"/><text x="12.6651%" y="1103.50"></text></g><g><title>pgdog::frontend::client::Client::spawn::_{{closure}} (1,719,218,052 samples, 6.13%)</title><rect x="6.6368%" y="1349" width="6.1339%" height="15" fill="rgb(248,9,4)" fg:x="1860185157" fg:w="1719218052"/><text x="6.8868%" y="1359.50">pgdog::f..</text></g><g><title>pgdog::frontend::client::Client::spawn_internal::_{{closure}} (1,719,218,052 samples, 6.13%)</title><rect x="6.6368%" y="1333" width="6.1339%" height="15" fill="rgb(210,31,22)" fg:x="1860185157" fg:w="1719218052"/><text x="6.8868%" y="1343.50">pgdog::f..</text></g><g><title>pgdog::frontend::client::Client::run::_{{closure}} (1,719,218,052 samples, 6.13%)</title><rect x="6.6368%" y="1317" width="6.1339%" height="15" fill="rgb(239,54,39)" fg:x="1860185157" fg:w="1719218052"/><text x="6.8868%" y="1327.50">pgdog::f..</text></g><g><title>pgdog::frontend::client::Client::client_messages::_{{closure}} (1,719,218,052 samples, 6.13%)</title><rect x="6.6368%" y="1301" width="6.1339%" height="15" fill="rgb(230,99,41)" fg:x="1860185157" fg:w="1719218052"/><text x="6.8868%" y="1311.50">pgdog::f..</text></g><g><title>pgdog::frontend::client::inner::Inner::connect::_{{closure}} (1,719,218,052 samples, 6.13%)</title><rect x="6.6368%" y="1285" width="6.1339%" height="15" fill="rgb(253,106,12)" fg:x="1860185157" fg:w="1719218052"/><text x="6.8868%" y="1295.50">pgdog::f..</text></g><g><title>pgdog::backend::pool::connection::Connection::connect::_{{closure}} (1,719,218,052 samples, 6.13%)</title><rect x="6.6368%" y="1269" width="6.1339%" height="15" fill="rgb(213,46,41)" fg:x="1860185157" fg:w="1719218052"/><text x="6.8868%" y="1279.50">pgdog::b..</text></g><g><title>pgdog::backend::pool::connection::Connection::try_conn::_{{closure}} (1,719,218,052 samples, 6.13%)</title><rect x="6.6368%" y="1253" width="6.1339%" height="15" fill="rgb(215,133,35)" fg:x="1860185157" fg:w="1719218052"/><text x="6.8868%" y="1263.50">pgdog::b..</text></g><g><title>pgdog::backend::pool::cluster::Cluster::primary::_{{closure}} (1,719,218,052 samples, 6.13%)</title><rect x="6.6368%" y="1237" width="6.1339%" height="15" fill="rgb(213,28,5)" fg:x="1860185157" fg:w="1719218052"/><text x="6.8868%" y="1247.50">pgdog::b..</text></g><g><title>pgdog::backend::pool::shard::Shard::primary::_{{closure}} (1,719,218,052 samples, 6.13%)</title><rect x="6.6368%" y="1221" width="6.1339%" height="15" fill="rgb(215,77,49)" fg:x="1860185157" fg:w="1719218052"/><text x="6.8868%" y="1231.50">pgdog::b..</text></g><g><title>pgdog::backend::pool::pool_impl::Pool::get_forced::_{{closure}} (1,719,218,052 samples, 6.13%)</title><rect x="6.6368%" y="1205" width="6.1339%" height="15" fill="rgb(248,100,22)" fg:x="1860185157" fg:w="1719218052"/><text x="6.8868%" y="1215.50">pgdog::b..</text></g><g><title>pgdog::backend::pool::pool_impl::Pool::get_internal::_{{closure}} (1,719,218,052 samples, 6.13%)</title><rect x="6.6368%" y="1189" width="6.1339%" height="15" fill="rgb(208,67,9)" fg:x="1860185157" fg:w="1719218052"/><text x="6.8868%" y="1199.50">pgdog::b..</text></g><g><title>std::time::Instant::elapsed (129,530,246 samples, 0.46%)</title><rect x="12.3086%" y="1173" width="0.4621%" height="15" fill="rgb(219,133,21)" fg:x="3449872963" fg:w="129530246"/><text x="12.5586%" y="1183.50"></text></g><g><title>std::time::Instant::now (110,720,009 samples, 0.40%)</title><rect x="12.3757%" y="1157" width="0.3950%" height="15" fill="rgb(246,46,29)" fg:x="3468683200" fg:w="110720009"/><text x="12.6257%" y="1167.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (110,720,009 samples, 0.40%)</title><rect x="12.3757%" y="1141" width="0.3950%" height="15" fill="rgb(246,185,52)" fg:x="3468683200" fg:w="110720009"/><text x="12.6257%" y="1151.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (110,720,009 samples, 0.40%)</title><rect x="12.3757%" y="1125" width="0.3950%" height="15" fill="rgb(252,136,11)" fg:x="3468683200" fg:w="110720009"/><text x="12.6257%" y="1135.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (7,385,793 samples, 0.03%)</title><rect x="12.7444%" y="1109" width="0.0264%" height="15" fill="rgb(219,138,53)" fg:x="3572017416" fg:w="7385793"/><text x="12.9944%" y="1119.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="1237" width="0.0196%" height="15" fill="rgb(211,51,23)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="1247.50"></text></g><g><title>pgdog::frontend::client::Client::client_messages::_{{closure}} (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="1221" width="0.0196%" height="15" fill="rgb(247,221,28)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::client::inner::InnerBorrow&gt; (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="1205" width="0.0196%" height="15" fill="rgb(251,222,45)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="1215.50"></text></g><g><title>&lt;pgdog::frontend::client::inner::InnerBorrow as core::ops::drop::Drop&gt;::drop (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="1189" width="0.0196%" height="15" fill="rgb(217,162,53)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="1199.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::send::_{{closure}} (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="1173" width="0.0196%" height="15" fill="rgb(229,93,14)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="1183.50"></text></g><g><title>pgdog::backend::server::Server::send::_{{closure}} (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="1157" width="0.0196%" height="15" fill="rgb(209,67,49)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="1167.50"></text></g><g><title>pgdog::backend::server::Server::flush::_{{closure}} (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="1141" width="0.0196%" height="15" fill="rgb(213,87,29)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="1151.50"></text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="1125" width="0.0196%" height="15" fill="rgb(205,151,52)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="1135.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="1109" width="0.0196%" height="15" fill="rgb(253,215,39)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="1119.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="1093" width="0.0196%" height="15" fill="rgb(221,220,41)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="1103.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="1077" width="0.0196%" height="15" fill="rgb(218,133,21)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="1087.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="1061" width="0.0196%" height="15" fill="rgb(221,193,43)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="1071.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="1045" width="0.0196%" height="15" fill="rgb(240,128,52)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="1055.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="1029" width="0.0196%" height="15" fill="rgb(253,114,12)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="1039.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="1013" width="0.0196%" height="15" fill="rgb(215,223,47)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="1023.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="997" width="0.0196%" height="15" fill="rgb(248,225,23)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="1007.50"></text></g><g><title>std::sys::net::connection::socket::TcpStream::write (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="981" width="0.0196%" height="15" fill="rgb(250,108,0)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="991.50"></text></g><g><title>__send (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="965" width="0.0196%" height="15" fill="rgb(228,208,7)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="975.50"></text></g><g><title>[libc.so.6] (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="949" width="0.0196%" height="15" fill="rgb(244,45,10)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="959.50"></text></g><g><title>[libc.so.6] (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="933" width="0.0196%" height="15" fill="rgb(207,125,25)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="943.50"></text></g><g><title>[unknown] (5,482,450 samples, 0.02%)</title><rect x="12.7707%" y="917" width="0.0196%" height="15" fill="rgb(210,195,18)" fg:x="3579403209" fg:w="5482450"/><text x="13.0207%" y="927.50"></text></g><g><title>pgdog::frontend::client::Client::buffer::_{{closure}} (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="1237" width="0.0344%" height="15" fill="rgb(249,80,12)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="1247.50"></text></g><g><title>pgdog::frontend::client::Client::client_messages::_{{closure}} (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="1221" width="0.0344%" height="15" fill="rgb(221,65,9)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::client::inner::InnerBorrow&gt; (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="1205" width="0.0344%" height="15" fill="rgb(235,49,36)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="1215.50"></text></g><g><title>&lt;pgdog::frontend::client::inner::InnerBorrow as core::ops::drop::Drop&gt;::drop (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="1189" width="0.0344%" height="15" fill="rgb(225,32,20)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="1199.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::send::_{{closure}} (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="1173" width="0.0344%" height="15" fill="rgb(215,141,46)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="1183.50"></text></g><g><title>pgdog::backend::server::Server::send::_{{closure}} (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="1157" width="0.0344%" height="15" fill="rgb(250,160,47)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="1167.50"></text></g><g><title>pgdog::backend::server::Server::flush::_{{closure}} (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="1141" width="0.0344%" height="15" fill="rgb(216,222,40)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="1151.50"></text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="1125" width="0.0344%" height="15" fill="rgb(234,217,39)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="1135.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="1109" width="0.0344%" height="15" fill="rgb(207,178,40)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="1119.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="1093" width="0.0344%" height="15" fill="rgb(221,136,13)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="1103.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="1077" width="0.0344%" height="15" fill="rgb(249,199,10)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="1087.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="1061" width="0.0344%" height="15" fill="rgb(249,222,13)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="1071.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="1045" width="0.0344%" height="15" fill="rgb(244,185,38)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="1055.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="1029" width="0.0344%" height="15" fill="rgb(236,202,9)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="1039.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="1013" width="0.0344%" height="15" fill="rgb(250,229,37)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="1023.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="997" width="0.0344%" height="15" fill="rgb(206,174,23)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="1007.50"></text></g><g><title>std::sys::net::connection::socket::TcpStream::write (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="981" width="0.0344%" height="15" fill="rgb(211,33,43)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="991.50"></text></g><g><title>__send (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="965" width="0.0344%" height="15" fill="rgb(245,58,50)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="975.50"></text></g><g><title>[libc.so.6] (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="949" width="0.0344%" height="15" fill="rgb(244,68,36)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="959.50"></text></g><g><title>[libc.so.6] (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="933" width="0.0344%" height="15" fill="rgb(232,229,15)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="943.50"></text></g><g><title>[unknown] (9,643,906 samples, 0.03%)</title><rect x="12.7903%" y="917" width="0.0344%" height="15" fill="rgb(254,30,23)" fg:x="3584885659" fg:w="9643906"/><text x="13.0403%" y="927.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (26,541,346 samples, 0.09%)</title><rect x="12.7707%" y="1269" width="0.0947%" height="15" fill="rgb(235,160,14)" fg:x="3579403209" fg:w="26541346"/><text x="13.0207%" y="1279.50"></text></g><g><title>pgdog::frontend::client::Client::run::_{{closure}}::_{{closure}} (26,541,346 samples, 0.09%)</title><rect x="12.7707%" y="1253" width="0.0947%" height="15" fill="rgb(212,155,44)" fg:x="3579403209" fg:w="26541346"/><text x="13.0207%" y="1263.50"></text></g><g><title>pgdog::frontend::client::Client::client_messages::_{{closure}} (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="1237" width="0.0407%" height="15" fill="rgb(226,2,50)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::client::inner::InnerBorrow&gt; (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="1221" width="0.0407%" height="15" fill="rgb(234,177,6)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="1231.50"></text></g><g><title>&lt;pgdog::frontend::client::inner::InnerBorrow as core::ops::drop::Drop&gt;::drop (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="1205" width="0.0407%" height="15" fill="rgb(217,24,9)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="1215.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::send::_{{closure}} (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="1189" width="0.0407%" height="15" fill="rgb(220,13,46)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="1199.50"></text></g><g><title>pgdog::backend::server::Server::send::_{{closure}} (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="1173" width="0.0407%" height="15" fill="rgb(239,221,27)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="1183.50"></text></g><g><title>pgdog::backend::server::Server::flush::_{{closure}} (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="1157" width="0.0407%" height="15" fill="rgb(222,198,25)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="1167.50"></text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="1141" width="0.0407%" height="15" fill="rgb(211,99,13)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="1151.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="1125" width="0.0407%" height="15" fill="rgb(232,111,31)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="1135.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="1109" width="0.0407%" height="15" fill="rgb(245,82,37)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="1119.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="1093" width="0.0407%" height="15" fill="rgb(227,149,46)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="1103.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="1077" width="0.0407%" height="15" fill="rgb(218,36,50)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="1087.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="1061" width="0.0407%" height="15" fill="rgb(226,80,48)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="1071.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="1045" width="0.0407%" height="15" fill="rgb(238,224,15)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="1055.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="1029" width="0.0407%" height="15" fill="rgb(241,136,10)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="1039.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="1013" width="0.0407%" height="15" fill="rgb(208,32,45)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="1023.50"></text></g><g><title>std::sys::net::connection::socket::TcpStream::write (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="997" width="0.0407%" height="15" fill="rgb(207,135,9)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="1007.50"></text></g><g><title>__send (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="981" width="0.0407%" height="15" fill="rgb(206,86,44)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="991.50"></text></g><g><title>[libc.so.6] (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="965" width="0.0407%" height="15" fill="rgb(245,177,15)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="975.50"></text></g><g><title>[libc.so.6] (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="949" width="0.0407%" height="15" fill="rgb(206,64,50)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="959.50"></text></g><g><title>[unknown] (11,414,990 samples, 0.04%)</title><rect x="12.8247%" y="933" width="0.0407%" height="15" fill="rgb(234,36,40)" fg:x="3594529565" fg:w="11414990"/><text x="13.0747%" y="943.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (85,229,297 samples, 0.30%)</title><rect x="13.1753%" y="1253" width="0.3041%" height="15" fill="rgb(213,64,8)" fg:x="3692791085" fg:w="85229297"/><text x="13.4253%" y="1263.50"></text></g><g><title>[libc.so.6] (85,229,297 samples, 0.30%)</title><rect x="13.1753%" y="1237" width="0.3041%" height="15" fill="rgb(210,75,36)" fg:x="3692791085" fg:w="85229297"/><text x="13.4253%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::server::Server::link_client::{{closure}}&gt; (7,706,722 samples, 0.03%)</title><rect x="13.7130%" y="1205" width="0.0275%" height="15" fill="rgb(229,88,21)" fg:x="3843502626" fg:w="7706722"/><text x="13.9630%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::parameter::MergeResult&gt; (7,520,361 samples, 0.03%)</title><rect x="13.8595%" y="1189" width="0.0268%" height="15" fill="rgb(252,204,47)" fg:x="3884548216" fg:w="7520361"/><text x="14.1095%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;pgdog::net::messages::query::Query&gt;&gt; (7,520,361 samples, 0.03%)</title><rect x="13.8595%" y="1173" width="0.0268%" height="15" fill="rgb(208,77,27)" fg:x="3884548216" fg:w="7520361"/><text x="14.1095%" y="1183.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3,647,283 samples, 0.01%)</title><rect x="13.9066%" y="1173" width="0.0130%" height="15" fill="rgb(221,76,26)" fg:x="3897764145" fg:w="3647283"/><text x="14.1566%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,647,283 samples, 0.01%)</title><rect x="13.9066%" y="1157" width="0.0130%" height="15" fill="rgb(225,139,18)" fg:x="3897764145" fg:w="3647283"/><text x="14.1566%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (3,647,283 samples, 0.01%)</title><rect x="13.9066%" y="1141" width="0.0130%" height="15" fill="rgb(230,137,11)" fg:x="3897764145" fg:w="3647283"/><text x="14.1566%" y="1151.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::invert (5,633,270 samples, 0.02%)</title><rect x="13.9196%" y="1061" width="0.0201%" height="15" fill="rgb(212,28,1)" fg:x="3901411428" fg:w="5633270"/><text x="14.1696%" y="1071.50"></text></g><g><title>&lt;&amp;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (22,213,484 samples, 0.08%)</title><rect x="13.9196%" y="1173" width="0.0793%" height="15" fill="rgb(248,164,17)" fg:x="3901411428" fg:w="22213484"/><text x="14.1696%" y="1183.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (22,213,484 samples, 0.08%)</title><rect x="13.9196%" y="1157" width="0.0793%" height="15" fill="rgb(222,171,42)" fg:x="3901411428" fg:w="22213484"/><text x="14.1696%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (22,213,484 samples, 0.08%)</title><rect x="13.9196%" y="1141" width="0.0793%" height="15" fill="rgb(243,84,45)" fg:x="3901411428" fg:w="22213484"/><text x="14.1696%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (22,213,484 samples, 0.08%)</title><rect x="13.9196%" y="1125" width="0.0793%" height="15" fill="rgb(252,49,23)" fg:x="3901411428" fg:w="22213484"/><text x="14.1696%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (22,213,484 samples, 0.08%)</title><rect x="13.9196%" y="1109" width="0.0793%" height="15" fill="rgb(215,19,7)" fg:x="3901411428" fg:w="22213484"/><text x="14.1696%" y="1119.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (22,213,484 samples, 0.08%)</title><rect x="13.9196%" y="1093" width="0.0793%" height="15" fill="rgb(238,81,41)" fg:x="3901411428" fg:w="22213484"/><text x="14.1696%" y="1103.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_full (22,213,484 samples, 0.08%)</title><rect x="13.9196%" y="1077" width="0.0793%" height="15" fill="rgb(210,199,37)" fg:x="3901411428" fg:w="22213484"/><text x="14.1696%" y="1087.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty_or_deleted (16,580,214 samples, 0.06%)</title><rect x="13.9397%" y="1061" width="0.0592%" height="15" fill="rgb(244,192,49)" fg:x="3907044698" fg:w="16580214"/><text x="14.1897%" y="1071.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (16,580,214 samples, 0.06%)</title><rect x="13.9397%" y="1045" width="0.0592%" height="15" fill="rgb(226,211,11)" fg:x="3907044698" fg:w="16580214"/><text x="14.1897%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,578,284 samples, 0.01%)</title><rect x="13.9989%" y="1173" width="0.0128%" height="15" fill="rgb(236,162,54)" fg:x="3923624912" fg:w="3578284"/><text x="14.2489%" y="1183.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,578,284 samples, 0.01%)</title><rect x="13.9989%" y="1157" width="0.0128%" height="15" fill="rgb(220,229,9)" fg:x="3923624912" fg:w="3578284"/><text x="14.2489%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,578,284 samples, 0.01%)</title><rect x="13.9989%" y="1141" width="0.0128%" height="15" fill="rgb(250,87,22)" fg:x="3923624912" fg:w="3578284"/><text x="14.2489%" y="1151.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (3,578,284 samples, 0.01%)</title><rect x="13.9989%" y="1125" width="0.0128%" height="15" fill="rgb(239,43,17)" fg:x="3923624912" fg:w="3578284"/><text x="14.2489%" y="1135.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3,578,284 samples, 0.01%)</title><rect x="13.9989%" y="1109" width="0.0128%" height="15" fill="rgb(231,177,25)" fg:x="3923624912" fg:w="3578284"/><text x="14.2489%" y="1119.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (3,578,284 samples, 0.01%)</title><rect x="13.9989%" y="1093" width="0.0128%" height="15" fill="rgb(219,179,1)" fg:x="3923624912" fg:w="3578284"/><text x="14.2489%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (25,916,134 samples, 0.09%)</title><rect x="14.0180%" y="1173" width="0.0925%" height="15" fill="rgb(238,219,53)" fg:x="3928996065" fg:w="25916134"/><text x="14.2680%" y="1183.50"></text></g><g><title>core::cmp::PartialEq::ne (25,916,134 samples, 0.09%)</title><rect x="14.0180%" y="1157" width="0.0925%" height="15" fill="rgb(232,167,36)" fg:x="3928996065" fg:w="25916134"/><text x="14.2680%" y="1167.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (25,916,134 samples, 0.09%)</title><rect x="14.0180%" y="1141" width="0.0925%" height="15" fill="rgb(244,19,51)" fg:x="3928996065" fg:w="25916134"/><text x="14.2680%" y="1151.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (25,916,134 samples, 0.09%)</title><rect x="14.0180%" y="1125" width="0.0925%" height="15" fill="rgb(224,6,22)" fg:x="3928996065" fg:w="25916134"/><text x="14.2680%" y="1135.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (25,916,134 samples, 0.09%)</title><rect x="14.0180%" y="1109" width="0.0925%" height="15" fill="rgb(224,145,5)" fg:x="3928996065" fg:w="25916134"/><text x="14.2680%" y="1119.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (25,916,134 samples, 0.09%)</title><rect x="14.0180%" y="1093" width="0.0925%" height="15" fill="rgb(234,130,49)" fg:x="3928996065" fg:w="25916134"/><text x="14.2680%" y="1103.50"></text></g><g><title>[libc.so.6] (25,916,134 samples, 0.09%)</title><rect x="14.0180%" y="1077" width="0.0925%" height="15" fill="rgb(254,6,2)" fg:x="3928996065" fg:w="25916134"/><text x="14.2680%" y="1087.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (20,583,687 samples, 0.07%)</title><rect x="14.3490%" y="1125" width="0.0734%" height="15" fill="rgb(208,96,46)" fg:x="4021755351" fg:w="20583687"/><text x="14.5990%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (20,583,687 samples, 0.07%)</title><rect x="14.3490%" y="1109" width="0.0734%" height="15" fill="rgb(239,3,39)" fg:x="4021755351" fg:w="20583687"/><text x="14.5990%" y="1119.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (20,583,687 samples, 0.07%)</title><rect x="14.3490%" y="1093" width="0.0734%" height="15" fill="rgb(233,210,1)" fg:x="4021755351" fg:w="20583687"/><text x="14.5990%" y="1103.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (20,583,687 samples, 0.07%)</title><rect x="14.3490%" y="1077" width="0.0734%" height="15" fill="rgb(244,137,37)" fg:x="4021755351" fg:w="20583687"/><text x="14.5990%" y="1087.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (20,583,687 samples, 0.07%)</title><rect x="14.3490%" y="1061" width="0.0734%" height="15" fill="rgb(240,136,2)" fg:x="4021755351" fg:w="20583687"/><text x="14.5990%" y="1071.50"></text></g><g><title>[libc.so.6] (15,125,718 samples, 0.05%)</title><rect x="14.3685%" y="1045" width="0.0540%" height="15" fill="rgb(239,18,37)" fg:x="4027213320" fg:w="15125718"/><text x="14.6185%" y="1055.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (87,413,966 samples, 0.31%)</title><rect x="14.1169%" y="1173" width="0.3119%" height="15" fill="rgb(218,185,22)" fg:x="3956699961" fg:w="87413966"/><text x="14.3669%" y="1183.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (29,994,239 samples, 0.11%)</title><rect x="14.3217%" y="1157" width="0.1070%" height="15" fill="rgb(225,218,4)" fg:x="4014119688" fg:w="29994239"/><text x="14.5717%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (29,994,239 samples, 0.11%)</title><rect x="14.3217%" y="1141" width="0.1070%" height="15" fill="rgb(230,182,32)" fg:x="4014119688" fg:w="29994239"/><text x="14.5717%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5,497,462 samples, 0.02%)</title><rect x="14.4683%" y="1045" width="0.0196%" height="15" fill="rgb(242,56,43)" fg:x="4055201194" fg:w="5497462"/><text x="14.7183%" y="1055.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3,697,605 samples, 0.01%)</title><rect x="14.4747%" y="1029" width="0.0132%" height="15" fill="rgb(233,99,24)" fg:x="4057001051" fg:w="3697605"/><text x="14.7247%" y="1039.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7,436,982 samples, 0.03%)</title><rect x="14.5019%" y="1029" width="0.0265%" height="15" fill="rgb(234,209,42)" fg:x="4064602035" fg:w="7436982"/><text x="14.7519%" y="1039.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (24,077,228 samples, 0.09%)</title><rect x="14.4491%" y="1093" width="0.0859%" height="15" fill="rgb(227,7,12)" fg:x="4049822194" fg:w="24077228"/><text x="14.6991%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (24,077,228 samples, 0.09%)</title><rect x="14.4491%" y="1077" width="0.0859%" height="15" fill="rgb(245,203,43)" fg:x="4049822194" fg:w="24077228"/><text x="14.6991%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (24,077,228 samples, 0.09%)</title><rect x="14.4491%" y="1061" width="0.0859%" height="15" fill="rgb(238,205,33)" fg:x="4049822194" fg:w="24077228"/><text x="14.6991%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13,200,766 samples, 0.05%)</title><rect x="14.4879%" y="1045" width="0.0471%" height="15" fill="rgb(231,56,7)" fg:x="4060698656" fg:w="13200766"/><text x="14.7379%" y="1055.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3,707,664 samples, 0.01%)</title><rect x="14.6699%" y="965" width="0.0132%" height="15" fill="rgb(244,186,29)" fg:x="4111708144" fg:w="3707664"/><text x="14.9199%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (41,589,251 samples, 0.15%)</title><rect x="14.5418%" y="997" width="0.1484%" height="15" fill="rgb(234,111,31)" fg:x="4075806157" fg:w="41589251"/><text x="14.7918%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7,603,883 samples, 0.03%)</title><rect x="14.6631%" y="981" width="0.0271%" height="15" fill="rgb(241,149,10)" fg:x="4109791525" fg:w="7603883"/><text x="14.9131%" y="991.50"></text></g><g><title>hashbrown::map::make_hash (78,734,368 samples, 0.28%)</title><rect x="14.4288%" y="1125" width="0.2809%" height="15" fill="rgb(249,206,44)" fg:x="4044113927" fg:w="78734368"/><text x="14.6788%" y="1135.50"></text></g><g><title>core::hash::BuildHasher::hash_one (78,734,368 samples, 0.28%)</title><rect x="14.4288%" y="1109" width="0.2809%" height="15" fill="rgb(251,153,30)" fg:x="4044113927" fg:w="78734368"/><text x="14.6788%" y="1119.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (47,042,138 samples, 0.17%)</title><rect x="14.5418%" y="1093" width="0.1678%" height="15" fill="rgb(239,152,38)" fg:x="4075806157" fg:w="47042138"/><text x="14.7918%" y="1103.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (47,042,138 samples, 0.17%)</title><rect x="14.5418%" y="1077" width="0.1678%" height="15" fill="rgb(249,139,47)" fg:x="4075806157" fg:w="47042138"/><text x="14.7918%" y="1087.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (47,042,138 samples, 0.17%)</title><rect x="14.5418%" y="1061" width="0.1678%" height="15" fill="rgb(244,64,35)" fg:x="4075806157" fg:w="47042138"/><text x="14.7918%" y="1071.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (47,042,138 samples, 0.17%)</title><rect x="14.5418%" y="1045" width="0.1678%" height="15" fill="rgb(216,46,15)" fg:x="4075806157" fg:w="47042138"/><text x="14.7918%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (47,042,138 samples, 0.17%)</title><rect x="14.5418%" y="1029" width="0.1678%" height="15" fill="rgb(250,74,19)" fg:x="4075806157" fg:w="47042138"/><text x="14.7918%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (47,042,138 samples, 0.17%)</title><rect x="14.5418%" y="1013" width="0.1678%" height="15" fill="rgb(249,42,33)" fg:x="4075806157" fg:w="47042138"/><text x="14.7918%" y="1023.50"></text></g><g><title>core::hash::Hasher::write_u8 (5,452,887 samples, 0.02%)</title><rect x="14.6902%" y="997" width="0.0195%" height="15" fill="rgb(242,149,17)" fg:x="4117395408" fg:w="5452887"/><text x="14.9402%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5,452,887 samples, 0.02%)</title><rect x="14.6902%" y="981" width="0.0195%" height="15" fill="rgb(244,29,21)" fg:x="4117395408" fg:w="5452887"/><text x="14.9402%" y="991.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (47,019,841 samples, 0.17%)</title><rect x="14.7159%" y="1077" width="0.1678%" height="15" fill="rgb(220,130,37)" fg:x="4124605991" fg:w="47019841"/><text x="14.9659%" y="1087.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (47,019,841 samples, 0.17%)</title><rect x="14.7159%" y="1061" width="0.1678%" height="15" fill="rgb(211,67,2)" fg:x="4124605991" fg:w="47019841"/><text x="14.9659%" y="1071.50"></text></g><g><title>hashbrown::control::tag::Tag::full (3,653,334 samples, 0.01%)</title><rect x="14.8837%" y="1077" width="0.0130%" height="15" fill="rgb(235,68,52)" fg:x="4171625832" fg:w="3653334"/><text x="15.1337%" y="1087.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (92,831,117 samples, 0.33%)</title><rect x="14.9100%" y="1061" width="0.3312%" height="15" fill="rgb(246,142,3)" fg:x="4179003592" fg:w="92831117"/><text x="15.1600%" y="1071.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (92,831,117 samples, 0.33%)</title><rect x="14.9100%" y="1045" width="0.3312%" height="15" fill="rgb(241,25,7)" fg:x="4179003592" fg:w="92831117"/><text x="15.1600%" y="1055.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (92,831,117 samples, 0.33%)</title><rect x="14.9100%" y="1029" width="0.3312%" height="15" fill="rgb(242,119,39)" fg:x="4179003592" fg:w="92831117"/><text x="15.1600%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (92,831,117 samples, 0.33%)</title><rect x="14.9100%" y="1013" width="0.3312%" height="15" fill="rgb(241,98,45)" fg:x="4179003592" fg:w="92831117"/><text x="15.1600%" y="1023.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (92,831,117 samples, 0.33%)</title><rect x="14.9100%" y="997" width="0.3312%" height="15" fill="rgb(254,28,30)" fg:x="4179003592" fg:w="92831117"/><text x="15.1600%" y="1007.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (92,831,117 samples, 0.33%)</title><rect x="14.9100%" y="981" width="0.3312%" height="15" fill="rgb(241,142,54)" fg:x="4179003592" fg:w="92831117"/><text x="15.1600%" y="991.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (92,831,117 samples, 0.33%)</title><rect x="14.9100%" y="965" width="0.3312%" height="15" fill="rgb(222,85,15)" fg:x="4179003592" fg:w="92831117"/><text x="15.1600%" y="975.50"></text></g><g><title>[libc.so.6] (42,471,488 samples, 0.15%)</title><rect x="15.0897%" y="949" width="0.1515%" height="15" fill="rgb(210,85,47)" fg:x="4229363221" fg:w="42471488"/><text x="15.3397%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (100,206,758 samples, 0.36%)</title><rect x="14.8967%" y="1077" width="0.3575%" height="15" fill="rgb(224,206,25)" fg:x="4175279166" fg:w="100206758"/><text x="15.1467%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (3,651,215 samples, 0.01%)</title><rect x="15.2412%" y="1061" width="0.0130%" height="15" fill="rgb(243,201,19)" fg:x="4271834709" fg:w="3651215"/><text x="15.4912%" y="1071.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (3,651,215 samples, 0.01%)</title><rect x="15.2412%" y="1045" width="0.0130%" height="15" fill="rgb(236,59,4)" fg:x="4271834709" fg:w="3651215"/><text x="15.4912%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3,651,215 samples, 0.01%)</title><rect x="15.2412%" y="1029" width="0.0130%" height="15" fill="rgb(254,179,45)" fg:x="4271834709" fg:w="3651215"/><text x="15.4912%" y="1039.50"></text></g><g><title>pgdog::net::parameter::Parameters::merge (385,279,763 samples, 1.37%)</title><rect x="13.8863%" y="1189" width="1.3746%" height="15" fill="rgb(226,14,10)" fg:x="3892068577" fg:w="385279763"/><text x="14.1363%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (233,234,413 samples, 0.83%)</title><rect x="14.4288%" y="1173" width="0.8321%" height="15" fill="rgb(244,27,41)" fg:x="4044113927" fg:w="233234413"/><text x="14.6788%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (233,234,413 samples, 0.83%)</title><rect x="14.4288%" y="1157" width="0.8321%" height="15" fill="rgb(235,35,32)" fg:x="4044113927" fg:w="233234413"/><text x="14.6788%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (233,234,413 samples, 0.83%)</title><rect x="14.4288%" y="1141" width="0.8321%" height="15" fill="rgb(218,68,31)" fg:x="4044113927" fg:w="233234413"/><text x="14.6788%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (154,500,045 samples, 0.55%)</title><rect x="14.7097%" y="1125" width="0.5512%" height="15" fill="rgb(207,120,37)" fg:x="4122848295" fg:w="154500045"/><text x="14.9597%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (154,500,045 samples, 0.55%)</title><rect x="14.7097%" y="1109" width="0.5512%" height="15" fill="rgb(227,98,0)" fg:x="4122848295" fg:w="154500045"/><text x="14.9597%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (154,500,045 samples, 0.55%)</title><rect x="14.7097%" y="1093" width="0.5512%" height="15" fill="rgb(207,7,3)" fg:x="4122848295" fg:w="154500045"/><text x="14.9597%" y="1103.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::link_client::_{{closure}} (501,452,612 samples, 1.79%)</title><rect x="13.4859%" y="1237" width="1.7891%" height="15" fill="rgb(206,98,19)" fg:x="3779862031" fg:w="501452612"/><text x="13.7359%" y="1247.50">p..</text></g><g><title>pgdog::backend::pool::connection::binding::Binding::link_client::_{{closure}} (467,702,007 samples, 1.67%)</title><rect x="13.6064%" y="1221" width="1.6687%" height="15" fill="rgb(217,5,26)" fg:x="3813612636" fg:w="467702007"/><text x="13.8564%" y="1231.50"></text></g><g><title>pgdog::backend::server::Server::link_client::_{{closure}} (430,105,295 samples, 1.53%)</title><rect x="13.7405%" y="1205" width="1.5345%" height="15" fill="rgb(235,190,38)" fg:x="3851209348" fg:w="430105295"/><text x="13.9905%" y="1215.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (3,966,303 samples, 0.01%)</title><rect x="15.2609%" y="1189" width="0.0142%" height="15" fill="rgb(247,86,24)" fg:x="4277348340" fg:w="3966303"/><text x="15.5109%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (3,966,303 samples, 0.01%)</title><rect x="15.2609%" y="1173" width="0.0142%" height="15" fill="rgb(205,101,16)" fg:x="4277348340" fg:w="3966303"/><text x="15.5109%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (3,966,303 samples, 0.01%)</title><rect x="15.2609%" y="1157" width="0.0142%" height="15" fill="rgb(246,168,33)" fg:x="4277348340" fg:w="3966303"/><text x="15.5109%" y="1167.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (503,344,746 samples, 1.80%)</title><rect x="13.4859%" y="1253" width="1.7959%" height="15" fill="rgb(231,114,1)" fg:x="3779862031" fg:w="503344746"/><text x="13.7359%" y="1263.50">&lt;..</text></g><g><title>[libc.so.6] (80,220,280 samples, 0.29%)</title><rect x="15.2818%" y="1253" width="0.2862%" height="15" fill="rgb(207,184,53)" fg:x="4283206777" fg:w="80220280"/><text x="15.5318%" y="1263.50"></text></g><g><title>&lt;tokio::runtime::time::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (7,590,167 samples, 0.03%)</title><rect x="15.6012%" y="1205" width="0.0271%" height="15" fill="rgb(224,95,51)" fg:x="4372740121" fg:w="7590167"/><text x="15.8512%" y="1215.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::cancel (3,686,794 samples, 0.01%)</title><rect x="15.6152%" y="1189" width="0.0132%" height="15" fill="rgb(212,188,45)" fg:x="4376643494" fg:w="3686794"/><text x="15.8652%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::timeout::Timeout&lt;pgdog::backend::pool::connection::Connection::link_client::{{closure}}&gt;&gt; (15,076,747 samples, 0.05%)</title><rect x="15.5812%" y="1253" width="0.0538%" height="15" fill="rgb(223,154,38)" fg:x="4367136312" fg:w="15076747"/><text x="15.8312%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::sleep::Sleep&gt; (13,254,385 samples, 0.05%)</title><rect x="15.5878%" y="1237" width="0.0473%" height="15" fill="rgb(251,22,52)" fg:x="4368958674" fg:w="13254385"/><text x="15.8378%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::time::entry::TimerEntry&gt; (9,472,938 samples, 0.03%)</title><rect x="15.6012%" y="1221" width="0.0338%" height="15" fill="rgb(229,209,22)" fg:x="4372740121" fg:w="9472938"/><text x="15.8512%" y="1231.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (45,757,759 samples, 0.16%)</title><rect x="16.5115%" y="1205" width="0.1633%" height="15" fill="rgb(234,138,34)" fg:x="4627872888" fg:w="45757759"/><text x="16.7615%" y="1215.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (45,757,759 samples, 0.16%)</title><rect x="16.5115%" y="1189" width="0.1633%" height="15" fill="rgb(212,95,11)" fg:x="4627872888" fg:w="45757759"/><text x="16.7615%" y="1199.50"></text></g><g><title>core::ptr::read (45,757,759 samples, 0.16%)</title><rect x="16.5115%" y="1173" width="0.1633%" height="15" fill="rgb(240,179,47)" fg:x="4627872888" fg:w="45757759"/><text x="16.7615%" y="1183.50"></text></g><g><title>[libc.so.6] (41,913,656 samples, 0.15%)</title><rect x="16.5252%" y="1157" width="0.1495%" height="15" fill="rgb(240,163,11)" fg:x="4631716991" fg:w="41913656"/><text x="16.7752%" y="1167.50"></text></g><g><title>[libc.so.6] (48,981,417 samples, 0.17%)</title><rect x="16.6819%" y="1205" width="0.1748%" height="15" fill="rgb(236,37,12)" fg:x="4675625208" fg:w="48981417"/><text x="16.9319%" y="1215.50"></text></g><g><title>_rjem_je_sdallocx_default (3,562,011 samples, 0.01%)</title><rect x="16.8566%" y="1205" width="0.0127%" height="15" fill="rgb(232,164,16)" fg:x="4724606625" fg:w="3562011"/><text x="17.1066%" y="1215.50"></text></g><g><title>isfree (3,562,011 samples, 0.01%)</title><rect x="16.8566%" y="1189" width="0.0127%" height="15" fill="rgb(244,205,15)" fg:x="4724606625" fg:w="3562011"/><text x="17.1066%" y="1199.50"></text></g><g><title>thread_dalloc_event (3,562,011 samples, 0.01%)</title><rect x="16.8566%" y="1173" width="0.0127%" height="15" fill="rgb(223,117,47)" fg:x="4724606625" fg:w="3562011"/><text x="17.1066%" y="1183.50"></text></g><g><title>te_event_advance (3,562,011 samples, 0.01%)</title><rect x="16.8566%" y="1157" width="0.0127%" height="15" fill="rgb(244,107,35)" fg:x="4724606625" fg:w="3562011"/><text x="17.1066%" y="1167.50"></text></g><g><title>_rjem_sdallocx (27,745,653 samples, 0.10%)</title><rect x="16.8694%" y="1205" width="0.0990%" height="15" fill="rgb(205,140,8)" fg:x="4728168636" fg:w="27745653"/><text x="17.1194%" y="1215.50"></text></g><g><title>free_fastpath (27,745,653 samples, 0.10%)</title><rect x="16.8694%" y="1189" width="0.0990%" height="15" fill="rgb(228,84,46)" fg:x="4728168636" fg:w="27745653"/><text x="17.1194%" y="1199.50"></text></g><g><title>cache_bin_dalloc_easy (3,748,864 samples, 0.01%)</title><rect x="16.9550%" y="1173" width="0.0134%" height="15" fill="rgb(254,188,9)" fg:x="4752165425" fg:w="3748864"/><text x="17.2050%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage&gt;&gt; (7,463,838 samples, 0.03%)</title><rect x="16.9683%" y="1205" width="0.0266%" height="15" fill="rgb(206,112,54)" fg:x="4755914289" fg:w="7463838"/><text x="17.2183%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::server::Server::send_one&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage&gt;::{{closure}}&gt; (22,639,187 samples, 0.08%)</title><rect x="16.9950%" y="1205" width="0.0808%" height="15" fill="rgb(216,84,49)" fg:x="4763378127" fg:w="22639187"/><text x="17.2450%" y="1215.50"></text></g><g><title>&lt;tokio::io::util::flush::Flush&lt;A&gt; as core::future::future::Future&gt;::poll (5,621,651 samples, 0.02%)</title><rect x="17.1233%" y="1189" width="0.0201%" height="15" fill="rgb(214,194,35)" fg:x="4799345626" fg:w="5621651"/><text x="17.3733%" y="1199.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (3,216,503,751 samples, 11.48%)</title><rect x="17.1909%" y="1125" width="11.4760%" height="15" fill="rgb(249,28,3)" fg:x="4818280036" fg:w="3216503751"/><text x="17.4409%" y="1135.50">&lt;&amp;mio::net::tcp::..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (3,216,503,751 samples, 11.48%)</title><rect x="17.1909%" y="1109" width="11.4760%" height="15" fill="rgb(222,56,52)" fg:x="4818280036" fg:w="3216503751"/><text x="17.4409%" y="1119.50">mio::io_source::I..</text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (3,216,503,751 samples, 11.48%)</title><rect x="17.1909%" y="1093" width="11.4760%" height="15" fill="rgb(245,217,50)" fg:x="4818280036" fg:w="3216503751"/><text x="17.4409%" y="1103.50">mio::sys::unix::s..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (3,216,503,751 samples, 11.48%)</title><rect x="17.1909%" y="1077" width="11.4760%" height="15" fill="rgb(213,201,24)" fg:x="4818280036" fg:w="3216503751"/><text x="17.4409%" y="1087.50">&lt;&amp;mio::net::tcp::..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (3,216,503,751 samples, 11.48%)</title><rect x="17.1909%" y="1061" width="11.4760%" height="15" fill="rgb(248,116,28)" fg:x="4818280036" fg:w="3216503751"/><text x="17.4409%" y="1071.50">&lt;&amp;std::net::tcp::..</text></g><g><title>std::sys::net::connection::socket::TcpStream::write (3,216,503,751 samples, 11.48%)</title><rect x="17.1909%" y="1045" width="11.4760%" height="15" fill="rgb(219,72,43)" fg:x="4818280036" fg:w="3216503751"/><text x="17.4409%" y="1055.50">std::sys::net::co..</text></g><g><title>__send (3,214,624,079 samples, 11.47%)</title><rect x="17.1976%" y="1029" width="11.4693%" height="15" fill="rgb(209,138,14)" fg:x="4820159708" fg:w="3214624079"/><text x="17.4476%" y="1039.50">__send</text></g><g><title>[libc.so.6] (3,186,743,373 samples, 11.37%)</title><rect x="17.2970%" y="1013" width="11.3698%" height="15" fill="rgb(222,18,33)" fg:x="4848040414" fg:w="3186743373"/><text x="17.5470%" y="1023.50">[libc.so.6]</text></g><g><title>[libc.so.6] (3,186,743,373 samples, 11.37%)</title><rect x="17.2970%" y="997" width="11.3698%" height="15" fill="rgb(213,199,7)" fg:x="4848040414" fg:w="3186743373"/><text x="17.5470%" y="1007.50">[libc.so.6]</text></g><g><title>[unknown] (3,184,961,911 samples, 11.36%)</title><rect x="17.3034%" y="981" width="11.3634%" height="15" fill="rgb(250,110,10)" fg:x="4849821876" fg:w="3184961911"/><text x="17.5534%" y="991.50">[unknown]</text></g><g><title>[unknown] (3,149,597,553 samples, 11.24%)</title><rect x="17.4296%" y="965" width="11.2373%" height="15" fill="rgb(248,123,6)" fg:x="4885186234" fg:w="3149597553"/><text x="17.6796%" y="975.50">[unknown]</text></g><g><title>[unknown] (3,097,807,176 samples, 11.05%)</title><rect x="17.6143%" y="949" width="11.0525%" height="15" fill="rgb(206,91,31)" fg:x="4936976611" fg:w="3097807176"/><text x="17.8643%" y="959.50">[unknown]</text></g><g><title>[unknown] (3,043,741,374 samples, 10.86%)</title><rect x="17.8072%" y="933" width="10.8596%" height="15" fill="rgb(211,154,13)" fg:x="4991042413" fg:w="3043741374"/><text x="18.0572%" y="943.50">[unknown]</text></g><g><title>[unknown] (2,911,357,425 samples, 10.39%)</title><rect x="18.2796%" y="917" width="10.3873%" height="15" fill="rgb(225,148,7)" fg:x="5123426362" fg:w="2911357425"/><text x="18.5296%" y="927.50">[unknown]</text></g><g><title>[unknown] (2,720,436,858 samples, 9.71%)</title><rect x="18.9607%" y="901" width="9.7061%" height="15" fill="rgb(220,160,43)" fg:x="5314346929" fg:w="2720436858"/><text x="19.2107%" y="911.50">[unknown]</text></g><g><title>[unknown] (2,284,380,134 samples, 8.15%)</title><rect x="20.5165%" y="885" width="8.1503%" height="15" fill="rgb(213,52,39)" fg:x="5750403653" fg:w="2284380134"/><text x="20.7665%" y="895.50">[unknown]</text></g><g><title>[unknown] (1,762,856,962 samples, 6.29%)</title><rect x="22.3772%" y="869" width="6.2896%" height="15" fill="rgb(243,137,7)" fg:x="6271926825" fg:w="1762856962"/><text x="22.6272%" y="879.50">[unknown]</text></g><g><title>[unknown] (1,098,565,360 samples, 3.92%)</title><rect x="24.7473%" y="853" width="3.9195%" height="15" fill="rgb(230,79,13)" fg:x="6936218427" fg:w="1098565360"/><text x="24.9973%" y="863.50">[unk..</text></g><g><title>[unknown] (588,149,639 samples, 2.10%)</title><rect x="26.5684%" y="837" width="2.0984%" height="15" fill="rgb(247,105,23)" fg:x="7446634148" fg:w="588149639"/><text x="26.8184%" y="847.50">[..</text></g><g><title>[unknown] (106,117,828 samples, 0.38%)</title><rect x="28.2882%" y="821" width="0.3786%" height="15" fill="rgb(223,179,41)" fg:x="7928665959" fg:w="106117828"/><text x="28.5382%" y="831.50"></text></g><g><title>[unknown] (13,006,642 samples, 0.05%)</title><rect x="28.6204%" y="805" width="0.0464%" height="15" fill="rgb(218,9,34)" fg:x="8021777145" fg:w="13006642"/><text x="28.8704%" y="815.50"></text></g><g><title>[unknown] (5,448,075 samples, 0.02%)</title><rect x="28.6474%" y="789" width="0.0194%" height="15" fill="rgb(222,106,8)" fg:x="8029335712" fg:w="5448075"/><text x="28.8974%" y="799.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (4,058,499 samples, 0.01%)</title><rect x="28.7134%" y="1093" width="0.0145%" height="15" fill="rgb(211,220,0)" fg:x="8047838779" fg:w="4058499"/><text x="28.9634%" y="1103.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (3,261,620,583 samples, 11.64%)</title><rect x="17.1434%" y="1173" width="11.6369%" height="15" fill="rgb(229,52,16)" fg:x="4804967277" fg:w="3261620583"/><text x="17.3934%" y="1183.50">&lt;tokio::net::tcp:..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (3,257,944,820 samples, 11.62%)</title><rect x="17.1565%" y="1157" width="11.6238%" height="15" fill="rgb(212,155,18)" fg:x="4808643040" fg:w="3257944820"/><text x="17.4065%" y="1167.50">tokio::net::tcp::..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (3,257,944,820 samples, 11.62%)</title><rect x="17.1565%" y="1141" width="11.6238%" height="15" fill="rgb(242,21,14)" fg:x="4808643040" fg:w="3257944820"/><text x="17.4065%" y="1151.50">tokio::io::poll_e..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (31,804,073 samples, 0.11%)</title><rect x="28.6668%" y="1125" width="0.1135%" height="15" fill="rgb(222,19,48)" fg:x="8034783787" fg:w="31804073"/><text x="28.9168%" y="1135.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (22,513,146 samples, 0.08%)</title><rect x="28.7000%" y="1109" width="0.0803%" height="15" fill="rgb(232,45,27)" fg:x="8044074714" fg:w="22513146"/><text x="28.9500%" y="1119.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (14,690,582 samples, 0.05%)</title><rect x="28.7279%" y="1093" width="0.0524%" height="15" fill="rgb(249,103,42)" fg:x="8051897278" fg:w="14690582"/><text x="28.9779%" y="1103.50"></text></g><g><title>tokio::runtime::io::driver::Direction::mask (12,723,125 samples, 0.05%)</title><rect x="28.7349%" y="1077" width="0.0454%" height="15" fill="rgb(246,81,33)" fg:x="8053864735" fg:w="12723125"/><text x="28.9849%" y="1087.50"></text></g><g><title>pgdog::backend::server::Server::flush::_{{closure}} (3,282,348,314 samples, 11.71%)</title><rect x="17.0758%" y="1205" width="11.7109%" height="15" fill="rgb(252,33,42)" fg:x="4786017314" fg:w="3282348314"/><text x="17.3258%" y="1215.50">pgdog::backend::s..</text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (3,263,398,351 samples, 11.64%)</title><rect x="17.1434%" y="1189" width="11.6433%" height="15" fill="rgb(209,212,41)" fg:x="4804967277" fg:w="3263398351"/><text x="17.3934%" y="1199.50">tokio::io::util::..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (154,431,637 samples, 0.55%)</title><rect x="29.3436%" y="1189" width="0.5510%" height="15" fill="rgb(207,154,6)" fg:x="8224473838" fg:w="154431637"/><text x="29.5936%" y="1199.50"></text></g><g><title>&lt;T as core::convert::From&lt;T&gt;&gt;::from (154,431,637 samples, 0.55%)</title><rect x="29.3436%" y="1173" width="0.5510%" height="15" fill="rgb(223,64,47)" fg:x="8224473838" fg:w="154431637"/><text x="29.5936%" y="1183.50"></text></g><g><title>[libc.so.6] (150,759,824 samples, 0.54%)</title><rect x="29.3567%" y="1157" width="0.5379%" height="15" fill="rgb(211,161,38)" fg:x="8228145651" fg:w="150759824"/><text x="29.6067%" y="1167.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (9,192,983 samples, 0.03%)</title><rect x="30.0156%" y="1109" width="0.0328%" height="15" fill="rgb(219,138,40)" fg:x="8412828625" fg:w="9192983"/><text x="30.2656%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11,152,322 samples, 0.04%)</title><rect x="30.0156%" y="1157" width="0.0398%" height="15" fill="rgb(241,228,46)" fg:x="8412828625" fg:w="11152322"/><text x="30.2656%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (11,152,322 samples, 0.04%)</title><rect x="30.0156%" y="1141" width="0.0398%" height="15" fill="rgb(223,209,38)" fg:x="8412828625" fg:w="11152322"/><text x="30.2656%" y="1151.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (11,152,322 samples, 0.04%)</title><rect x="30.0156%" y="1125" width="0.0398%" height="15" fill="rgb(236,164,45)" fg:x="8412828625" fg:w="11152322"/><text x="30.2656%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (161,100,514 samples, 0.57%)</title><rect x="29.8946%" y="1189" width="0.5748%" height="15" fill="rgb(231,15,5)" fg:x="8378905475" fg:w="161100514"/><text x="30.1446%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (161,100,514 samples, 0.57%)</title><rect x="29.8946%" y="1173" width="0.5748%" height="15" fill="rgb(252,35,15)" fg:x="8378905475" fg:w="161100514"/><text x="30.1446%" y="1183.50"></text></g><g><title>[libc.so.6] (116,025,042 samples, 0.41%)</title><rect x="30.0554%" y="1157" width="0.4140%" height="15" fill="rgb(248,181,18)" fg:x="8423980947" fg:w="116025042"/><text x="30.3054%" y="1167.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (22,367,790 samples, 0.08%)</title><rect x="30.4694%" y="1189" width="0.0798%" height="15" fill="rgb(233,39,42)" fg:x="8540005989" fg:w="22367790"/><text x="30.7194%" y="1199.50"></text></g><g><title>[libc.so.6] (733,028,596 samples, 2.62%)</title><rect x="30.5492%" y="1189" width="2.6153%" height="15" fill="rgb(238,110,33)" fg:x="8562373779" fg:w="733028596"/><text x="30.7992%" y="1199.50">[l..</text></g><g><title>cache_bin_dalloc_easy (3,685,887 samples, 0.01%)</title><rect x="33.1905%" y="1157" width="0.0132%" height="15" fill="rgb(233,195,10)" fg:x="9302691142" fg:w="3685887"/><text x="33.4405%" y="1167.50"></text></g><g><title>_rjem_sdallocx (14,564,489 samples, 0.05%)</title><rect x="33.1645%" y="1189" width="0.0520%" height="15" fill="rgb(254,105,3)" fg:x="9295402375" fg:w="14564489"/><text x="33.4145%" y="1199.50"></text></g><g><title>free_fastpath (14,564,489 samples, 0.05%)</title><rect x="33.1645%" y="1173" width="0.0520%" height="15" fill="rgb(221,225,9)" fg:x="9295402375" fg:w="14564489"/><text x="33.4145%" y="1183.50"></text></g><g><title>te_free_fastpath_ctx (3,589,835 samples, 0.01%)</title><rect x="33.2037%" y="1157" width="0.0128%" height="15" fill="rgb(224,227,45)" fg:x="9306377029" fg:w="3589835"/><text x="33.4537%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,731,827 samples, 0.01%)</title><rect x="33.2702%" y="1093" width="0.0133%" height="15" fill="rgb(229,198,43)" fg:x="9325015602" fg:w="3731827"/><text x="33.5202%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,731,827 samples, 0.01%)</title><rect x="33.2702%" y="1077" width="0.0133%" height="15" fill="rgb(206,209,35)" fg:x="9325015602" fg:w="3731827"/><text x="33.5202%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (3,731,827 samples, 0.01%)</title><rect x="33.2702%" y="1061" width="0.0133%" height="15" fill="rgb(245,195,53)" fg:x="9325015602" fg:w="3731827"/><text x="33.5202%" y="1071.50"></text></g><g><title>__rust_dealloc (3,731,827 samples, 0.01%)</title><rect x="33.2702%" y="1045" width="0.0133%" height="15" fill="rgb(240,92,26)" fg:x="9325015602" fg:w="3731827"/><text x="33.5202%" y="1055.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (3,731,827 samples, 0.01%)</title><rect x="33.2702%" y="1029" width="0.0133%" height="15" fill="rgb(207,40,23)" fg:x="9325015602" fg:w="3731827"/><text x="33.5202%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (20,091,501 samples, 0.07%)</title><rect x="33.2835%" y="1061" width="0.0717%" height="15" fill="rgb(223,111,35)" fg:x="9328747429" fg:w="20091501"/><text x="33.5335%" y="1071.50"></text></g><g><title>__rust_dealloc (20,091,501 samples, 0.07%)</title><rect x="33.2835%" y="1045" width="0.0717%" height="15" fill="rgb(229,147,28)" fg:x="9328747429" fg:w="20091501"/><text x="33.5335%" y="1055.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (20,091,501 samples, 0.07%)</title><rect x="33.2835%" y="1029" width="0.0717%" height="15" fill="rgb(211,29,28)" fg:x="9328747429" fg:w="20091501"/><text x="33.5335%" y="1039.50"></text></g><g><title>_rjem_sdallocx (18,364,683 samples, 0.07%)</title><rect x="33.2897%" y="1013" width="0.0655%" height="15" fill="rgb(228,72,33)" fg:x="9330474247" fg:w="18364683"/><text x="33.5397%" y="1023.50"></text></g><g><title>free_fastpath (16,530,235 samples, 0.06%)</title><rect x="33.2962%" y="997" width="0.0590%" height="15" fill="rgb(205,214,31)" fg:x="9332308695" fg:w="16530235"/><text x="33.5462%" y="1007.50"></text></g><g><title>cache_bin_dalloc_easy (5,418,321 samples, 0.02%)</title><rect x="33.3358%" y="981" width="0.0193%" height="15" fill="rgb(224,111,15)" fg:x="9343420609" fg:w="5418321"/><text x="33.5858%" y="991.50"></text></g><g><title>cache_bin_full (3,639,581 samples, 0.01%)</title><rect x="33.3422%" y="965" width="0.0130%" height="15" fill="rgb(253,21,26)" fg:x="9345199349" fg:w="3639581"/><text x="33.5922%" y="975.50"></text></g><g><title>core::mem::drop (27,517,941 samples, 0.10%)</title><rect x="33.2633%" y="1125" width="0.0982%" height="15" fill="rgb(245,139,43)" fg:x="9323095746" fg:w="27517941"/><text x="33.5133%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (27,517,941 samples, 0.10%)</title><rect x="33.2633%" y="1109" width="0.0982%" height="15" fill="rgb(252,170,7)" fg:x="9323095746" fg:w="27517941"/><text x="33.5133%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (21,866,258 samples, 0.08%)</title><rect x="33.2835%" y="1093" width="0.0780%" height="15" fill="rgb(231,118,14)" fg:x="9328747429" fg:w="21866258"/><text x="33.5335%" y="1103.50"></text></g><g><title>&lt;bytes::bytes::Shared as core::ops::drop::Drop&gt;::drop (21,866,258 samples, 0.08%)</title><rect x="33.2835%" y="1077" width="0.0780%" height="15" fill="rgb(238,83,0)" fg:x="9328747429" fg:w="21866258"/><text x="33.5335%" y="1087.50"></text></g><g><title>bytes::bytes::shared_drop (46,344,025 samples, 0.17%)</title><rect x="33.2165%" y="1189" width="0.1653%" height="15" fill="rgb(221,39,39)" fg:x="9309966864" fg:w="46344025"/><text x="33.4665%" y="1199.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (46,344,025 samples, 0.17%)</title><rect x="33.2165%" y="1173" width="0.1653%" height="15" fill="rgb(222,119,46)" fg:x="9309966864" fg:w="46344025"/><text x="33.4665%" y="1183.50"></text></g><g><title>bytes::bytes::shared_drop::_{{closure}} (46,344,025 samples, 0.17%)</title><rect x="33.2165%" y="1157" width="0.1653%" height="15" fill="rgb(222,165,49)" fg:x="9309966864" fg:w="46344025"/><text x="33.4665%" y="1167.50"></text></g><g><title>bytes::bytes::release_shared (44,678,978 samples, 0.16%)</title><rect x="33.2224%" y="1141" width="0.1594%" height="15" fill="rgb(219,113,52)" fg:x="9311631911" fg:w="44678978"/><text x="33.4724%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3,732,467 samples, 0.01%)</title><rect x="33.3685%" y="1125" width="0.0133%" height="15" fill="rgb(214,7,15)" fg:x="9352578422" fg:w="3732467"/><text x="33.6185%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_load (3,732,467 samples, 0.01%)</title><rect x="33.3685%" y="1109" width="0.0133%" height="15" fill="rgb(235,32,4)" fg:x="9352578422" fg:w="3732467"/><text x="33.6185%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;core::array::iter::IntoIter&lt;core::option::Option&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage&gt;,2_usize&gt;&gt;&gt; (5,611,184 samples, 0.02%)</title><rect x="33.4083%" y="1157" width="0.0200%" height="15" fill="rgb(238,90,54)" fg:x="9363739871" fg:w="5611184"/><text x="33.6583%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::array::iter::IntoIter&lt;core::option::Option&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage&gt;,2_usize&gt;&gt;&gt; (5,611,184 samples, 0.02%)</title><rect x="33.4083%" y="1141" width="0.0200%" height="15" fill="rgb(213,208,19)" fg:x="9363739871" fg:w="5611184"/><text x="33.6583%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::array::iter::IntoIter&lt;core::option::Option&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage&gt;,2_usize&gt;&gt; (5,611,184 samples, 0.02%)</title><rect x="33.4083%" y="1125" width="0.0200%" height="15" fill="rgb(233,156,4)" fg:x="9363739871" fg:w="5611184"/><text x="33.6583%" y="1135.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (5,611,184 samples, 0.02%)</title><rect x="33.4083%" y="1109" width="0.0200%" height="15" fill="rgb(207,194,5)" fg:x="9363739871" fg:w="5611184"/><text x="33.6583%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage&gt;]&gt; (3,684,770 samples, 0.01%)</title><rect x="33.4152%" y="1093" width="0.0131%" height="15" fill="rgb(206,111,30)" fg:x="9365666285" fg:w="3684770"/><text x="33.6652%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;core::array::iter::IntoIter&lt;core::option::Option&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage&gt;,2_usize&gt;&gt;&gt; (16,737,982 samples, 0.06%)</title><rect x="33.3818%" y="1189" width="0.0597%" height="15" fill="rgb(243,70,54)" fg:x="9356310889" fg:w="16737982"/><text x="33.6318%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;core::array::iter::IntoIter&lt;core::option::Option&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage&gt;,2_usize&gt;,core::option::IntoIter&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage&gt;&gt;&gt; (9,309,000 samples, 0.03%)</title><rect x="33.4083%" y="1173" width="0.0332%" height="15" fill="rgb(242,28,8)" fg:x="9363739871" fg:w="9309000"/><text x="33.6583%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::option::IntoIter&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage&gt;&gt;&gt; (3,697,816 samples, 0.01%)</title><rect x="33.4284%" y="1157" width="0.0132%" height="15" fill="rgb(219,106,18)" fg:x="9369351055" fg:w="3697816"/><text x="33.6784%" y="1167.50"></text></g><g><title>_rjem_sdallocx (17,262,920 samples, 0.06%)</title><rect x="33.5986%" y="1125" width="0.0616%" height="15" fill="rgb(244,222,10)" fg:x="9417071478" fg:w="17262920"/><text x="33.8486%" y="1135.50"></text></g><g><title>free_fastpath (15,162,014 samples, 0.05%)</title><rect x="33.6061%" y="1109" width="0.0541%" height="15" fill="rgb(236,179,52)" fg:x="9419172384" fg:w="15162014"/><text x="33.8561%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;rustls::msgs::base::PayloadU16,&amp;alloc::alloc::Global&gt;&gt; (19,769,507 samples, 0.07%)</title><rect x="33.6674%" y="1109" width="0.0705%" height="15" fill="rgb(213,23,39)" fg:x="9436342446" fg:w="19769507"/><text x="33.9174%" y="1119.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19,769,507 samples, 0.07%)</title><rect x="33.6674%" y="1093" width="0.0705%" height="15" fill="rgb(238,48,10)" fg:x="9436342446" fg:w="19769507"/><text x="33.9174%" y="1103.50"></text></g><g><title>cache_bin_dalloc_easy (5,325,227 samples, 0.02%)</title><rect x="33.7787%" y="933" width="0.0190%" height="15" fill="rgb(251,196,23)" fg:x="9467545057" fg:w="5325227"/><text x="34.0287%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16,696,172 samples, 0.06%)</title><rect x="33.7446%" y="1029" width="0.0596%" height="15" fill="rgb(250,152,24)" fg:x="9457983459" fg:w="16696172"/><text x="33.9946%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (16,696,172 samples, 0.06%)</title><rect x="33.7446%" y="1013" width="0.0596%" height="15" fill="rgb(209,150,17)" fg:x="9457983459" fg:w="16696172"/><text x="33.9946%" y="1023.50"></text></g><g><title>__rust_dealloc (16,696,172 samples, 0.06%)</title><rect x="33.7446%" y="997" width="0.0596%" height="15" fill="rgb(234,202,34)" fg:x="9457983459" fg:w="16696172"/><text x="33.9946%" y="1007.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16,696,172 samples, 0.06%)</title><rect x="33.7446%" y="981" width="0.0596%" height="15" fill="rgb(253,148,53)" fg:x="9457983459" fg:w="16696172"/><text x="33.9946%" y="991.50"></text></g><g><title>_rjem_sdallocx (16,696,172 samples, 0.06%)</title><rect x="33.7446%" y="965" width="0.0596%" height="15" fill="rgb(218,129,16)" fg:x="9457983459" fg:w="16696172"/><text x="33.9946%" y="975.50"></text></g><g><title>free_fastpath (14,732,351 samples, 0.05%)</title><rect x="33.7516%" y="949" width="0.0526%" height="15" fill="rgb(216,85,19)" fg:x="9459947280" fg:w="14732351"/><text x="34.0016%" y="959.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (42,200,885 samples, 0.15%)</title><rect x="33.6602%" y="1125" width="0.1506%" height="15" fill="rgb(235,228,7)" fg:x="9434334398" fg:w="42200885"/><text x="33.9102%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;rustls::msgs::base::PayloadU16&gt; (20,423,330 samples, 0.07%)</title><rect x="33.7379%" y="1109" width="0.0729%" height="15" fill="rgb(245,175,0)" fg:x="9456111953" fg:w="20423330"/><text x="33.9879%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (20,423,330 samples, 0.07%)</title><rect x="33.7379%" y="1093" width="0.0729%" height="15" fill="rgb(208,168,36)" fg:x="9456111953" fg:w="20423330"/><text x="33.9879%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (18,551,824 samples, 0.07%)</title><rect x="33.7446%" y="1077" width="0.0662%" height="15" fill="rgb(246,171,24)" fg:x="9457983459" fg:w="18551824"/><text x="33.9946%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,551,824 samples, 0.07%)</title><rect x="33.7446%" y="1061" width="0.0662%" height="15" fill="rgb(215,142,24)" fg:x="9457983459" fg:w="18551824"/><text x="33.9946%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (18,551,824 samples, 0.07%)</title><rect x="33.7446%" y="1045" width="0.0662%" height="15" fill="rgb(250,187,7)" fg:x="9457983459" fg:w="18551824"/><text x="33.9946%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::string::String&gt;&gt; (76,287,576 samples, 0.27%)</title><rect x="33.5453%" y="1157" width="0.2722%" height="15" fill="rgb(228,66,33)" fg:x="9402116449" fg:w="76287576"/><text x="33.7953%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76,287,576 samples, 0.27%)</title><rect x="33.5453%" y="1141" width="0.2722%" height="15" fill="rgb(234,215,21)" fg:x="9402116449" fg:w="76287576"/><text x="33.7953%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage&gt; (118,303,430 samples, 0.42%)</title><rect x="33.4416%" y="1189" width="0.4221%" height="15" fill="rgb(222,191,20)" fg:x="9373048871" fg:w="118303430"/><text x="33.6916%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::messages::parse::Parse&gt; (89,235,852 samples, 0.32%)</title><rect x="33.5453%" y="1173" width="0.3184%" height="15" fill="rgb(245,79,54)" fg:x="9402116449" fg:w="89235852"/><text x="33.7953%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;i32&gt;&gt;&gt; (12,948,276 samples, 0.05%)</title><rect x="33.8174%" y="1157" width="0.0462%" height="15" fill="rgb(240,10,37)" fg:x="9478404025" fg:w="12948276"/><text x="34.0674%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,948,276 samples, 0.05%)</title><rect x="33.8174%" y="1141" width="0.0462%" height="15" fill="rgb(214,192,32)" fg:x="9478404025" fg:w="12948276"/><text x="34.0674%" y="1151.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3,768,256 samples, 0.01%)</title><rect x="33.8502%" y="1125" width="0.0134%" height="15" fill="rgb(209,36,54)" fg:x="9487584045" fg:w="3768256"/><text x="34.1002%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;alloc::vec::Vec&lt;i32&gt;,&amp;alloc::alloc::Global&gt;&gt; (3,768,256 samples, 0.01%)</title><rect x="33.8502%" y="1109" width="0.0134%" height="15" fill="rgb(220,10,11)" fg:x="9487584045" fg:w="3768256"/><text x="34.1002%" y="1119.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,768,256 samples, 0.01%)</title><rect x="33.8502%" y="1093" width="0.0134%" height="15" fill="rgb(221,106,17)" fg:x="9487584045" fg:w="3768256"/><text x="34.1002%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14,604,539 samples, 0.05%)</title><rect x="33.8765%" y="1093" width="0.0521%" height="15" fill="rgb(251,142,44)" fg:x="9494962840" fg:w="14604539"/><text x="34.1265%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (14,604,539 samples, 0.05%)</title><rect x="33.8765%" y="1077" width="0.0521%" height="15" fill="rgb(238,13,15)" fg:x="9494962840" fg:w="14604539"/><text x="34.1265%" y="1087.50"></text></g><g><title>__rust_dealloc (14,604,539 samples, 0.05%)</title><rect x="33.8765%" y="1061" width="0.0521%" height="15" fill="rgb(208,107,27)" fg:x="9494962840" fg:w="14604539"/><text x="34.1265%" y="1071.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14,604,539 samples, 0.05%)</title><rect x="33.8765%" y="1045" width="0.0521%" height="15" fill="rgb(205,136,37)" fg:x="9494962840" fg:w="14604539"/><text x="34.1265%" y="1055.50"></text></g><g><title>_rjem_sdallocx (14,604,539 samples, 0.05%)</title><rect x="33.8765%" y="1029" width="0.0521%" height="15" fill="rgb(250,205,27)" fg:x="9494962840" fg:w="14604539"/><text x="34.1265%" y="1039.50"></text></g><g><title>free_fastpath (7,236,038 samples, 0.03%)</title><rect x="33.9028%" y="1013" width="0.0258%" height="15" fill="rgb(210,80,43)" fg:x="9502331341" fg:w="7236038"/><text x="34.1528%" y="1023.50"></text></g><g><title>cache_bin_dalloc_easy (5,451,965 samples, 0.02%)</title><rect x="33.9092%" y="997" width="0.0195%" height="15" fill="rgb(247,160,36)" fg:x="9504115414" fg:w="5451965"/><text x="34.1592%" y="1007.50"></text></g><g><title>cache_bin_full (5,451,965 samples, 0.02%)</title><rect x="33.9092%" y="981" width="0.0195%" height="15" fill="rgb(234,13,49)" fg:x="9504115414" fg:w="5451965"/><text x="34.1592%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (18,227,391 samples, 0.07%)</title><rect x="33.8700%" y="1173" width="0.0650%" height="15" fill="rgb(234,122,0)" fg:x="9493124867" fg:w="18227391"/><text x="34.1200%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (18,227,391 samples, 0.07%)</title><rect x="33.8700%" y="1157" width="0.0650%" height="15" fill="rgb(207,146,38)" fg:x="9493124867" fg:w="18227391"/><text x="34.1200%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (16,389,418 samples, 0.06%)</title><rect x="33.8765%" y="1141" width="0.0585%" height="15" fill="rgb(207,177,25)" fg:x="9494962840" fg:w="16389418"/><text x="34.1265%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,389,418 samples, 0.06%)</title><rect x="33.8765%" y="1125" width="0.0585%" height="15" fill="rgb(211,178,42)" fg:x="9494962840" fg:w="16389418"/><text x="34.1265%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (16,389,418 samples, 0.06%)</title><rect x="33.8765%" y="1109" width="0.0585%" height="15" fill="rgb(230,69,54)" fg:x="9494962840" fg:w="16389418"/><text x="34.1265%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;i16&gt;&gt; (47,244,710 samples, 0.17%)</title><rect x="33.9350%" y="1173" width="0.1686%" height="15" fill="rgb(214,135,41)" fg:x="9511352258" fg:w="47244710"/><text x="34.1850%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;i16&gt;&gt; (16,915,577 samples, 0.06%)</title><rect x="34.0432%" y="1157" width="0.0604%" height="15" fill="rgb(237,67,25)" fg:x="9541681391" fg:w="16915577"/><text x="34.2932%" y="1167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,915,577 samples, 0.06%)</title><rect x="34.0432%" y="1141" width="0.0604%" height="15" fill="rgb(222,189,50)" fg:x="9541681391" fg:w="16915577"/><text x="34.2932%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (16,915,577 samples, 0.06%)</title><rect x="34.0432%" y="1125" width="0.0604%" height="15" fill="rgb(245,148,34)" fg:x="9541681391" fg:w="16915577"/><text x="34.2932%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16,915,577 samples, 0.06%)</title><rect x="34.0432%" y="1109" width="0.0604%" height="15" fill="rgb(222,29,6)" fg:x="9541681391" fg:w="16915577"/><text x="34.2932%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (16,915,577 samples, 0.06%)</title><rect x="34.0432%" y="1093" width="0.0604%" height="15" fill="rgb(221,189,43)" fg:x="9541681391" fg:w="16915577"/><text x="34.2932%" y="1103.50"></text></g><g><title>__rust_dealloc (16,915,577 samples, 0.06%)</title><rect x="34.0432%" y="1077" width="0.0604%" height="15" fill="rgb(207,36,27)" fg:x="9541681391" fg:w="16915577"/><text x="34.2932%" y="1087.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (16,915,577 samples, 0.06%)</title><rect x="34.0432%" y="1061" width="0.0604%" height="15" fill="rgb(217,90,24)" fg:x="9541681391" fg:w="16915577"/><text x="34.2932%" y="1071.50"></text></g><g><title>_rjem_sdallocx (16,915,577 samples, 0.06%)</title><rect x="34.0432%" y="1045" width="0.0604%" height="15" fill="rgb(224,66,35)" fg:x="9541681391" fg:w="16915577"/><text x="34.2932%" y="1055.50"></text></g><g><title>free_fastpath (15,110,754 samples, 0.05%)</title><rect x="34.0496%" y="1029" width="0.0539%" height="15" fill="rgb(221,13,50)" fg:x="9543486214" fg:w="15110754"/><text x="34.2996%" y="1039.50"></text></g><g><title>cache_bin_dalloc_easy (3,783,545 samples, 0.01%)</title><rect x="34.0901%" y="1013" width="0.0135%" height="15" fill="rgb(236,68,49)" fg:x="9554813423" fg:w="3783545"/><text x="34.3401%" y="1023.50"></text></g><g><title>cache_bin_dalloc_easy (4,118,490 samples, 0.01%)</title><rect x="34.1246%" y="949" width="0.0147%" height="15" fill="rgb(229,146,28)" fg:x="9564483243" fg:w="4118490"/><text x="34.3746%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,866,675 samples, 0.04%)</title><rect x="34.1036%" y="1157" width="0.0423%" height="15" fill="rgb(225,31,38)" fg:x="9558596968" fg:w="11866675"/><text x="34.3536%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[pgdog::net::messages::bind::Parameter]&gt; (11,866,675 samples, 0.04%)</title><rect x="34.1036%" y="1141" width="0.0423%" height="15" fill="rgb(250,208,3)" fg:x="9558596968" fg:w="11866675"/><text x="34.3536%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::messages::bind::Parameter&gt; (7,931,094 samples, 0.03%)</title><rect x="34.1176%" y="1125" width="0.0283%" height="15" fill="rgb(246,54,23)" fg:x="9562532549" fg:w="7931094"/><text x="34.3676%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7,931,094 samples, 0.03%)</title><rect x="34.1176%" y="1109" width="0.0283%" height="15" fill="rgb(243,76,11)" fg:x="9562532549" fg:w="7931094"/><text x="34.3676%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7,931,094 samples, 0.03%)</title><rect x="34.1176%" y="1093" width="0.0283%" height="15" fill="rgb(245,21,50)" fg:x="9562532549" fg:w="7931094"/><text x="34.3676%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,931,094 samples, 0.03%)</title><rect x="34.1176%" y="1077" width="0.0283%" height="15" fill="rgb(228,9,43)" fg:x="9562532549" fg:w="7931094"/><text x="34.3676%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (7,931,094 samples, 0.03%)</title><rect x="34.1176%" y="1061" width="0.0283%" height="15" fill="rgb(208,100,47)" fg:x="9562532549" fg:w="7931094"/><text x="34.3676%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7,931,094 samples, 0.03%)</title><rect x="34.1176%" y="1045" width="0.0283%" height="15" fill="rgb(232,26,8)" fg:x="9562532549" fg:w="7931094"/><text x="34.3676%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (7,931,094 samples, 0.03%)</title><rect x="34.1176%" y="1029" width="0.0283%" height="15" fill="rgb(216,166,38)" fg:x="9562532549" fg:w="7931094"/><text x="34.3676%" y="1039.50"></text></g><g><title>__rust_dealloc (7,931,094 samples, 0.03%)</title><rect x="34.1176%" y="1013" width="0.0283%" height="15" fill="rgb(251,202,51)" fg:x="9562532549" fg:w="7931094"/><text x="34.3676%" y="1023.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (7,931,094 samples, 0.03%)</title><rect x="34.1176%" y="997" width="0.0283%" height="15" fill="rgb(254,216,34)" fg:x="9562532549" fg:w="7931094"/><text x="34.3676%" y="1007.50"></text></g><g><title>_rjem_sdallocx (7,931,094 samples, 0.03%)</title><rect x="34.1176%" y="981" width="0.0283%" height="15" fill="rgb(251,32,27)" fg:x="9562532549" fg:w="7931094"/><text x="34.3676%" y="991.50"></text></g><g><title>free_fastpath (7,931,094 samples, 0.03%)</title><rect x="34.1176%" y="965" width="0.0283%" height="15" fill="rgb(208,127,28)" fg:x="9562532549" fg:w="7931094"/><text x="34.3676%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9,488,166 samples, 0.03%)</title><rect x="34.1459%" y="1109" width="0.0339%" height="15" fill="rgb(224,137,22)" fg:x="9570463643" fg:w="9488166"/><text x="34.3959%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (9,488,166 samples, 0.03%)</title><rect x="34.1459%" y="1093" width="0.0339%" height="15" fill="rgb(254,70,32)" fg:x="9570463643" fg:w="9488166"/><text x="34.3959%" y="1103.50"></text></g><g><title>__rust_dealloc (9,488,166 samples, 0.03%)</title><rect x="34.1459%" y="1077" width="0.0339%" height="15" fill="rgb(229,75,37)" fg:x="9570463643" fg:w="9488166"/><text x="34.3959%" y="1087.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (9,488,166 samples, 0.03%)</title><rect x="34.1459%" y="1061" width="0.0339%" height="15" fill="rgb(252,64,23)" fg:x="9570463643" fg:w="9488166"/><text x="34.3959%" y="1071.50"></text></g><g><title>_rjem_sdallocx (9,488,166 samples, 0.03%)</title><rect x="34.1459%" y="1045" width="0.0339%" height="15" fill="rgb(232,162,48)" fg:x="9570463643" fg:w="9488166"/><text x="34.3959%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::messages::bind::Bind&gt; (90,559,694 samples, 0.32%)</title><rect x="33.8636%" y="1189" width="0.3231%" height="15" fill="rgb(246,160,12)" fg:x="9491352301" fg:w="90559694"/><text x="34.1136%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;pgdog::net::messages::bind::Parameter&gt;&gt; (23,315,027 samples, 0.08%)</title><rect x="34.1036%" y="1173" width="0.0832%" height="15" fill="rgb(247,166,0)" fg:x="9558596968" fg:w="23315027"/><text x="34.3536%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;pgdog::net::messages::bind::Parameter&gt;&gt; (11,448,352 samples, 0.04%)</title><rect x="34.1459%" y="1157" width="0.0408%" height="15" fill="rgb(249,219,21)" fg:x="9570463643" fg:w="11448352"/><text x="34.3959%" y="1167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,448,352 samples, 0.04%)</title><rect x="34.1459%" y="1141" width="0.0408%" height="15" fill="rgb(205,209,3)" fg:x="9570463643" fg:w="11448352"/><text x="34.3959%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (11,448,352 samples, 0.04%)</title><rect x="34.1459%" y="1125" width="0.0408%" height="15" fill="rgb(243,44,1)" fg:x="9570463643" fg:w="11448352"/><text x="34.3959%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::stream::Stream::send&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage&gt;::{{closure}}&gt; (5,466,968 samples, 0.02%)</title><rect x="34.1867%" y="1189" width="0.0195%" height="15" fill="rgb(206,159,16)" fg:x="9581911995" fg:w="5466968"/><text x="34.4367%" y="1199.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3,688,169 samples, 0.01%)</title><rect x="34.7293%" y="1157" width="0.0132%" height="15" fill="rgb(244,77,30)" fg:x="9733976558" fg:w="3688169"/><text x="34.9793%" y="1167.50"></text></g><g><title>&lt;pgdog::backend::protocol::state::ExecutionCode as core::convert::From&lt;char&gt;&gt;::from (3,688,169 samples, 0.01%)</title><rect x="34.7293%" y="1141" width="0.0132%" height="15" fill="rgb(218,69,12)" fg:x="9733976558" fg:w="3688169"/><text x="34.9793%" y="1151.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_full (7,370,107 samples, 0.03%)</title><rect x="34.7488%" y="1141" width="0.0263%" height="15" fill="rgb(212,87,7)" fg:x="9739447928" fg:w="7370107"/><text x="34.9988%" y="1151.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::capacity (3,602,355 samples, 0.01%)</title><rect x="34.7622%" y="1125" width="0.0129%" height="15" fill="rgb(245,114,25)" fg:x="9743215680" fg:w="3602355"/><text x="35.0122%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (3,602,355 samples, 0.01%)</title><rect x="34.7622%" y="1109" width="0.0129%" height="15" fill="rgb(210,61,42)" fg:x="9743215680" fg:w="3602355"/><text x="35.0122%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::capacity (3,602,355 samples, 0.01%)</title><rect x="34.7622%" y="1093" width="0.0129%" height="15" fill="rgb(211,52,33)" fg:x="9743215680" fg:w="3602355"/><text x="35.0122%" y="1103.50"></text></g><g><title>alloc::collections::vec_deque::wrap_index (7,304,791 samples, 0.03%)</title><rect x="34.7751%" y="1109" width="0.0261%" height="15" fill="rgb(234,58,33)" fg:x="9746818035" fg:w="7304791"/><text x="35.0251%" y="1119.50"></text></g><g><title>pgdog::backend::protocol::state::ProtocolState::add (29,524,707 samples, 0.11%)</title><rect x="34.7090%" y="1173" width="0.1053%" height="15" fill="rgb(220,115,36)" fg:x="9728302907" fg:w="29524707"/><text x="34.9590%" y="1183.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (20,162,887 samples, 0.07%)</title><rect x="34.7424%" y="1157" width="0.0719%" height="15" fill="rgb(243,153,54)" fg:x="9737664727" fg:w="20162887"/><text x="34.9924%" y="1167.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (11,009,579 samples, 0.04%)</title><rect x="34.7751%" y="1141" width="0.0393%" height="15" fill="rgb(251,47,18)" fg:x="9746818035" fg:w="11009579"/><text x="35.0251%" y="1151.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (11,009,579 samples, 0.04%)</title><rect x="34.7751%" y="1125" width="0.0393%" height="15" fill="rgb(242,102,42)" fg:x="9746818035" fg:w="11009579"/><text x="35.0251%" y="1135.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (3,704,788 samples, 0.01%)</title><rect x="34.8012%" y="1109" width="0.0132%" height="15" fill="rgb(234,31,38)" fg:x="9754122826" fg:w="3704788"/><text x="35.0512%" y="1119.50"></text></g><g><title>pgdog::backend::prepared_statements::PreparedStatements::handle (176,018,720 samples, 0.63%)</title><rect x="34.2062%" y="1189" width="0.6280%" height="15" fill="rgb(221,117,51)" fg:x="9587378963" fg:w="176018720"/><text x="34.4562%" y="1199.50"></text></g><g><title>pgdog::net::messages::describe::Describe::anonymous (5,570,069 samples, 0.02%)</title><rect x="34.8144%" y="1173" width="0.0199%" height="15" fill="rgb(212,20,18)" fg:x="9757827614" fg:w="5570069"/><text x="35.0644%" y="1183.50"></text></g><g><title>[libc.so.6] (16,861,206 samples, 0.06%)</title><rect x="34.8668%" y="1141" width="0.0602%" height="15" fill="rgb(245,133,36)" fg:x="9772516705" fg:w="16861206"/><text x="35.1168%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,std::collections::hash::map::HashMap&lt;pgdog::net::messages::backend_key::BackendKeyData,pgdog::backend::stats::ConnectedServer,core::hash::BuildHasherDefault&lt;fnv::FnvHasher&gt;&gt;&gt;&gt; (10,899,603 samples, 0.04%)</title><rect x="34.9269%" y="1141" width="0.0389%" height="15" fill="rgb(212,6,19)" fg:x="9789377911" fg:w="10899603"/><text x="35.1769%" y="1151.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (10,899,603 samples, 0.04%)</title><rect x="34.9269%" y="1125" width="0.0389%" height="15" fill="rgb(218,1,36)" fg:x="9789377911" fg:w="10899603"/><text x="35.1769%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (10,899,603 samples, 0.04%)</title><rect x="34.9269%" y="1109" width="0.0389%" height="15" fill="rgb(246,84,54)" fg:x="9789377911" fg:w="10899603"/><text x="35.1769%" y="1119.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (12,791,793 samples, 0.05%)</title><rect x="34.9658%" y="1141" width="0.0456%" height="15" fill="rgb(242,110,6)" fg:x="9800277514" fg:w="12791793"/><text x="35.2158%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (12,791,793 samples, 0.05%)</title><rect x="34.9658%" y="1125" width="0.0456%" height="15" fill="rgb(214,47,5)" fg:x="9800277514" fg:w="12791793"/><text x="35.2158%" y="1135.50"></text></g><g><title>hashbrown::map::make_hash (3,769,496 samples, 0.01%)</title><rect x="35.0115%" y="1093" width="0.0134%" height="15" fill="rgb(218,159,25)" fg:x="9813069307" fg:w="3769496"/><text x="35.2615%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,769,496 samples, 0.01%)</title><rect x="35.0115%" y="1077" width="0.0134%" height="15" fill="rgb(215,211,28)" fg:x="9813069307" fg:w="3769496"/><text x="35.2615%" y="1087.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3,769,496 samples, 0.01%)</title><rect x="35.0115%" y="1061" width="0.0134%" height="15" fill="rgb(238,59,32)" fg:x="9813069307" fg:w="3769496"/><text x="35.2615%" y="1071.50"></text></g><g><title>&lt;pgdog::net::messages::backend_key::BackendKeyData as core::hash::Hash&gt;::hash (3,769,496 samples, 0.01%)</title><rect x="35.0115%" y="1045" width="0.0134%" height="15" fill="rgb(226,82,3)" fg:x="9813069307" fg:w="3769496"/><text x="35.2615%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (3,769,496 samples, 0.01%)</title><rect x="35.0115%" y="1029" width="0.0134%" height="15" fill="rgb(240,164,32)" fg:x="9813069307" fg:w="3769496"/><text x="35.2615%" y="1039.50"></text></g><g><title>core::hash::Hasher::write_i32 (3,769,496 samples, 0.01%)</title><rect x="35.0115%" y="1013" width="0.0134%" height="15" fill="rgb(232,46,7)" fg:x="9813069307" fg:w="3769496"/><text x="35.2615%" y="1023.50"></text></g><g><title>core::hash::Hasher::write_u32 (3,769,496 samples, 0.01%)</title><rect x="35.0115%" y="997" width="0.0134%" height="15" fill="rgb(229,129,53)" fg:x="9813069307" fg:w="3769496"/><text x="35.2615%" y="1007.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (3,769,496 samples, 0.01%)</title><rect x="35.0115%" y="981" width="0.0134%" height="15" fill="rgb(234,188,29)" fg:x="9813069307" fg:w="3769496"/><text x="35.2615%" y="991.50"></text></g><g><title>core::intrinsics::likely (31,404,118 samples, 0.11%)</title><rect x="35.0381%" y="1045" width="0.1120%" height="15" fill="rgb(246,141,4)" fg:x="9820543292" fg:w="31404118"/><text x="35.2881%" y="1055.50"></text></g><g><title>hashbrown::control::tag::Tag::full (18,046,467 samples, 0.06%)</title><rect x="35.1571%" y="1045" width="0.0644%" height="15" fill="rgb(229,23,39)" fg:x="9853873813" fg:w="18046467"/><text x="35.4071%" y="1055.50"></text></g><g><title>pgdog::backend::stats::Stats::update (108,269,552 samples, 0.39%)</title><rect x="34.8483%" y="1173" width="0.3863%" height="15" fill="rgb(206,12,3)" fg:x="9767340493" fg:w="108269552"/><text x="35.0983%" y="1183.50"></text></g><g><title>pgdog::backend::stats::update (104,908,605 samples, 0.37%)</title><rect x="34.8603%" y="1157" width="0.3743%" height="15" fill="rgb(252,226,20)" fg:x="9770701440" fg:w="104908605"/><text x="35.1103%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (62,540,738 samples, 0.22%)</title><rect x="35.0115%" y="1141" width="0.2231%" height="15" fill="rgb(216,123,35)" fg:x="9813069307" fg:w="62540738"/><text x="35.2615%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (62,540,738 samples, 0.22%)</title><rect x="35.0115%" y="1125" width="0.2231%" height="15" fill="rgb(212,68,40)" fg:x="9813069307" fg:w="62540738"/><text x="35.2615%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (62,540,738 samples, 0.22%)</title><rect x="35.0115%" y="1109" width="0.2231%" height="15" fill="rgb(254,125,32)" fg:x="9813069307" fg:w="62540738"/><text x="35.2615%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (58,771,242 samples, 0.21%)</title><rect x="35.0249%" y="1093" width="0.2097%" height="15" fill="rgb(253,97,22)" fg:x="9816838803" fg:w="58771242"/><text x="35.2749%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (58,771,242 samples, 0.21%)</title><rect x="35.0249%" y="1077" width="0.2097%" height="15" fill="rgb(241,101,14)" fg:x="9816838803" fg:w="58771242"/><text x="35.2749%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (58,771,242 samples, 0.21%)</title><rect x="35.0249%" y="1061" width="0.2097%" height="15" fill="rgb(238,103,29)" fg:x="9816838803" fg:w="58771242"/><text x="35.2749%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (3,689,765 samples, 0.01%)</title><rect x="35.2214%" y="1045" width="0.0132%" height="15" fill="rgb(233,195,47)" fg:x="9871920280" fg:w="3689765"/><text x="35.4714%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (3,689,765 samples, 0.01%)</title><rect x="35.2214%" y="1029" width="0.0132%" height="15" fill="rgb(246,218,30)" fg:x="9871920280" fg:w="3689765"/><text x="35.4714%" y="1039.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (3,689,765 samples, 0.01%)</title><rect x="35.2214%" y="1013" width="0.0132%" height="15" fill="rgb(219,145,47)" fg:x="9871920280" fg:w="3689765"/><text x="35.4714%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3,689,765 samples, 0.01%)</title><rect x="35.2214%" y="997" width="0.0132%" height="15" fill="rgb(243,12,26)" fg:x="9871920280" fg:w="3689765"/><text x="35.4714%" y="1007.50"></text></g><g><title>clock_gettime (107,138,043 samples, 0.38%)</title><rect x="35.2346%" y="1125" width="0.3823%" height="15" fill="rgb(214,87,16)" fg:x="9875610045" fg:w="107138043"/><text x="35.4846%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (103,530,462 samples, 0.37%)</title><rect x="35.2475%" y="1109" width="0.3694%" height="15" fill="rgb(208,99,42)" fg:x="9879217626" fg:w="103530462"/><text x="35.4975%" y="1119.50"></text></g><g><title>pgdog::backend::stats::Stats::state (222,977,298 samples, 0.80%)</title><rect x="34.8343%" y="1189" width="0.7955%" height="15" fill="rgb(253,99,2)" fg:x="9763397683" fg:w="222977298"/><text x="35.0843%" y="1199.50"></text></g><g><title>std::time::Instant::now (110,764,936 samples, 0.40%)</title><rect x="35.2346%" y="1173" width="0.3952%" height="15" fill="rgb(220,168,23)" fg:x="9875610045" fg:w="110764936"/><text x="35.4846%" y="1183.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (110,764,936 samples, 0.40%)</title><rect x="35.2346%" y="1157" width="0.3952%" height="15" fill="rgb(242,38,24)" fg:x="9875610045" fg:w="110764936"/><text x="35.4846%" y="1167.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (110,764,936 samples, 0.40%)</title><rect x="35.2346%" y="1141" width="0.3952%" height="15" fill="rgb(225,182,9)" fg:x="9875610045" fg:w="110764936"/><text x="35.4846%" y="1151.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (3,626,893 samples, 0.01%)</title><rect x="35.6169%" y="1125" width="0.0129%" height="15" fill="rgb(243,178,37)" fg:x="9982748088" fg:w="3626893"/><text x="35.8669%" y="1135.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (58,879,789 samples, 0.21%)</title><rect x="36.3087%" y="1173" width="0.2101%" height="15" fill="rgb(232,139,19)" fg:x="10176653549" fg:w="58879789"/><text x="36.5587%" y="1183.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4,952,098 samples, 0.02%)</title><rect x="36.8630%" y="997" width="0.0177%" height="15" fill="rgb(225,201,24)" fg:x="10332018441" fg:w="4952098"/><text x="37.1130%" y="1007.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (9,482,678 samples, 0.03%)</title><rect x="36.8630%" y="1109" width="0.0338%" height="15" fill="rgb(221,47,46)" fg:x="10332018441" fg:w="9482678"/><text x="37.1130%" y="1119.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (9,482,678 samples, 0.03%)</title><rect x="36.8630%" y="1093" width="0.0338%" height="15" fill="rgb(249,23,13)" fg:x="10332018441" fg:w="9482678"/><text x="37.1130%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9,482,678 samples, 0.03%)</title><rect x="36.8630%" y="1077" width="0.0338%" height="15" fill="rgb(219,9,5)" fg:x="10332018441" fg:w="9482678"/><text x="37.1130%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9,482,678 samples, 0.03%)</title><rect x="36.8630%" y="1061" width="0.0338%" height="15" fill="rgb(254,171,16)" fg:x="10332018441" fg:w="9482678"/><text x="37.1130%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (9,482,678 samples, 0.03%)</title><rect x="36.8630%" y="1045" width="0.0338%" height="15" fill="rgb(230,171,20)" fg:x="10332018441" fg:w="9482678"/><text x="37.1130%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (9,482,678 samples, 0.03%)</title><rect x="36.8630%" y="1029" width="0.0338%" height="15" fill="rgb(210,71,41)" fg:x="10332018441" fg:w="9482678"/><text x="37.1130%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (9,482,678 samples, 0.03%)</title><rect x="36.8630%" y="1013" width="0.0338%" height="15" fill="rgb(206,173,20)" fg:x="10332018441" fg:w="9482678"/><text x="37.1130%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (4,530,580 samples, 0.02%)</title><rect x="36.8807%" y="997" width="0.0162%" height="15" fill="rgb(233,88,34)" fg:x="10336970539" fg:w="4530580"/><text x="37.1307%" y="1007.50"></text></g><g><title>_rjem_malloc (4,530,580 samples, 0.02%)</title><rect x="36.8807%" y="981" width="0.0162%" height="15" fill="rgb(223,209,46)" fg:x="10336970539" fg:w="4530580"/><text x="37.1307%" y="991.50"></text></g><g><title>imalloc_fastpath (4,530,580 samples, 0.02%)</title><rect x="36.8807%" y="965" width="0.0162%" height="15" fill="rgb(250,43,18)" fg:x="10336970539" fg:w="4530580"/><text x="37.1307%" y="975.50"></text></g><g><title>cache_bin_alloc_easy (4,530,580 samples, 0.02%)</title><rect x="36.8807%" y="949" width="0.0162%" height="15" fill="rgb(208,13,10)" fg:x="10336970539" fg:w="4530580"/><text x="37.1307%" y="959.50"></text></g><g><title>cache_bin_alloc_impl (4,530,580 samples, 0.02%)</title><rect x="36.8807%" y="933" width="0.0162%" height="15" fill="rgb(212,200,36)" fg:x="10336970539" fg:w="4530580"/><text x="37.1307%" y="943.50"></text></g><g><title>&lt;pgdog::net::messages::copy_data::CopyData as pgdog::net::messages::ToBytes&gt;::to_bytes (13,934,175 samples, 0.05%)</title><rect x="36.8630%" y="1157" width="0.0497%" height="15" fill="rgb(225,90,30)" fg:x="10332018441" fg:w="13934175"/><text x="37.1130%" y="1167.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put (13,934,175 samples, 0.05%)</title><rect x="36.8630%" y="1141" width="0.0497%" height="15" fill="rgb(236,182,39)" fg:x="10332018441" fg:w="13934175"/><text x="37.1130%" y="1151.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (13,934,175 samples, 0.05%)</title><rect x="36.8630%" y="1125" width="0.0497%" height="15" fill="rgb(212,144,35)" fg:x="10332018441" fg:w="13934175"/><text x="37.1130%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,451,497 samples, 0.02%)</title><rect x="36.8968%" y="1109" width="0.0159%" height="15" fill="rgb(228,63,44)" fg:x="10341501119" fg:w="4451497"/><text x="37.1468%" y="1119.50"></text></g><g><title>[libc.so.6] (4,451,497 samples, 0.02%)</title><rect x="36.8968%" y="1093" width="0.0159%" height="15" fill="rgb(228,109,6)" fg:x="10341501119" fg:w="4451497"/><text x="37.1468%" y="1103.50"></text></g><g><title>&lt;pgdog::net::messages::describe::Describe as pgdog::net::messages::ToBytes&gt;::to_bytes (3,889,876 samples, 0.01%)</title><rect x="36.9127%" y="1157" width="0.0139%" height="15" fill="rgb(238,117,24)" fg:x="10345952616" fg:w="3889876"/><text x="37.1627%" y="1167.50"></text></g><g><title>&lt;pgdog::net::messages::sync::Sync as pgdog::net::messages::ToBytes&gt;::to_bytes (7,344,128 samples, 0.03%)</title><rect x="36.9266%" y="1157" width="0.0262%" height="15" fill="rgb(242,26,26)" fg:x="10349842492" fg:w="7344128"/><text x="37.1766%" y="1167.50"></text></g><g><title>pgdog::net::messages::payload::Payload::named (3,709,943 samples, 0.01%)</title><rect x="36.9396%" y="1141" width="0.0132%" height="15" fill="rgb(221,92,48)" fg:x="10353476677" fg:w="3709943"/><text x="37.1896%" y="1151.50"></text></g><g><title>_rjem_sdallocx (4,738,211 samples, 0.02%)</title><rect x="36.9528%" y="1157" width="0.0169%" height="15" fill="rgb(209,209,32)" fg:x="10357186620" fg:w="4738211"/><text x="37.2028%" y="1167.50"></text></g><g><title>free_fastpath (4,738,211 samples, 0.02%)</title><rect x="36.9528%" y="1141" width="0.0169%" height="15" fill="rgb(221,70,22)" fg:x="10357186620" fg:w="4738211"/><text x="37.2028%" y="1151.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (48,568,416 samples, 0.17%)</title><rect x="36.9768%" y="1141" width="0.1733%" height="15" fill="rgb(248,145,5)" fg:x="10363900394" fg:w="48568416"/><text x="37.2268%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (13,181,857 samples, 0.05%)</title><rect x="37.1030%" y="1125" width="0.0470%" height="15" fill="rgb(226,116,26)" fg:x="10399286953" fg:w="13181857"/><text x="37.3530%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_add (13,181,857 samples, 0.05%)</title><rect x="37.1030%" y="1109" width="0.0470%" height="15" fill="rgb(244,5,17)" fg:x="10399286953" fg:w="13181857"/><text x="37.3530%" y="1119.50"></text></g><g><title>bytes::bytes::shared_clone (52,537,366 samples, 0.19%)</title><rect x="36.9697%" y="1157" width="0.1874%" height="15" fill="rgb(252,159,33)" fg:x="10361924831" fg:w="52537366"/><text x="37.2197%" y="1167.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (3,593,972 samples, 0.01%)</title><rect x="37.1999%" y="1093" width="0.0128%" height="15" fill="rgb(206,71,0)" fg:x="10426435600" fg:w="3593972"/><text x="37.4499%" y="1103.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (5,555,406 samples, 0.02%)</title><rect x="37.1999%" y="1125" width="0.0198%" height="15" fill="rgb(233,118,54)" fg:x="10426435600" fg:w="5555406"/><text x="37.4499%" y="1135.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (5,555,406 samples, 0.02%)</title><rect x="37.1999%" y="1109" width="0.0198%" height="15" fill="rgb(234,83,48)" fg:x="10426435600" fg:w="5555406"/><text x="37.4499%" y="1119.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12,058,437 samples, 0.04%)</title><rect x="37.2197%" y="1109" width="0.0430%" height="15" fill="rgb(228,3,54)" fg:x="10431991006" fg:w="12058437"/><text x="37.4697%" y="1119.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (12,058,437 samples, 0.04%)</title><rect x="37.2197%" y="1093" width="0.0430%" height="15" fill="rgb(226,155,13)" fg:x="10431991006" fg:w="12058437"/><text x="37.4697%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (8,414,811 samples, 0.03%)</title><rect x="37.2327%" y="1077" width="0.0300%" height="15" fill="rgb(241,28,37)" fg:x="10435634632" fg:w="8414811"/><text x="37.4827%" y="1087.50"></text></g><g><title>alloc::alloc::exchange_malloc (3,712,943 samples, 0.01%)</title><rect x="37.2495%" y="1061" width="0.0132%" height="15" fill="rgb(233,93,10)" fg:x="10440336500" fg:w="3712943"/><text x="37.4995%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,712,943 samples, 0.01%)</title><rect x="37.2495%" y="1045" width="0.0132%" height="15" fill="rgb(225,113,19)" fg:x="10440336500" fg:w="3712943"/><text x="37.4995%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,712,943 samples, 0.01%)</title><rect x="37.2495%" y="1029" width="0.0132%" height="15" fill="rgb(241,2,18)" fg:x="10440336500" fg:w="3712943"/><text x="37.4995%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (3,712,943 samples, 0.01%)</title><rect x="37.2495%" y="1013" width="0.0132%" height="15" fill="rgb(228,207,21)" fg:x="10440336500" fg:w="3712943"/><text x="37.4995%" y="1023.50"></text></g><g><title>__rust_alloc (3,712,943 samples, 0.01%)</title><rect x="37.2495%" y="997" width="0.0132%" height="15" fill="rgb(213,211,35)" fg:x="10440336500" fg:w="3712943"/><text x="37.4995%" y="1007.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3,712,943 samples, 0.01%)</title><rect x="37.2495%" y="981" width="0.0132%" height="15" fill="rgb(209,83,10)" fg:x="10440336500" fg:w="3712943"/><text x="37.4995%" y="991.50"></text></g><g><title>_rjem_malloc (3,712,943 samples, 0.01%)</title><rect x="37.2495%" y="965" width="0.0132%" height="15" fill="rgb(209,164,1)" fg:x="10440336500" fg:w="3712943"/><text x="37.4995%" y="975.50"></text></g><g><title>imalloc_fastpath (3,712,943 samples, 0.01%)</title><rect x="37.2495%" y="949" width="0.0132%" height="15" fill="rgb(213,184,43)" fg:x="10440336500" fg:w="3712943"/><text x="37.4995%" y="959.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (13,957,247 samples, 0.05%)</title><rect x="37.2197%" y="1125" width="0.0498%" height="15" fill="rgb(231,61,34)" fg:x="10431991006" fg:w="13957247"/><text x="37.4697%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (14,971,494 samples, 0.05%)</title><rect x="37.2695%" y="1109" width="0.0534%" height="15" fill="rgb(235,75,3)" fg:x="10445948253" fg:w="14971494"/><text x="37.5195%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14,971,494 samples, 0.05%)</title><rect x="37.2695%" y="1093" width="0.0534%" height="15" fill="rgb(220,106,47)" fg:x="10445948253" fg:w="14971494"/><text x="37.5195%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14,971,494 samples, 0.05%)</title><rect x="37.2695%" y="1077" width="0.0534%" height="15" fill="rgb(210,196,33)" fg:x="10445948253" fg:w="14971494"/><text x="37.5195%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (14,971,494 samples, 0.05%)</title><rect x="37.2695%" y="1061" width="0.0534%" height="15" fill="rgb(229,154,42)" fg:x="10445948253" fg:w="14971494"/><text x="37.5195%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (14,971,494 samples, 0.05%)</title><rect x="37.2695%" y="1045" width="0.0534%" height="15" fill="rgb(228,114,26)" fg:x="10445948253" fg:w="14971494"/><text x="37.5195%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,519,636 samples, 0.03%)</title><rect x="37.2889%" y="1029" width="0.0340%" height="15" fill="rgb(208,144,1)" fg:x="10451400111" fg:w="9519636"/><text x="37.5389%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,519,636 samples, 0.03%)</title><rect x="37.2889%" y="1013" width="0.0340%" height="15" fill="rgb(239,112,37)" fg:x="10451400111" fg:w="9519636"/><text x="37.5389%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (9,519,636 samples, 0.03%)</title><rect x="37.2889%" y="997" width="0.0340%" height="15" fill="rgb(210,96,50)" fg:x="10451400111" fg:w="9519636"/><text x="37.5389%" y="1007.50"></text></g><g><title>__rust_alloc (9,519,636 samples, 0.03%)</title><rect x="37.2889%" y="981" width="0.0340%" height="15" fill="rgb(222,178,2)" fg:x="10451400111" fg:w="9519636"/><text x="37.5389%" y="991.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (9,519,636 samples, 0.03%)</title><rect x="37.2889%" y="965" width="0.0340%" height="15" fill="rgb(226,74,18)" fg:x="10451400111" fg:w="9519636"/><text x="37.5389%" y="975.50"></text></g><g><title>_rjem_malloc (7,518,116 samples, 0.03%)</title><rect x="37.2961%" y="949" width="0.0268%" height="15" fill="rgb(225,67,54)" fg:x="10453401631" fg:w="7518116"/><text x="37.5461%" y="959.50"></text></g><g><title>imalloc_fastpath (7,518,116 samples, 0.03%)</title><rect x="37.2961%" y="933" width="0.0268%" height="15" fill="rgb(251,92,32)" fg:x="10453401631" fg:w="7518116"/><text x="37.5461%" y="943.50"></text></g><g><title>&lt;pgdog::net::messages::payload::Payload as pgdog::net::messages::ToBytes&gt;::to_bytes (50,353,732 samples, 0.18%)</title><rect x="37.1703%" y="1141" width="0.1797%" height="15" fill="rgb(228,149,22)" fg:x="10418142145" fg:w="50353732"/><text x="37.4203%" y="1151.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (22,547,624 samples, 0.08%)</title><rect x="37.2695%" y="1125" width="0.0804%" height="15" fill="rgb(243,54,13)" fg:x="10445948253" fg:w="22547624"/><text x="37.5195%" y="1135.50"></text></g><g><title>bytes::bytes_mut::BytesMut::from_vec (7,576,130 samples, 0.03%)</title><rect x="37.3229%" y="1109" width="0.0270%" height="15" fill="rgb(243,180,28)" fg:x="10460919747" fg:w="7576130"/><text x="37.5729%" y="1119.50"></text></g><g><title>bytes::bytes_mut::original_capacity_to_repr (3,689,603 samples, 0.01%)</title><rect x="37.3368%" y="1093" width="0.0132%" height="15" fill="rgb(208,167,24)" fg:x="10464806274" fg:w="3689603"/><text x="37.5868%" y="1103.50"></text></g><g><title>core::cmp::min (3,689,603 samples, 0.01%)</title><rect x="37.3368%" y="1077" width="0.0132%" height="15" fill="rgb(245,73,45)" fg:x="10464806274" fg:w="3689603"/><text x="37.5868%" y="1087.50"></text></g><g><title>core::cmp::Ord::min (3,689,603 samples, 0.01%)</title><rect x="37.3368%" y="1061" width="0.0132%" height="15" fill="rgb(237,203,48)" fg:x="10464806274" fg:w="3689603"/><text x="37.5868%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::messages::payload::Payload&gt; (3,673,613 samples, 0.01%)</title><rect x="37.3499%" y="1141" width="0.0131%" height="15" fill="rgb(211,197,16)" fg:x="10468495877" fg:w="3673613"/><text x="37.5999%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (3,673,613 samples, 0.01%)</title><rect x="37.3499%" y="1125" width="0.0131%" height="15" fill="rgb(243,99,51)" fg:x="10468495877" fg:w="3673613"/><text x="37.5999%" y="1135.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (3,673,613 samples, 0.01%)</title><rect x="37.3499%" y="1109" width="0.0131%" height="15" fill="rgb(215,123,29)" fg:x="10468495877" fg:w="3673613"/><text x="37.5999%" y="1119.50"></text></g><g><title>&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage as pgdog::net::messages::ToBytes&gt;::to_bytes (246,167,627 samples, 0.88%)</title><rect x="36.5188%" y="1173" width="0.8783%" height="15" fill="rgb(239,186,37)" fg:x="10235533338" fg:w="246167627"/><text x="36.7688%" y="1183.50"></text></g><g><title>pgdog::net::messages::payload::Payload::freeze (67,238,768 samples, 0.24%)</title><rect x="37.1571%" y="1157" width="0.2399%" height="15" fill="rgb(252,136,39)" fg:x="10414462197" fg:w="67238768"/><text x="37.4071%" y="1167.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (9,531,475 samples, 0.03%)</title><rect x="37.3630%" y="1141" width="0.0340%" height="15" fill="rgb(223,213,32)" fg:x="10472169490" fg:w="9531475"/><text x="37.6130%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,803,351 samples, 0.01%)</title><rect x="37.5823%" y="1029" width="0.0136%" height="15" fill="rgb(233,115,5)" fg:x="10533617366" fg:w="3803351"/><text x="37.8323%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,803,351 samples, 0.01%)</title><rect x="37.5823%" y="1013" width="0.0136%" height="15" fill="rgb(207,226,44)" fg:x="10533617366" fg:w="3803351"/><text x="37.8323%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (3,803,351 samples, 0.01%)</title><rect x="37.5823%" y="997" width="0.0136%" height="15" fill="rgb(208,126,0)" fg:x="10533617366" fg:w="3803351"/><text x="37.8323%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::needs_to_grow (3,803,351 samples, 0.01%)</title><rect x="37.5823%" y="981" width="0.0136%" height="15" fill="rgb(244,66,21)" fg:x="10533617366" fg:w="3803351"/><text x="37.8323%" y="991.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (3,803,351 samples, 0.01%)</title><rect x="37.5823%" y="965" width="0.0136%" height="15" fill="rgb(222,97,12)" fg:x="10533617366" fg:w="3803351"/><text x="37.8323%" y="975.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (64,876,406 samples, 0.23%)</title><rect x="37.5366%" y="1157" width="0.2315%" height="15" fill="rgb(219,213,19)" fg:x="10520802634" fg:w="64876406"/><text x="37.7866%" y="1167.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (64,876,406 samples, 0.23%)</title><rect x="37.5366%" y="1141" width="0.2315%" height="15" fill="rgb(252,169,30)" fg:x="10520802634" fg:w="64876406"/><text x="37.7866%" y="1151.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (64,876,406 samples, 0.23%)</title><rect x="37.5366%" y="1125" width="0.2315%" height="15" fill="rgb(206,32,51)" fg:x="10520802634" fg:w="64876406"/><text x="37.7866%" y="1135.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (64,876,406 samples, 0.23%)</title><rect x="37.5366%" y="1109" width="0.2315%" height="15" fill="rgb(250,172,42)" fg:x="10520802634" fg:w="64876406"/><text x="37.7866%" y="1119.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write (52,061,674 samples, 0.19%)</title><rect x="37.5823%" y="1093" width="0.1857%" height="15" fill="rgb(209,34,43)" fg:x="10533617366" fg:w="52061674"/><text x="37.8323%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (52,061,674 samples, 0.19%)</title><rect x="37.5823%" y="1077" width="0.1857%" height="15" fill="rgb(223,11,35)" fg:x="10533617366" fg:w="52061674"/><text x="37.8323%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (52,061,674 samples, 0.19%)</title><rect x="37.5823%" y="1061" width="0.1857%" height="15" fill="rgb(251,219,26)" fg:x="10533617366" fg:w="52061674"/><text x="37.8323%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (52,061,674 samples, 0.19%)</title><rect x="37.5823%" y="1045" width="0.1857%" height="15" fill="rgb(231,119,3)" fg:x="10533617366" fg:w="52061674"/><text x="37.8323%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (48,258,323 samples, 0.17%)</title><rect x="37.5958%" y="1029" width="0.1722%" height="15" fill="rgb(216,97,11)" fg:x="10537420717" fg:w="48258323"/><text x="37.8458%" y="1039.50"></text></g><g><title>[libc.so.6] (48,258,323 samples, 0.17%)</title><rect x="37.5958%" y="1013" width="0.1722%" height="15" fill="rgb(223,59,9)" fg:x="10537420717" fg:w="48258323"/><text x="37.8458%" y="1023.50"></text></g><g><title>core::mem::take (7,371,801 samples, 0.03%)</title><rect x="37.7680%" y="1157" width="0.0263%" height="15" fill="rgb(233,93,31)" fg:x="10585679040" fg:w="7371801"/><text x="38.0180%" y="1167.50"></text></g><g><title>core::mem::replace (7,371,801 samples, 0.03%)</title><rect x="37.7680%" y="1141" width="0.0263%" height="15" fill="rgb(239,81,33)" fg:x="10585679040" fg:w="7371801"/><text x="38.0180%" y="1151.50"></text></g><g><title>core::ptr::write (5,569,536 samples, 0.02%)</title><rect x="37.7745%" y="1125" width="0.0199%" height="15" fill="rgb(213,120,34)" fg:x="10587481305" fg:w="5569536"/><text x="38.0245%" y="1135.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (113,101,906 samples, 0.40%)</title><rect x="37.3970%" y="1173" width="0.4035%" height="15" fill="rgb(243,49,53)" fg:x="10481700965" fg:w="113101906"/><text x="37.6470%" y="1183.50"></text></g><g><title>_rjem_sdallocx (3,937,004 samples, 0.01%)</title><rect x="37.8344%" y="1141" width="0.0140%" height="15" fill="rgb(247,216,33)" fg:x="10604277232" fg:w="3937004"/><text x="38.0844%" y="1151.50"></text></g><g><title>free_fastpath (3,937,004 samples, 0.01%)</title><rect x="37.8344%" y="1125" width="0.0140%" height="15" fill="rgb(226,26,14)" fg:x="10604277232" fg:w="3937004"/><text x="38.0844%" y="1135.50"></text></g><g><title>cache_bin_dalloc_easy (3,559,631 samples, 0.01%)</title><rect x="38.0402%" y="933" width="0.0127%" height="15" fill="rgb(215,49,53)" fg:x="10661954824" fg:w="3559631"/><text x="38.2902%" y="943.50"></text></g><g><title>core::mem::drop (13,680,803 samples, 0.05%)</title><rect x="38.0268%" y="1077" width="0.0488%" height="15" fill="rgb(245,162,40)" fg:x="10658211280" fg:w="13680803"/><text x="38.2768%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (13,680,803 samples, 0.05%)</title><rect x="38.0268%" y="1061" width="0.0488%" height="15" fill="rgb(229,68,17)" fg:x="10658211280" fg:w="13680803"/><text x="38.2768%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (11,829,747 samples, 0.04%)</title><rect x="38.0334%" y="1045" width="0.0422%" height="15" fill="rgb(213,182,10)" fg:x="10660062336" fg:w="11829747"/><text x="38.2834%" y="1055.50"></text></g><g><title>&lt;bytes::bytes::Shared as core::ops::drop::Drop&gt;::drop (11,829,747 samples, 0.04%)</title><rect x="38.0334%" y="1029" width="0.0422%" height="15" fill="rgb(245,125,30)" fg:x="10660062336" fg:w="11829747"/><text x="38.2834%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (11,829,747 samples, 0.04%)</title><rect x="38.0334%" y="1013" width="0.0422%" height="15" fill="rgb(232,202,2)" fg:x="10660062336" fg:w="11829747"/><text x="38.2834%" y="1023.50"></text></g><g><title>__rust_dealloc (11,829,747 samples, 0.04%)</title><rect x="38.0334%" y="997" width="0.0422%" height="15" fill="rgb(237,140,51)" fg:x="10660062336" fg:w="11829747"/><text x="38.2834%" y="1007.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11,829,747 samples, 0.04%)</title><rect x="38.0334%" y="981" width="0.0422%" height="15" fill="rgb(236,157,25)" fg:x="10660062336" fg:w="11829747"/><text x="38.2834%" y="991.50"></text></g><g><title>_rjem_sdallocx (11,829,747 samples, 0.04%)</title><rect x="38.0334%" y="965" width="0.0422%" height="15" fill="rgb(219,209,0)" fg:x="10660062336" fg:w="11829747"/><text x="38.2834%" y="975.50"></text></g><g><title>free_fastpath (9,937,259 samples, 0.04%)</title><rect x="38.0402%" y="949" width="0.0355%" height="15" fill="rgb(240,116,54)" fg:x="10661954824" fg:w="9937259"/><text x="38.2902%" y="959.50"></text></g><g><title>sz_size2index_lookup (6,377,628 samples, 0.02%)</title><rect x="38.0529%" y="933" width="0.0228%" height="15" fill="rgb(216,10,36)" fg:x="10665514455" fg:w="6377628"/><text x="38.3029%" y="943.50"></text></g><g><title>sz_size2index_lookup_impl (6,377,628 samples, 0.02%)</title><rect x="38.0529%" y="917" width="0.0228%" height="15" fill="rgb(222,72,44)" fg:x="10665514455" fg:w="6377628"/><text x="38.3029%" y="927.50"></text></g><g><title>pgdog::backend::server::Server::send_one::_{{closure}} (2,605,322,987 samples, 9.30%)</title><rect x="28.7866%" y="1205" width="9.2954%" height="15" fill="rgb(232,159,9)" fg:x="8068365628" fg:w="2605322987"/><text x="29.0366%" y="1215.50">pgdog::backen..</text></g><g><title>pgdog::net::stream::Stream::send::_{{closure}} (687,313,634 samples, 2.45%)</title><rect x="35.6298%" y="1189" width="2.4522%" height="15" fill="rgb(210,39,32)" fg:x="9986374981" fg:w="687313634"/><text x="35.8798%" y="1199.50">pg..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (78,885,744 samples, 0.28%)</title><rect x="37.8006%" y="1173" width="0.2815%" height="15" fill="rgb(216,194,45)" fg:x="10594802871" fg:w="78885744"/><text x="38.0506%" y="1183.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (78,885,744 samples, 0.28%)</title><rect x="37.8006%" y="1157" width="0.2815%" height="15" fill="rgb(218,18,35)" fg:x="10594802871" fg:w="78885744"/><text x="38.0506%" y="1167.50"></text></g><g><title>bytes::bytes::shared_drop (65,474,379 samples, 0.23%)</title><rect x="37.8484%" y="1141" width="0.2336%" height="15" fill="rgb(207,83,51)" fg:x="10608214236" fg:w="65474379"/><text x="38.0984%" y="1151.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (59,882,910 samples, 0.21%)</title><rect x="37.8684%" y="1125" width="0.2137%" height="15" fill="rgb(225,63,43)" fg:x="10613805705" fg:w="59882910"/><text x="38.1184%" y="1135.50"></text></g><g><title>bytes::bytes::shared_drop::_{{closure}} (59,882,910 samples, 0.21%)</title><rect x="37.8684%" y="1109" width="0.2137%" height="15" fill="rgb(207,57,36)" fg:x="10613805705" fg:w="59882910"/><text x="38.1184%" y="1119.50"></text></g><g><title>bytes::bytes::release_shared (35,860,519 samples, 0.13%)</title><rect x="37.9541%" y="1093" width="0.1279%" height="15" fill="rgb(216,99,33)" fg:x="10637828096" fg:w="35860519"/><text x="38.2041%" y="1103.50"></text></g><g><title>clock_gettime (76,528,281 samples, 0.27%)</title><rect x="38.0949%" y="1157" width="0.2730%" height="15" fill="rgb(225,42,16)" fg:x="10677290048" fg:w="76528281"/><text x="38.3449%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (74,741,960 samples, 0.27%)</title><rect x="38.1012%" y="1141" width="0.2667%" height="15" fill="rgb(220,201,45)" fg:x="10679076369" fg:w="74741960"/><text x="38.3512%" y="1151.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::send::_{{closure}} (6,380,964,622 samples, 22.77%)</title><rect x="15.6415%" y="1253" width="22.7663%" height="15" fill="rgb(225,33,4)" fg:x="4384027085" fg:w="6380964622"/><text x="15.8915%" y="1263.50">pgdog::backend::pool::connection::Co..</text></g><g><title>pgdog::backend::pool::connection::binding::Binding::send::_{{closure}} (6,367,953,793 samples, 22.72%)</title><rect x="15.6879%" y="1237" width="22.7198%" height="15" fill="rgb(224,33,50)" fg:x="4397037914" fg:w="6367953793"/><text x="15.9379%" y="1247.50">pgdog::backend::pool::connection::bi..</text></g><g><title>pgdog::backend::server::Server::send::_{{closure}} (6,347,370,857 samples, 22.65%)</title><rect x="15.7614%" y="1221" width="22.6464%" height="15" fill="rgb(246,198,51)" fg:x="4417620850" fg:w="6347370857"/><text x="16.0114%" y="1231.50">pgdog::backend::server::Server::send..</text></g><g><title>std::time::Instant::now (91,303,092 samples, 0.33%)</title><rect x="38.0820%" y="1205" width="0.3258%" height="15" fill="rgb(205,22,4)" fg:x="10673688615" fg:w="91303092"/><text x="38.3320%" y="1215.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (91,303,092 samples, 0.33%)</title><rect x="38.0820%" y="1189" width="0.3258%" height="15" fill="rgb(206,3,8)" fg:x="10673688615" fg:w="91303092"/><text x="38.3320%" y="1199.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (89,479,007 samples, 0.32%)</title><rect x="38.0885%" y="1173" width="0.3192%" height="15" fill="rgb(251,23,15)" fg:x="10675512700" fg:w="89479007"/><text x="38.3385%" y="1183.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (11,173,378 samples, 0.04%)</title><rect x="38.3679%" y="1157" width="0.0399%" height="15" fill="rgb(252,88,28)" fg:x="10753818329" fg:w="11173378"/><text x="38.6179%" y="1167.50"></text></g><g><title>clock_gettime (86,187,789 samples, 0.31%)</title><rect x="38.4078%" y="1189" width="0.3075%" height="15" fill="rgb(212,127,14)" fg:x="10764991707" fg:w="86187789"/><text x="38.6578%" y="1199.50"></text></g><g><title>__vdso_clock_gettime (82,425,556 samples, 0.29%)</title><rect x="38.4212%" y="1173" width="0.2941%" height="15" fill="rgb(247,145,37)" fg:x="10768753940" fg:w="82425556"/><text x="38.6712%" y="1183.50"></text></g><g><title>pgdog::backend::pool::request::Request::new (88,082,180 samples, 0.31%)</title><rect x="38.4078%" y="1253" width="0.3143%" height="15" fill="rgb(209,117,53)" fg:x="10764991707" fg:w="88082180"/><text x="38.6578%" y="1263.50"></text></g><g><title>std::time::Instant::now (88,082,180 samples, 0.31%)</title><rect x="38.4078%" y="1237" width="0.3143%" height="15" fill="rgb(212,90,42)" fg:x="10764991707" fg:w="88082180"/><text x="38.6578%" y="1247.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (88,082,180 samples, 0.31%)</title><rect x="38.4078%" y="1221" width="0.3143%" height="15" fill="rgb(218,164,37)" fg:x="10764991707" fg:w="88082180"/><text x="38.6578%" y="1231.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (88,082,180 samples, 0.31%)</title><rect x="38.4078%" y="1205" width="0.3143%" height="15" fill="rgb(246,65,34)" fg:x="10764991707" fg:w="88082180"/><text x="38.6578%" y="1215.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::copy (12,936,109 samples, 0.05%)</title><rect x="38.7220%" y="1253" width="0.0462%" height="15" fill="rgb(231,100,33)" fg:x="10853073887" fg:w="12936109"/><text x="38.9720%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12,936,109 samples, 0.05%)</title><rect x="38.7220%" y="1237" width="0.0462%" height="15" fill="rgb(228,126,14)" fg:x="10853073887" fg:w="12936109"/><text x="38.9720%" y="1247.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::copy::_{{closure}} (12,936,109 samples, 0.05%)</title><rect x="38.7220%" y="1221" width="0.0462%" height="15" fill="rgb(215,173,21)" fg:x="10853073887" fg:w="12936109"/><text x="38.9720%" y="1231.50"></text></g><g><title>&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage as pgdog::net::messages::Protocol&gt;::code (12,936,109 samples, 0.05%)</title><rect x="38.7220%" y="1205" width="0.0462%" height="15" fill="rgb(210,6,40)" fg:x="10853073887" fg:w="12936109"/><text x="38.9720%" y="1215.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,631,180 samples, 0.03%)</title><rect x="38.7682%" y="1221" width="0.0272%" height="15" fill="rgb(212,48,18)" fg:x="10866009996" fg:w="7631180"/><text x="39.0182%" y="1231.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (7,631,180 samples, 0.03%)</title><rect x="38.7682%" y="1205" width="0.0272%" height="15" fill="rgb(230,214,11)" fg:x="10866009996" fg:w="7631180"/><text x="39.0182%" y="1215.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::executable (20,588,067 samples, 0.07%)</title><rect x="38.7682%" y="1253" width="0.0735%" height="15" fill="rgb(254,105,39)" fg:x="10866009996" fg:w="20588067"/><text x="39.0182%" y="1263.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (20,588,067 samples, 0.07%)</title><rect x="38.7682%" y="1237" width="0.0735%" height="15" fill="rgb(245,158,5)" fg:x="10866009996" fg:w="20588067"/><text x="39.0182%" y="1247.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::executable::_{{closure}} (12,956,887 samples, 0.05%)</title><rect x="38.7954%" y="1221" width="0.0462%" height="15" fill="rgb(249,208,11)" fg:x="10873641176" fg:w="12956887"/><text x="39.0454%" y="1231.50"></text></g><g><title>&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage as pgdog::net::messages::Protocol&gt;::code (12,956,887 samples, 0.05%)</title><rect x="38.7954%" y="1205" width="0.0462%" height="15" fill="rgb(210,39,28)" fg:x="10873641176" fg:w="12956887"/><text x="39.0454%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9,236,364 samples, 0.03%)</title><rect x="38.8417%" y="1237" width="0.0330%" height="15" fill="rgb(211,56,53)" fg:x="10886598063" fg:w="9236364"/><text x="39.0917%" y="1247.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::is_async::_{{closure}} (9,236,364 samples, 0.03%)</title><rect x="38.8417%" y="1221" width="0.0330%" height="15" fill="rgb(226,201,30)" fg:x="10886598063" fg:w="9236364"/><text x="39.0917%" y="1231.50"></text></g><g><title>&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage as pgdog::net::messages::Protocol&gt;::code (9,236,364 samples, 0.03%)</title><rect x="38.8417%" y="1205" width="0.0330%" height="15" fill="rgb(239,101,34)" fg:x="10886598063" fg:w="9236364"/><text x="39.0917%" y="1215.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::is_async (14,867,399 samples, 0.05%)</title><rect x="38.8417%" y="1253" width="0.0530%" height="15" fill="rgb(226,209,5)" fg:x="10886598063" fg:w="14867399"/><text x="39.0917%" y="1263.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::last (5,631,035 samples, 0.02%)</title><rect x="38.8746%" y="1237" width="0.0201%" height="15" fill="rgb(250,105,47)" fg:x="10895834427" fg:w="5631035"/><text x="39.1246%" y="1247.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::len (36,946,595 samples, 0.13%)</title><rect x="38.8947%" y="1253" width="0.1318%" height="15" fill="rgb(230,72,3)" fg:x="10901465462" fg:w="36946595"/><text x="39.1447%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (36,946,595 samples, 0.13%)</title><rect x="38.8947%" y="1237" width="0.1318%" height="15" fill="rgb(232,218,39)" fg:x="10901465462" fg:w="36946595"/><text x="39.1447%" y="1247.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (36,946,595 samples, 0.13%)</title><rect x="38.8947%" y="1221" width="0.1318%" height="15" fill="rgb(248,166,6)" fg:x="10901465462" fg:w="36946595"/><text x="39.1447%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (36,946,595 samples, 0.13%)</title><rect x="38.8947%" y="1205" width="0.1318%" height="15" fill="rgb(247,89,20)" fg:x="10901465462" fg:w="36946595"/><text x="39.1447%" y="1215.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (36,946,595 samples, 0.13%)</title><rect x="38.8947%" y="1189" width="0.1318%" height="15" fill="rgb(248,130,54)" fg:x="10901465462" fg:w="36946595"/><text x="39.1447%" y="1199.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (31,465,792 samples, 0.11%)</title><rect x="38.9143%" y="1173" width="0.1123%" height="15" fill="rgb(234,196,4)" fg:x="10906946265" fg:w="31465792"/><text x="39.1643%" y="1183.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::len::_{{closure}} (31,465,792 samples, 0.11%)</title><rect x="38.9143%" y="1157" width="0.1123%" height="15" fill="rgb(250,143,31)" fg:x="10906946265" fg:w="31465792"/><text x="39.1643%" y="1167.50"></text></g><g><title>pgdog::backend::protocol::protocol_message::ProtocolMessage::len (31,465,792 samples, 0.11%)</title><rect x="38.9143%" y="1141" width="0.1123%" height="15" fill="rgb(211,110,34)" fg:x="10906946265" fg:w="31465792"/><text x="39.1643%" y="1151.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (16,742,509 samples, 0.06%)</title><rect x="39.0941%" y="1173" width="0.0597%" height="15" fill="rgb(215,124,48)" fg:x="10957340850" fg:w="16742509"/><text x="39.3441%" y="1183.50"></text></g><g><title>bytes::bytes::shared_drop (5,554,864 samples, 0.02%)</title><rect x="39.1733%" y="1157" width="0.0198%" height="15" fill="rgb(216,46,13)" fg:x="10979555581" fg:w="5554864"/><text x="39.4233%" y="1167.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (5,554,864 samples, 0.02%)</title><rect x="39.1733%" y="1141" width="0.0198%" height="15" fill="rgb(205,184,25)" fg:x="10979555581" fg:w="5554864"/><text x="39.4233%" y="1151.50"></text></g><g><title>bytes::bytes::shared_drop::_{{closure}} (5,554,864 samples, 0.02%)</title><rect x="39.1733%" y="1125" width="0.0198%" height="15" fill="rgb(228,1,10)" fg:x="10979555581" fg:w="5554864"/><text x="39.4233%" y="1135.50"></text></g><g><title>bytes::bytes::release_shared (5,554,864 samples, 0.02%)</title><rect x="39.1733%" y="1109" width="0.0198%" height="15" fill="rgb(213,116,27)" fg:x="10979555581" fg:w="5554864"/><text x="39.4233%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::string::String&gt;&gt; (23,964,666 samples, 0.09%)</title><rect x="39.1931%" y="1141" width="0.0855%" height="15" fill="rgb(241,95,50)" fg:x="10985110445" fg:w="23964666"/><text x="39.4431%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23,964,666 samples, 0.09%)</title><rect x="39.1931%" y="1125" width="0.0855%" height="15" fill="rgb(238,48,32)" fg:x="10985110445" fg:w="23964666"/><text x="39.4431%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (23,964,666 samples, 0.09%)</title><rect x="39.1931%" y="1109" width="0.0855%" height="15" fill="rgb(235,113,49)" fg:x="10985110445" fg:w="23964666"/><text x="39.4431%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_sub (23,964,666 samples, 0.09%)</title><rect x="39.1931%" y="1093" width="0.0855%" height="15" fill="rgb(205,127,43)" fg:x="10985110445" fg:w="23964666"/><text x="39.4431%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;i32&gt;&gt;&gt; (12,975,635 samples, 0.05%)</title><rect x="39.2786%" y="1141" width="0.0463%" height="15" fill="rgb(250,162,2)" fg:x="11009075111" fg:w="12975635"/><text x="39.5286%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,975,635 samples, 0.05%)</title><rect x="39.2786%" y="1125" width="0.0463%" height="15" fill="rgb(220,13,41)" fg:x="11009075111" fg:w="12975635"/><text x="39.5286%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::buffer::BufferedQuery&gt; (49,855,461 samples, 0.18%)</title><rect x="39.1538%" y="1173" width="0.1779%" height="15" fill="rgb(249,221,25)" fg:x="10974083359" fg:w="49855461"/><text x="39.4038%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::messages::parse::Parse&gt; (38,828,375 samples, 0.14%)</title><rect x="39.1931%" y="1157" width="0.1385%" height="15" fill="rgb(215,208,19)" fg:x="10985110445" fg:w="38828375"/><text x="39.4431%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::router::parser::command::Command&gt; (47,574,204 samples, 0.17%)</title><rect x="39.3317%" y="1173" width="0.1697%" height="15" fill="rgb(236,175,2)" fg:x="11023938820" fg:w="47574204"/><text x="39.5817%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::router::parser::route::Route&gt; (5,637,813 samples, 0.02%)</title><rect x="39.5014%" y="1173" width="0.0201%" height="15" fill="rgb(241,52,2)" fg:x="11071513024" fg:w="5637813"/><text x="39.7514%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::router::parser::route::Shard&gt; (3,735,264 samples, 0.01%)</title><rect x="39.5082%" y="1157" width="0.0133%" height="15" fill="rgb(248,140,14)" fg:x="11073415573" fg:w="3735264"/><text x="39.7582%" y="1167.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::parameters (5,674,658 samples, 0.02%)</title><rect x="39.5215%" y="1173" width="0.0202%" height="15" fill="rgb(253,22,42)" fg:x="11077150837" fg:w="5674658"/><text x="39.7715%" y="1183.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (25,730,844 samples, 0.09%)</title><rect x="39.5943%" y="1141" width="0.0918%" height="15" fill="rgb(234,61,47)" fg:x="11097537974" fg:w="25730844"/><text x="39.8443%" y="1151.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::query (85,030,391 samples, 0.30%)</title><rect x="39.5418%" y="1173" width="0.3034%" height="15" fill="rgb(208,226,15)" fg:x="11082825495" fg:w="85030391"/><text x="39.7918%" y="1183.50"></text></g><g><title>&lt;pgdog::net::messages::parse::Parse as core::clone::Clone&gt;::clone (79,496,633 samples, 0.28%)</title><rect x="39.5615%" y="1157" width="0.2836%" height="15" fill="rgb(217,221,4)" fg:x="11088359253" fg:w="79496633"/><text x="39.8115%" y="1167.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (44,587,068 samples, 0.16%)</title><rect x="39.6861%" y="1141" width="0.1591%" height="15" fill="rgb(212,174,34)" fg:x="11123268818" fg:w="44587068"/><text x="39.9361%" y="1151.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (20,258,624 samples, 0.07%)</title><rect x="39.7729%" y="1125" width="0.0723%" height="15" fill="rgb(253,83,4)" fg:x="11147597262" fg:w="20258624"/><text x="40.0229%" y="1135.50"></text></g><g><title>bytes::bytes::shared_clone (18,446,581 samples, 0.07%)</title><rect x="39.7793%" y="1109" width="0.0658%" height="15" fill="rgb(250,195,49)" fg:x="11149409305" fg:w="18446581"/><text x="40.0293%" y="1119.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (16,467,541 samples, 0.06%)</title><rect x="39.7864%" y="1093" width="0.0588%" height="15" fill="rgb(241,192,25)" fg:x="11151388345" fg:w="16467541"/><text x="40.0364%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;pgdog::config::ConfigAndUsers&gt;&gt; (3,671,424 samples, 0.01%)</title><rect x="39.8858%" y="1157" width="0.0131%" height="15" fill="rgb(208,124,10)" fg:x="11179265885" fg:w="3671424"/><text x="40.1358%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,671,424 samples, 0.01%)</title><rect x="39.8858%" y="1141" width="0.0131%" height="15" fill="rgb(222,33,0)" fg:x="11179265885" fg:w="3671424"/><text x="40.1358%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::pool::cluster::ShardingSchema&gt; (42,545,451 samples, 0.15%)</title><rect x="39.8989%" y="1157" width="0.1518%" height="15" fill="rgb(234,209,28)" fg:x="11182937309" fg:w="42545451"/><text x="40.1489%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::replication::sharded_tables::ShardedTables&gt; (42,545,451 samples, 0.15%)</title><rect x="39.8989%" y="1141" width="0.1518%" height="15" fill="rgb(224,11,23)" fg:x="11182937309" fg:w="42545451"/><text x="40.1489%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;pgdog::config::ShardedTable&gt;&gt;&gt; (42,545,451 samples, 0.15%)</title><rect x="39.8989%" y="1125" width="0.1518%" height="15" fill="rgb(232,99,1)" fg:x="11182937309" fg:w="42545451"/><text x="40.1489%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42,545,451 samples, 0.15%)</title><rect x="39.8989%" y="1109" width="0.1518%" height="15" fill="rgb(237,95,45)" fg:x="11182937309" fg:w="42545451"/><text x="40.1489%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (37,103,453 samples, 0.13%)</title><rect x="39.9184%" y="1093" width="0.1324%" height="15" fill="rgb(208,109,11)" fg:x="11188379307" fg:w="37103453"/><text x="40.1684%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_sub (37,103,453 samples, 0.13%)</title><rect x="39.9184%" y="1077" width="0.1324%" height="15" fill="rgb(216,190,48)" fg:x="11188379307" fg:w="37103453"/><text x="40.1684%" y="1087.50"></text></g><g><title>pgdog::backend::pool::cluster::Cluster::sharding_schema (20,894,149 samples, 0.07%)</title><rect x="40.0507%" y="1157" width="0.0745%" height="15" fill="rgb(251,171,36)" fg:x="11225482760" fg:w="20894149"/><text x="40.3007%" y="1167.50"></text></g><g><title>&lt;pgdog::backend::replication::sharded_tables::ShardedTables as core::clone::Clone&gt;::clone (20,894,149 samples, 0.07%)</title><rect x="40.0507%" y="1141" width="0.0745%" height="15" fill="rgb(230,62,22)" fg:x="11225482760" fg:w="20894149"/><text x="40.3007%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (20,894,149 samples, 0.07%)</title><rect x="40.0507%" y="1125" width="0.0745%" height="15" fill="rgb(225,114,35)" fg:x="11225482760" fg:w="20894149"/><text x="40.3007%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,592,725 samples, 0.01%)</title><rect x="40.1253%" y="1141" width="0.0128%" height="15" fill="rgb(215,118,42)" fg:x="11246376909" fg:w="3592725"/><text x="40.3753%" y="1151.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (3,675,299 samples, 0.01%)</title><rect x="40.1381%" y="1141" width="0.0131%" height="15" fill="rgb(243,119,21)" fg:x="11249969634" fg:w="3675299"/><text x="40.3881%" y="1151.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (3,675,299 samples, 0.01%)</title><rect x="40.1381%" y="1125" width="0.0131%" height="15" fill="rgb(252,177,53)" fg:x="11249969634" fg:w="3675299"/><text x="40.3881%" y="1135.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (3,675,299 samples, 0.01%)</title><rect x="40.1381%" y="1109" width="0.0131%" height="15" fill="rgb(237,209,29)" fg:x="11249969634" fg:w="3675299"/><text x="40.3881%" y="1119.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (3,675,299 samples, 0.01%)</title><rect x="40.1381%" y="1093" width="0.0131%" height="15" fill="rgb(212,65,23)" fg:x="11249969634" fg:w="3675299"/><text x="40.3881%" y="1103.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (3,675,299 samples, 0.01%)</title><rect x="40.1381%" y="1077" width="0.0131%" height="15" fill="rgb(230,222,46)" fg:x="11249969634" fg:w="3675299"/><text x="40.3881%" y="1087.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (3,675,299 samples, 0.01%)</title><rect x="40.1381%" y="1061" width="0.0131%" height="15" fill="rgb(215,135,32)" fg:x="11249969634" fg:w="3675299"/><text x="40.3881%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (3,675,299 samples, 0.01%)</title><rect x="40.1381%" y="1045" width="0.0131%" height="15" fill="rgb(246,101,22)" fg:x="11249969634" fg:w="3675299"/><text x="40.3881%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (3,675,299 samples, 0.01%)</title><rect x="40.1381%" y="1029" width="0.0131%" height="15" fill="rgb(206,107,13)" fg:x="11249969634" fg:w="3675299"/><text x="40.3881%" y="1039.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3,790,145 samples, 0.01%)</title><rect x="40.1711%" y="997" width="0.0135%" height="15" fill="rgb(250,100,44)" fg:x="11259225012" fg:w="3790145"/><text x="40.4211%" y="1007.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3,790,145 samples, 0.01%)</title><rect x="40.1711%" y="981" width="0.0135%" height="15" fill="rgb(231,147,38)" fg:x="11259225012" fg:w="3790145"/><text x="40.4211%" y="991.50"></text></g><g><title>core::mem::replace (3,790,145 samples, 0.01%)</title><rect x="40.1711%" y="965" width="0.0135%" height="15" fill="rgb(229,8,40)" fg:x="11259225012" fg:w="3790145"/><text x="40.4211%" y="975.50"></text></g><g><title>core::ptr::write (3,790,145 samples, 0.01%)</title><rect x="40.1711%" y="949" width="0.0135%" height="15" fill="rgb(221,135,30)" fg:x="11259225012" fg:w="3790145"/><text x="40.4211%" y="959.50"></text></g><g><title>arc_swap::debt::list::LocalNode::new_fast (9,317,811 samples, 0.03%)</title><rect x="40.1577%" y="1029" width="0.0332%" height="15" fill="rgb(249,193,18)" fg:x="11255470374" fg:w="9317811"/><text x="40.4077%" y="1039.50"></text></g><g><title>arc_swap::debt::fast::Slots::get_debt (9,317,811 samples, 0.03%)</title><rect x="40.1577%" y="1013" width="0.0332%" height="15" fill="rgb(209,133,39)" fg:x="11255470374" fg:w="9317811"/><text x="40.4077%" y="1023.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load (13,191,215 samples, 0.05%)</title><rect x="40.1512%" y="1141" width="0.0471%" height="15" fill="rgb(232,100,14)" fg:x="11253644933" fg:w="13191215"/><text x="40.4012%" y="1151.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load (13,191,215 samples, 0.05%)</title><rect x="40.1512%" y="1125" width="0.0471%" height="15" fill="rgb(224,185,1)" fg:x="11253644933" fg:w="13191215"/><text x="40.4012%" y="1135.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (13,191,215 samples, 0.05%)</title><rect x="40.1512%" y="1109" width="0.0471%" height="15" fill="rgb(223,139,8)" fg:x="11253644933" fg:w="13191215"/><text x="40.4012%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13,191,215 samples, 0.05%)</title><rect x="40.1512%" y="1093" width="0.0471%" height="15" fill="rgb(232,213,38)" fg:x="11253644933" fg:w="13191215"/><text x="40.4012%" y="1103.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::_{{closure}} (13,191,215 samples, 0.05%)</title><rect x="40.1512%" y="1077" width="0.0471%" height="15" fill="rgb(207,94,22)" fg:x="11253644933" fg:w="13191215"/><text x="40.4012%" y="1087.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load::_{{closure}} (13,191,215 samples, 0.05%)</title><rect x="40.1512%" y="1061" width="0.0471%" height="15" fill="rgb(219,183,54)" fg:x="11253644933" fg:w="13191215"/><text x="40.4012%" y="1071.50"></text></g><g><title>arc_swap::strategy::hybrid::HybridProtection&lt;T&gt;::attempt (13,191,215 samples, 0.05%)</title><rect x="40.1512%" y="1045" width="0.0471%" height="15" fill="rgb(216,185,54)" fg:x="11253644933" fg:w="13191215"/><text x="40.4012%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (333,962,095 samples, 1.19%)</title><rect x="39.0398%" y="1237" width="1.1915%" height="15" fill="rgb(254,217,39)" fg:x="10942137638" fg:w="333962095"/><text x="39.2898%" y="1247.50"></text></g><g><title>pgdog::frontend::client::inner::Inner::command::_{{closure}} (333,962,095 samples, 1.19%)</title><rect x="39.0398%" y="1221" width="1.1915%" height="15" fill="rgb(240,178,23)" fg:x="10942137638" fg:w="333962095"/><text x="39.2898%" y="1231.50"></text></g><g><title>pgdog::frontend::router::Router::query (333,962,095 samples, 1.19%)</title><rect x="39.0398%" y="1205" width="1.1915%" height="15" fill="rgb(218,11,47)" fg:x="10942137638" fg:w="333962095"/><text x="39.2898%" y="1215.50"></text></g><g><title>pgdog::frontend::router::parser::query::QueryParser::parse (333,962,095 samples, 1.19%)</title><rect x="39.0398%" y="1189" width="1.1915%" height="15" fill="rgb(218,51,51)" fg:x="10942137638" fg:w="333962095"/><text x="39.2898%" y="1199.50"></text></g><g><title>pgdog::frontend::router::parser::query::QueryParser::query (108,243,847 samples, 0.39%)</title><rect x="39.8451%" y="1173" width="0.3862%" height="15" fill="rgb(238,126,27)" fg:x="11167855886" fg:w="108243847"/><text x="40.0951%" y="1183.50"></text></g><g><title>pgdog::config::config (29,722,824 samples, 0.11%)</title><rect x="40.1253%" y="1157" width="0.1060%" height="15" fill="rgb(249,202,22)" fg:x="11246376909" fg:w="29722824"/><text x="40.3753%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;arc_swap::Guard&lt;alloc::sync::Arc&lt;pgdog::config::ConfigAndUsers&gt;&gt;&gt; (9,263,585 samples, 0.03%)</title><rect x="40.1983%" y="1141" width="0.0331%" height="15" fill="rgb(254,195,49)" fg:x="11266836148" fg:w="9263585"/><text x="40.4483%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;arc_swap::strategy::hybrid::HybridProtection&lt;alloc::sync::Arc&lt;pgdog::config::ConfigAndUsers&gt;&gt;&gt; (9,263,585 samples, 0.03%)</title><rect x="40.1983%" y="1125" width="0.0331%" height="15" fill="rgb(208,123,14)" fg:x="11266836148" fg:w="9263585"/><text x="40.4483%" y="1135.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridProtection&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9,263,585 samples, 0.03%)</title><rect x="40.1983%" y="1109" width="0.0331%" height="15" fill="rgb(224,200,8)" fg:x="11266836148" fg:w="9263585"/><text x="40.4483%" y="1119.50"></text></g><g><title>pgdog::frontend::client::inner::Inner::command (348,956,757 samples, 1.25%)</title><rect x="39.0265%" y="1253" width="1.2450%" height="15" fill="rgb(217,61,36)" fg:x="10938412057" fg:w="348956757"/><text x="39.2765%" y="1263.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::cluster (11,269,081 samples, 0.04%)</title><rect x="40.2313%" y="1237" width="0.0402%" height="15" fill="rgb(206,35,45)" fg:x="11276099733" fg:w="11269081"/><text x="40.4813%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (9,321,430 samples, 0.03%)</title><rect x="40.2383%" y="1221" width="0.0333%" height="15" fill="rgb(217,65,33)" fg:x="11278047384" fg:w="9321430"/><text x="40.4883%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::error::Error&gt; (9,321,430 samples, 0.03%)</title><rect x="40.2383%" y="1205" width="0.0333%" height="15" fill="rgb(222,158,48)" fg:x="11278047384" fg:w="9321430"/><text x="40.4883%" y="1215.50"></text></g><g><title>[libc.so.6] (12,626,725 samples, 0.05%)</title><rect x="40.5251%" y="1237" width="0.0451%" height="15" fill="rgb(254,2,54)" fg:x="11358442867" fg:w="12626725"/><text x="40.7751%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (42,245,414 samples, 0.15%)</title><rect x="40.5702%" y="1173" width="0.1507%" height="15" fill="rgb(250,143,38)" fg:x="11371069592" fg:w="42245414"/><text x="40.8202%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (42,245,414 samples, 0.15%)</title><rect x="40.5702%" y="1157" width="0.1507%" height="15" fill="rgb(248,25,0)" fg:x="11371069592" fg:w="42245414"/><text x="40.8202%" y="1167.50"></text></g><g><title>__rust_dealloc (42,245,414 samples, 0.15%)</title><rect x="40.5702%" y="1141" width="0.1507%" height="15" fill="rgb(206,152,27)" fg:x="11371069592" fg:w="42245414"/><text x="40.8202%" y="1151.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (42,245,414 samples, 0.15%)</title><rect x="40.5702%" y="1125" width="0.1507%" height="15" fill="rgb(240,77,30)" fg:x="11371069592" fg:w="42245414"/><text x="40.8202%" y="1135.50"></text></g><g><title>_rjem_sdallocx (42,245,414 samples, 0.15%)</title><rect x="40.5702%" y="1109" width="0.1507%" height="15" fill="rgb(231,5,3)" fg:x="11371069592" fg:w="42245414"/><text x="40.8202%" y="1119.50"></text></g><g><title>free_fastpath (9,046,123 samples, 0.03%)</title><rect x="40.6886%" y="1093" width="0.0323%" height="15" fill="rgb(207,226,32)" fg:x="11404268883" fg:w="9046123"/><text x="40.9386%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;pgdog::backend::pool::address::Address&gt;&gt; (45,963,578 samples, 0.16%)</title><rect x="40.5702%" y="1237" width="0.1640%" height="15" fill="rgb(222,207,47)" fg:x="11371069592" fg:w="45963578"/><text x="40.8202%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;pgdog::backend::pool::address::Address&gt;&gt; (45,963,578 samples, 0.16%)</title><rect x="40.5702%" y="1221" width="0.1640%" height="15" fill="rgb(229,115,45)" fg:x="11371069592" fg:w="45963578"/><text x="40.8202%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45,963,578 samples, 0.16%)</title><rect x="40.5702%" y="1205" width="0.1640%" height="15" fill="rgb(224,191,6)" fg:x="11371069592" fg:w="45963578"/><text x="40.8202%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (45,963,578 samples, 0.16%)</title><rect x="40.5702%" y="1189" width="0.1640%" height="15" fill="rgb(230,227,24)" fg:x="11371069592" fg:w="45963578"/><text x="40.8202%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (3,718,164 samples, 0.01%)</title><rect x="40.7209%" y="1173" width="0.0133%" height="15" fill="rgb(228,80,19)" fg:x="11413315006" fg:w="3718164"/><text x="40.9709%" y="1183.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::addr (41,950,371 samples, 0.15%)</title><rect x="40.7473%" y="1237" width="0.1497%" height="15" fill="rgb(247,229,0)" fg:x="11420721798" fg:w="41950371"/><text x="40.9973%" y="1247.50"></text></g><g><title>alloc::alloc::exchange_malloc (29,305,029 samples, 0.10%)</title><rect x="40.7924%" y="1221" width="0.1046%" height="15" fill="rgb(237,194,15)" fg:x="11433367140" fg:w="29305029"/><text x="41.0424%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,548,751 samples, 0.02%)</title><rect x="40.8772%" y="1205" width="0.0198%" height="15" fill="rgb(219,203,20)" fg:x="11457123418" fg:w="5548751"/><text x="41.1272%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,548,751 samples, 0.02%)</title><rect x="40.8772%" y="1189" width="0.0198%" height="15" fill="rgb(234,128,8)" fg:x="11457123418" fg:w="5548751"/><text x="41.1272%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (5,548,751 samples, 0.02%)</title><rect x="40.8772%" y="1173" width="0.0198%" height="15" fill="rgb(248,202,8)" fg:x="11457123418" fg:w="5548751"/><text x="41.1272%" y="1183.50"></text></g><g><title>__rust_alloc (5,548,751 samples, 0.02%)</title><rect x="40.8772%" y="1157" width="0.0198%" height="15" fill="rgb(206,104,37)" fg:x="11457123418" fg:w="5548751"/><text x="41.1272%" y="1167.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (5,548,751 samples, 0.02%)</title><rect x="40.8772%" y="1141" width="0.0198%" height="15" fill="rgb(223,8,27)" fg:x="11457123418" fg:w="5548751"/><text x="41.1272%" y="1151.50"></text></g><g><title>_rjem_malloc (5,548,751 samples, 0.02%)</title><rect x="40.8772%" y="1125" width="0.0198%" height="15" fill="rgb(216,217,28)" fg:x="11457123418" fg:w="5548751"/><text x="41.1272%" y="1135.50"></text></g><g><title>imalloc_fastpath (5,548,751 samples, 0.02%)</title><rect x="40.8772%" y="1109" width="0.0198%" height="15" fill="rgb(249,199,1)" fg:x="11457123418" fg:w="5548751"/><text x="41.1272%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (94,120,595 samples, 0.34%)</title><rect x="41.4624%" y="1205" width="0.3358%" height="15" fill="rgb(240,85,17)" fg:x="11621138879" fg:w="94120595"/><text x="41.7124%" y="1215.50"></text></g><g><title>[libc.so.6] (94,120,595 samples, 0.34%)</title><rect x="41.4624%" y="1189" width="0.3358%" height="15" fill="rgb(206,108,45)" fg:x="11621138879" fg:w="94120595"/><text x="41.7124%" y="1199.50"></text></g><g><title>[libc.so.6] (160,316,830 samples, 0.57%)</title><rect x="41.7982%" y="1205" width="0.5720%" height="15" fill="rgb(245,210,41)" fg:x="11715259474" fg:w="160316830"/><text x="42.0482%" y="1215.50"></text></g><g><title>core::ptr::read (132,831,062 samples, 0.47%)</title><rect x="42.3702%" y="1189" width="0.4739%" height="15" fill="rgb(206,13,37)" fg:x="11875576304" fg:w="132831062"/><text x="42.6202%" y="1199.50"></text></g><g><title>[libc.so.6] (132,831,062 samples, 0.47%)</title><rect x="42.3702%" y="1173" width="0.4739%" height="15" fill="rgb(250,61,18)" fg:x="11875576304" fg:w="132831062"/><text x="42.6202%" y="1183.50"></text></g><g><title>core::mem::replace (197,374,866 samples, 0.70%)</title><rect x="42.3702%" y="1205" width="0.7042%" height="15" fill="rgb(235,172,48)" fg:x="11875576304" fg:w="197374866"/><text x="42.6202%" y="1215.50"></text></g><g><title>core::ptr::write (64,543,804 samples, 0.23%)</title><rect x="42.8441%" y="1189" width="0.2303%" height="15" fill="rgb(249,201,17)" fg:x="12008407366" fg:w="64543804"/><text x="43.0941%" y="1199.50"></text></g><g><title>[libc.so.6] (64,543,804 samples, 0.23%)</title><rect x="42.8441%" y="1173" width="0.2303%" height="15" fill="rgb(219,208,6)" fg:x="12008407366" fg:w="64543804"/><text x="43.0941%" y="1183.50"></text></g><g><title>[libc.so.6] (149,655,613 samples, 0.53%)</title><rect x="43.1289%" y="1189" width="0.5339%" height="15" fill="rgb(248,31,23)" fg:x="12088247664" fg:w="149655613"/><text x="43.3789%" y="1199.50"></text></g><g><title>[libc.so.6] (108,417,768 samples, 0.39%)</title><rect x="43.8337%" y="1173" width="0.3868%" height="15" fill="rgb(245,15,42)" fg:x="12285765298" fg:w="108417768"/><text x="44.0837%" y="1183.50"></text></g><g><title>[libc.so.6] (196,624,563 samples, 0.70%)</title><rect x="44.2539%" y="1157" width="0.7015%" height="15" fill="rgb(222,217,39)" fg:x="12403549974" fg:w="196624563"/><text x="44.5039%" y="1167.50"></text></g><g><title>pgdog::backend::pool::cluster::Cluster::primary::_{{closure}} (563,481,709 samples, 2.01%)</title><rect x="43.0744%" y="1205" width="2.0104%" height="15" fill="rgb(210,219,27)" fg:x="12072951170" fg:w="563481709"/><text x="43.3244%" y="1215.50">p..</text></g><g><title>pgdog::backend::pool::shard::Shard::primary::_{{closure}} (398,529,602 samples, 1.42%)</title><rect x="43.6629%" y="1189" width="1.4219%" height="15" fill="rgb(252,166,36)" fg:x="12237903277" fg:w="398529602"/><text x="43.9129%" y="1199.50"></text></g><g><title>pgdog::backend::pool::pool_impl::Pool::get_forced::_{{closure}} (240,458,524 samples, 0.86%)</title><rect x="44.2269%" y="1173" width="0.8579%" height="15" fill="rgb(245,132,34)" fg:x="12395974355" fg:w="240458524"/><text x="44.4769%" y="1183.50"></text></g><g><title>pgdog::backend::pool::pool_impl::Pool::get_internal::_{{closure}} (34,246,001 samples, 0.12%)</title><rect x="44.9626%" y="1157" width="0.1222%" height="15" fill="rgb(236,54,3)" fg:x="12602186878" fg:w="34246001"/><text x="45.2126%" y="1167.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::cluster (7,703,616 samples, 0.03%)</title><rect x="45.0848%" y="1205" width="0.0275%" height="15" fill="rgb(241,173,43)" fg:x="12636432879" fg:w="7703616"/><text x="45.3348%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (3,989,095 samples, 0.01%)</title><rect x="45.0980%" y="1189" width="0.0142%" height="15" fill="rgb(215,190,9)" fg:x="12640147400" fg:w="3989095"/><text x="45.3480%" y="1199.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::connect::_{{closure}} (1,212,715,223 samples, 4.33%)</title><rect x="40.8970%" y="1237" width="4.3268%" height="15" fill="rgb(242,101,16)" fg:x="11462672169" fg:w="1212715223"/><text x="41.1470%" y="1247.50">pgdog..</text></g><g><title>pgdog::backend::pool::connection::Connection::try_conn::_{{closure}} (1,094,910,588 samples, 3.91%)</title><rect x="41.3173%" y="1221" width="3.9065%" height="15" fill="rgb(223,190,21)" fg:x="11580476804" fg:w="1094910588"/><text x="41.5673%" y="1231.50">pgdo..</text></g><g><title>pgdog::backend::pool::connection::Connection::session_mode (31,250,897 samples, 0.11%)</title><rect x="45.1123%" y="1205" width="0.1115%" height="15" fill="rgb(215,228,25)" fg:x="12644136495" fg:w="31250897"/><text x="45.3623%" y="1215.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::transaction_mode (31,250,897 samples, 0.11%)</title><rect x="45.1123%" y="1189" width="0.1115%" height="15" fill="rgb(225,36,22)" fg:x="12644136495" fg:w="31250897"/><text x="45.3623%" y="1199.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::cluster (31,250,897 samples, 0.11%)</title><rect x="45.1123%" y="1173" width="0.1115%" height="15" fill="rgb(251,106,46)" fg:x="12644136495" fg:w="31250897"/><text x="45.3623%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (31,250,897 samples, 0.11%)</title><rect x="45.1123%" y="1157" width="0.1115%" height="15" fill="rgb(208,90,1)" fg:x="12644136495" fg:w="31250897"/><text x="45.3623%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::error::Error&gt; (31,250,897 samples, 0.11%)</title><rect x="45.1123%" y="1141" width="0.1115%" height="15" fill="rgb(243,10,4)" fg:x="12644136495" fg:w="31250897"/><text x="45.3623%" y="1151.50"></text></g><g><title>[libc.so.6] (11,251,187 samples, 0.04%)</title><rect x="45.2438%" y="1221" width="0.0401%" height="15" fill="rgb(212,137,27)" fg:x="12680987543" fg:w="11251187"/><text x="45.4938%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,std::collections::hash::map::HashMap&lt;pgdog::net::messages::backend_key::BackendKeyData,pgdog::frontend::connected_client::ConnectedClient,core::hash::BuildHasherDefault&lt;fnv::FnvHasher&gt;&gt;&gt;&gt; (5,589,519 samples, 0.02%)</title><rect x="45.2839%" y="1221" width="0.0199%" height="15" fill="rgb(231,220,49)" fg:x="12692238730" fg:w="5589519"/><text x="45.5339%" y="1231.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (5,589,519 samples, 0.02%)</title><rect x="45.2839%" y="1205" width="0.0199%" height="15" fill="rgb(237,96,20)" fg:x="12692238730" fg:w="5589519"/><text x="45.5339%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (5,589,519 samples, 0.02%)</title><rect x="45.2839%" y="1189" width="0.0199%" height="15" fill="rgb(239,229,30)" fg:x="12692238730" fg:w="5589519"/><text x="45.5339%" y="1199.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7,656,003 samples, 0.03%)</title><rect x="45.3038%" y="1221" width="0.0273%" height="15" fill="rgb(219,65,33)" fg:x="12697828249" fg:w="7656003"/><text x="45.5538%" y="1231.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7,656,003 samples, 0.03%)</title><rect x="45.3038%" y="1205" width="0.0273%" height="15" fill="rgb(243,134,7)" fg:x="12697828249" fg:w="7656003"/><text x="45.5538%" y="1215.50"></text></g><g><title>hashbrown::map::make_hash (3,674,647 samples, 0.01%)</title><rect x="45.3312%" y="1173" width="0.0131%" height="15" fill="rgb(216,177,54)" fg:x="12705484252" fg:w="3674647"/><text x="45.5812%" y="1183.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,674,647 samples, 0.01%)</title><rect x="45.3312%" y="1157" width="0.0131%" height="15" fill="rgb(211,160,20)" fg:x="12705484252" fg:w="3674647"/><text x="45.5812%" y="1167.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3,674,647 samples, 0.01%)</title><rect x="45.3312%" y="1141" width="0.0131%" height="15" fill="rgb(239,85,39)" fg:x="12705484252" fg:w="3674647"/><text x="45.5812%" y="1151.50"></text></g><g><title>&lt;pgdog::net::messages::backend_key::BackendKeyData as core::hash::Hash&gt;::hash (3,674,647 samples, 0.01%)</title><rect x="45.3312%" y="1125" width="0.0131%" height="15" fill="rgb(232,125,22)" fg:x="12705484252" fg:w="3674647"/><text x="45.5812%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (3,674,647 samples, 0.01%)</title><rect x="45.3312%" y="1109" width="0.0131%" height="15" fill="rgb(244,57,34)" fg:x="12705484252" fg:w="3674647"/><text x="45.5812%" y="1119.50"></text></g><g><title>core::hash::Hasher::write_i32 (3,674,647 samples, 0.01%)</title><rect x="45.3312%" y="1093" width="0.0131%" height="15" fill="rgb(214,203,32)" fg:x="12705484252" fg:w="3674647"/><text x="45.5812%" y="1103.50"></text></g><g><title>core::hash::Hasher::write_u32 (3,674,647 samples, 0.01%)</title><rect x="45.3312%" y="1077" width="0.0131%" height="15" fill="rgb(207,58,43)" fg:x="12705484252" fg:w="3674647"/><text x="45.5812%" y="1087.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (3,674,647 samples, 0.01%)</title><rect x="45.3312%" y="1061" width="0.0131%" height="15" fill="rgb(215,193,15)" fg:x="12705484252" fg:w="3674647"/><text x="45.5812%" y="1071.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (3,674,647 samples, 0.01%)</title><rect x="45.3312%" y="1045" width="0.0131%" height="15" fill="rgb(232,15,44)" fg:x="12705484252" fg:w="3674647"/><text x="45.5812%" y="1055.50"></text></g><g><title>core::intrinsics::likely (45,109,015 samples, 0.16%)</title><rect x="45.3443%" y="1125" width="0.1609%" height="15" fill="rgb(212,3,48)" fg:x="12709158899" fg:w="45109015"/><text x="45.5943%" y="1135.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (9,455,804 samples, 0.03%)</title><rect x="45.5052%" y="1125" width="0.0337%" height="15" fill="rgb(218,128,7)" fg:x="12754267914" fg:w="9455804"/><text x="45.7552%" y="1135.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (9,455,804 samples, 0.03%)</title><rect x="45.5052%" y="1109" width="0.0337%" height="15" fill="rgb(226,216,39)" fg:x="12754267914" fg:w="9455804"/><text x="45.7552%" y="1119.50"></text></g><g><title>hashbrown::control::tag::Tag::full (5,684,378 samples, 0.02%)</title><rect x="45.5389%" y="1125" width="0.0203%" height="15" fill="rgb(243,47,51)" fg:x="12763723718" fg:w="5684378"/><text x="45.7889%" y="1135.50"></text></g><g><title>pgdog::frontend::comms::Comms::stats (101,540,511 samples, 0.36%)</title><rect x="45.2238%" y="1237" width="0.3623%" height="15" fill="rgb(241,183,40)" fg:x="12675387392" fg:w="101540511"/><text x="45.4738%" y="1247.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (71,443,651 samples, 0.25%)</title><rect x="45.3312%" y="1221" width="0.2549%" height="15" fill="rgb(231,217,32)" fg:x="12705484252" fg:w="71443651"/><text x="45.5812%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (71,443,651 samples, 0.25%)</title><rect x="45.3312%" y="1205" width="0.2549%" height="15" fill="rgb(229,61,38)" fg:x="12705484252" fg:w="71443651"/><text x="45.5812%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (71,443,651 samples, 0.25%)</title><rect x="45.3312%" y="1189" width="0.2549%" height="15" fill="rgb(225,210,5)" fg:x="12705484252" fg:w="71443651"/><text x="45.5812%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (67,769,004 samples, 0.24%)</title><rect x="45.3443%" y="1173" width="0.2418%" height="15" fill="rgb(231,79,45)" fg:x="12709158899" fg:w="67769004"/><text x="45.5943%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (67,769,004 samples, 0.24%)</title><rect x="45.3443%" y="1157" width="0.2418%" height="15" fill="rgb(224,100,7)" fg:x="12709158899" fg:w="67769004"/><text x="45.5943%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (67,769,004 samples, 0.24%)</title><rect x="45.3443%" y="1141" width="0.2418%" height="15" fill="rgb(241,198,18)" fg:x="12709158899" fg:w="67769004"/><text x="45.5943%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (7,519,807 samples, 0.03%)</title><rect x="45.5592%" y="1125" width="0.0268%" height="15" fill="rgb(252,97,53)" fg:x="12769408096" fg:w="7519807"/><text x="45.8092%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (5,566,564 samples, 0.02%)</title><rect x="45.5662%" y="1109" width="0.0199%" height="15" fill="rgb(220,88,7)" fg:x="12771361339" fg:w="5566564"/><text x="45.8162%" y="1119.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (5,566,564 samples, 0.02%)</title><rect x="45.5662%" y="1093" width="0.0199%" height="15" fill="rgb(213,176,14)" fg:x="12771361339" fg:w="5566564"/><text x="45.8162%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (5,566,564 samples, 0.02%)</title><rect x="45.5662%" y="1077" width="0.0199%" height="15" fill="rgb(246,73,7)" fg:x="12771361339" fg:w="5566564"/><text x="45.8162%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15,270,847 samples, 0.05%)</title><rect x="45.6777%" y="1189" width="0.0545%" height="15" fill="rgb(245,64,36)" fg:x="12802611517" fg:w="15270847"/><text x="45.9277%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15,270,847 samples, 0.05%)</title><rect x="45.6777%" y="1173" width="0.0545%" height="15" fill="rgb(245,80,10)" fg:x="12802611517" fg:w="15270847"/><text x="45.9277%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (15,270,847 samples, 0.05%)</title><rect x="45.6777%" y="1157" width="0.0545%" height="15" fill="rgb(232,107,50)" fg:x="12802611517" fg:w="15270847"/><text x="45.9277%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15,270,847 samples, 0.05%)</title><rect x="45.6777%" y="1141" width="0.0545%" height="15" fill="rgb(253,3,0)" fg:x="12802611517" fg:w="15270847"/><text x="45.9277%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,693,550 samples, 0.01%)</title><rect x="45.7190%" y="1125" width="0.0132%" height="15" fill="rgb(212,99,53)" fg:x="12814188814" fg:w="3693550"/><text x="45.9690%" y="1135.50"></text></g><g><title>&lt;pgdog::frontend::router::parser::aggregate::Aggregate as core::clone::Clone&gt;::clone (20,647,360 samples, 0.07%)</title><rect x="45.7322%" y="1189" width="0.0737%" height="15" fill="rgb(249,111,54)" fg:x="12817882364" fg:w="20647360"/><text x="45.9822%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,376,798 samples, 0.03%)</title><rect x="45.7795%" y="1173" width="0.0263%" height="15" fill="rgb(249,55,30)" fg:x="12831152926" fg:w="7376798"/><text x="46.0295%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,376,798 samples, 0.03%)</title><rect x="45.7795%" y="1157" width="0.0263%" height="15" fill="rgb(237,47,42)" fg:x="12831152926" fg:w="7376798"/><text x="46.0295%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (7,376,798 samples, 0.03%)</title><rect x="45.7795%" y="1141" width="0.0263%" height="15" fill="rgb(211,20,18)" fg:x="12831152926" fg:w="7376798"/><text x="46.0295%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,376,798 samples, 0.03%)</title><rect x="45.7795%" y="1125" width="0.0263%" height="15" fill="rgb(231,203,46)" fg:x="12831152926" fg:w="7376798"/><text x="46.0295%" y="1135.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (7,376,798 samples, 0.03%)</title><rect x="45.7795%" y="1109" width="0.0263%" height="15" fill="rgb(237,142,3)" fg:x="12831152926" fg:w="7376798"/><text x="46.0295%" y="1119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7,376,798 samples, 0.03%)</title><rect x="45.7795%" y="1093" width="0.0263%" height="15" fill="rgb(241,107,1)" fg:x="12831152926" fg:w="7376798"/><text x="46.0295%" y="1103.50"></text></g><g><title>[libc.so.6] (3,607,889 samples, 0.01%)</title><rect x="45.7930%" y="1077" width="0.0129%" height="15" fill="rgb(229,83,13)" fg:x="12834921835" fg:w="3607889"/><text x="46.0430%" y="1087.50"></text></g><g><title>pgdog::frontend::router::Router::route (65,339,979 samples, 0.23%)</title><rect x="45.5861%" y="1237" width="0.2331%" height="15" fill="rgb(241,91,40)" fg:x="12776927903" fg:w="65339979"/><text x="45.8361%" y="1247.50"></text></g><g><title>pgdog::frontend::router::parser::query::QueryParser::route (65,339,979 samples, 0.23%)</title><rect x="45.5861%" y="1221" width="0.2331%" height="15" fill="rgb(225,3,45)" fg:x="12776927903" fg:w="65339979"/><text x="45.8361%" y="1231.50"></text></g><g><title>&lt;pgdog::frontend::router::parser::route::Route as core::clone::Clone&gt;::clone (65,339,979 samples, 0.23%)</title><rect x="45.5861%" y="1205" width="0.2331%" height="15" fill="rgb(244,223,14)" fg:x="12776927903" fg:w="65339979"/><text x="45.8361%" y="1215.50"></text></g><g><title>&lt;pgdog::frontend::router::parser::route::Shard as core::clone::Clone&gt;::clone (3,738,158 samples, 0.01%)</title><rect x="45.8058%" y="1189" width="0.0133%" height="15" fill="rgb(224,124,37)" fg:x="12838529724" fg:w="3738158"/><text x="46.0558%" y="1199.50"></text></g><g><title>&lt;core::num::niche_types::Nanoseconds as core::cmp::PartialOrd&gt;::partial_cmp (25,568,597 samples, 0.09%)</title><rect x="45.8585%" y="1109" width="0.0912%" height="15" fill="rgb(251,171,30)" fg:x="12853294192" fg:w="25568597"/><text x="46.1085%" y="1119.50"></text></g><g><title>&lt;core::num::niche_types::Nanoseconds as core::cmp::Ord&gt;::cmp (25,568,597 samples, 0.09%)</title><rect x="45.8585%" y="1093" width="0.0912%" height="15" fill="rgb(236,46,54)" fg:x="12853294192" fg:w="25568597"/><text x="46.1085%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (21,890,971 samples, 0.08%)</title><rect x="45.8716%" y="1077" width="0.0781%" height="15" fill="rgb(245,213,5)" fg:x="12856971818" fg:w="21890971"/><text x="46.1216%" y="1087.50"></text></g><g><title>std::time::Instant::duration_since (34,712,922 samples, 0.12%)</title><rect x="45.8322%" y="1221" width="0.1239%" height="15" fill="rgb(230,144,27)" fg:x="12845926226" fg:w="34712922"/><text x="46.0822%" y="1231.50"></text></g><g><title>std::time::Instant::checked_duration_since (32,835,354 samples, 0.12%)</title><rect x="45.8389%" y="1205" width="0.1172%" height="15" fill="rgb(220,86,6)" fg:x="12847803794" fg:w="32835354"/><text x="46.0889%" y="1215.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (32,835,354 samples, 0.12%)</title><rect x="45.8389%" y="1189" width="0.1172%" height="15" fill="rgb(240,20,13)" fg:x="12847803794" fg:w="32835354"/><text x="46.0889%" y="1199.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (32,835,354 samples, 0.12%)</title><rect x="45.8389%" y="1173" width="0.1172%" height="15" fill="rgb(217,89,34)" fg:x="12847803794" fg:w="32835354"/><text x="46.0889%" y="1183.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (27,344,956 samples, 0.10%)</title><rect x="45.8585%" y="1157" width="0.0976%" height="15" fill="rgb(229,13,5)" fg:x="12853294192" fg:w="27344956"/><text x="46.1085%" y="1167.50"></text></g><g><title>core::cmp::PartialOrd::ge (27,344,956 samples, 0.10%)</title><rect x="45.8585%" y="1141" width="0.0976%" height="15" fill="rgb(244,67,35)" fg:x="12853294192" fg:w="27344956"/><text x="46.1085%" y="1151.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (27,344,956 samples, 0.10%)</title><rect x="45.8585%" y="1125" width="0.0976%" height="15" fill="rgb(221,40,2)" fg:x="12853294192" fg:w="27344956"/><text x="46.1085%" y="1135.50"></text></g><g><title>clock_gettime (85,726,193 samples, 0.31%)</title><rect x="45.9765%" y="1173" width="0.3059%" height="15" fill="rgb(237,157,21)" fg:x="12886367102" fg:w="85726193"/><text x="46.2265%" y="1183.50"></text></g><g><title>__vdso_clock_gettime (83,849,434 samples, 0.30%)</title><rect x="45.9832%" y="1157" width="0.2992%" height="15" fill="rgb(222,94,11)" fg:x="12888243861" fg:w="83849434"/><text x="46.2332%" y="1167.50"></text></g><g><title>pgdog::frontend::stats::Stats::connected (133,488,202 samples, 0.48%)</title><rect x="45.8192%" y="1237" width="0.4763%" height="15" fill="rgb(249,113,6)" fg:x="12842267882" fg:w="133488202"/><text x="46.0692%" y="1247.50"></text></g><g><title>std::time::Instant::now (95,116,936 samples, 0.34%)</title><rect x="45.9561%" y="1221" width="0.3394%" height="15" fill="rgb(238,137,36)" fg:x="12880639148" fg:w="95116936"/><text x="46.2061%" y="1231.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (95,116,936 samples, 0.34%)</title><rect x="45.9561%" y="1205" width="0.3394%" height="15" fill="rgb(210,102,26)" fg:x="12880639148" fg:w="95116936"/><text x="46.2061%" y="1215.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (93,327,755 samples, 0.33%)</title><rect x="45.9625%" y="1189" width="0.3330%" height="15" fill="rgb(218,30,30)" fg:x="12882428329" fg:w="93327755"/><text x="46.2125%" y="1199.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (3,662,789 samples, 0.01%)</title><rect x="46.2824%" y="1173" width="0.0131%" height="15" fill="rgb(214,67,26)" fg:x="12972093295" fg:w="3662789"/><text x="46.5324%" y="1183.50"></text></g><g><title>pgdog::frontend::client::inner::Inner::connect::_{{closure}} (1,690,187,132 samples, 6.03%)</title><rect x="40.2715%" y="1253" width="6.0303%" height="15" fill="rgb(251,9,53)" fg:x="11287368814" fg:w="1690187132"/><text x="40.5215%" y="1263.50">pgdog::f..</text></g><g><title>pgdog::frontend::client::inner::Inner::connected (9,308,704 samples, 0.03%)</title><rect x="46.3019%" y="1253" width="0.0332%" height="15" fill="rgb(228,204,25)" fg:x="12977555946" fg:w="9308704"/><text x="46.5519%" y="1263.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::connected (9,308,704 samples, 0.03%)</title><rect x="46.3019%" y="1237" width="0.0332%" height="15" fill="rgb(207,153,8)" fg:x="12977555946" fg:w="9308704"/><text x="46.5519%" y="1247.50"></text></g><g><title>pgdog::backend::pool::connection::binding::Binding::connected (9,308,704 samples, 0.03%)</title><rect x="46.3019%" y="1221" width="0.0332%" height="15" fill="rgb(242,9,16)" fg:x="12977555946" fg:w="9308704"/><text x="46.5519%" y="1231.50"></text></g><g><title>pgdog::frontend::client::timeouts::Timeouts::query_timeout (5,620,328 samples, 0.02%)</title><rect x="46.3351%" y="1253" width="0.0201%" height="15" fill="rgb(217,211,10)" fg:x="12986864650" fg:w="5620328"/><text x="46.5851%" y="1263.50"></text></g><g><title>pgdog::frontend::router::Router::copy_data (4,457,384 samples, 0.02%)</title><rect x="46.3551%" y="1253" width="0.0159%" height="15" fill="rgb(219,228,52)" fg:x="12992484978" fg:w="4457384"/><text x="46.6051%" y="1263.50"></text></g><g><title>pgdog::frontend::router::parser::query::QueryParser::copy_data (4,457,384 samples, 0.02%)</title><rect x="46.3551%" y="1237" width="0.0159%" height="15" fill="rgb(231,92,29)" fg:x="12992484978" fg:w="4457384"/><text x="46.6051%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;pgdog::net::messages::query::Query&gt;&gt; (4,457,384 samples, 0.02%)</title><rect x="46.3551%" y="1221" width="0.0159%" height="15" fill="rgb(232,8,23)" fg:x="12992484978" fg:w="4457384"/><text x="46.6051%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,457,384 samples, 0.02%)</title><rect x="46.3551%" y="1205" width="0.0159%" height="15" fill="rgb(216,211,34)" fg:x="12992484978" fg:w="4457384"/><text x="46.6051%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;[pgdog::net::messages::query::Query]&gt; (4,457,384 samples, 0.02%)</title><rect x="46.3551%" y="1189" width="0.0159%" height="15" fill="rgb(236,151,0)" fg:x="12992484978" fg:w="4457384"/><text x="46.6051%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::messages::query::Query&gt; (4,457,384 samples, 0.02%)</title><rect x="46.3551%" y="1173" width="0.0159%" height="15" fill="rgb(209,168,3)" fg:x="12992484978" fg:w="4457384"/><text x="46.6051%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (4,457,384 samples, 0.02%)</title><rect x="46.3551%" y="1157" width="0.0159%" height="15" fill="rgb(208,129,28)" fg:x="12992484978" fg:w="4457384"/><text x="46.6051%" y="1167.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (4,457,384 samples, 0.02%)</title><rect x="46.3551%" y="1141" width="0.0159%" height="15" fill="rgb(229,78,22)" fg:x="12992484978" fg:w="4457384"/><text x="46.6051%" y="1151.50"></text></g><g><title>bytes::bytes::shared_drop (4,457,384 samples, 0.02%)</title><rect x="46.3551%" y="1125" width="0.0159%" height="15" fill="rgb(228,187,13)" fg:x="12992484978" fg:w="4457384"/><text x="46.6051%" y="1135.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (4,457,384 samples, 0.02%)</title><rect x="46.3551%" y="1109" width="0.0159%" height="15" fill="rgb(240,119,24)" fg:x="12992484978" fg:w="4457384"/><text x="46.6051%" y="1119.50"></text></g><g><title>bytes::bytes::shared_drop::_{{closure}} (4,457,384 samples, 0.02%)</title><rect x="46.3551%" y="1093" width="0.0159%" height="15" fill="rgb(209,194,42)" fg:x="12992484978" fg:w="4457384"/><text x="46.6051%" y="1103.50"></text></g><g><title>bytes::bytes::release_shared (4,457,384 samples, 0.02%)</title><rect x="46.3551%" y="1077" width="0.0159%" height="15" fill="rgb(247,200,46)" fg:x="12992484978" fg:w="4457384"/><text x="46.6051%" y="1087.50"></text></g><g><title>&lt;pgdog::state::State as core::cmp::PartialEq&gt;::eq (7,515,854 samples, 0.03%)</title><rect x="46.3848%" y="1237" width="0.0268%" height="15" fill="rgb(218,76,16)" fg:x="13000815431" fg:w="7515854"/><text x="46.6348%" y="1247.50"></text></g><g><title>clock_gettime (90,816,985 samples, 0.32%)</title><rect x="46.4254%" y="1189" width="0.3240%" height="15" fill="rgb(225,21,48)" fg:x="13012186495" fg:w="90816985"/><text x="46.6754%" y="1199.50"></text></g><g><title>__vdso_clock_gettime (85,046,045 samples, 0.30%)</title><rect x="46.4460%" y="1173" width="0.3034%" height="15" fill="rgb(239,223,50)" fg:x="13017957435" fg:w="85046045"/><text x="46.6960%" y="1183.50"></text></g><g><title>std::time::Instant::now (98,646,795 samples, 0.35%)</title><rect x="46.4117%" y="1237" width="0.3520%" height="15" fill="rgb(244,45,21)" fg:x="13008331285" fg:w="98646795"/><text x="46.6617%" y="1247.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (98,646,795 samples, 0.35%)</title><rect x="46.4117%" y="1221" width="0.3520%" height="15" fill="rgb(232,33,43)" fg:x="13008331285" fg:w="98646795"/><text x="46.6617%" y="1231.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (98,646,795 samples, 0.35%)</title><rect x="46.4117%" y="1205" width="0.3520%" height="15" fill="rgb(209,8,3)" fg:x="13008331285" fg:w="98646795"/><text x="46.6617%" y="1215.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (3,974,600 samples, 0.01%)</title><rect x="46.7494%" y="1189" width="0.0142%" height="15" fill="rgb(214,25,53)" fg:x="13103003480" fg:w="3974600"/><text x="46.9994%" y="1199.50"></text></g><g><title>clock_gettime (78,394,072 samples, 0.28%)</title><rect x="46.7636%" y="1189" width="0.2797%" height="15" fill="rgb(254,186,54)" fg:x="13106978080" fg:w="78394072"/><text x="47.0136%" y="1199.50"></text></g><g><title>__vdso_clock_gettime (72,824,776 samples, 0.26%)</title><rect x="46.7835%" y="1173" width="0.2598%" height="15" fill="rgb(208,174,49)" fg:x="13112547376" fg:w="72824776"/><text x="47.0335%" y="1183.50"></text></g><g><title>pgdog::frontend::stats::Stats::received (194,056,552 samples, 0.69%)</title><rect x="46.3710%" y="1253" width="0.6924%" height="15" fill="rgb(233,191,51)" fg:x="12996942362" fg:w="194056552"/><text x="46.6210%" y="1263.50"></text></g><g><title>std::time::SystemTime::now (84,020,834 samples, 0.30%)</title><rect x="46.7636%" y="1237" width="0.2998%" height="15" fill="rgb(222,134,10)" fg:x="13106978080" fg:w="84020834"/><text x="47.0136%" y="1247.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (84,020,834 samples, 0.30%)</title><rect x="46.7636%" y="1221" width="0.2998%" height="15" fill="rgb(230,226,20)" fg:x="13106978080" fg:w="84020834"/><text x="47.0136%" y="1231.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (84,020,834 samples, 0.30%)</title><rect x="46.7636%" y="1205" width="0.2998%" height="15" fill="rgb(251,111,25)" fg:x="13106978080" fg:w="84020834"/><text x="47.0136%" y="1215.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (5,626,762 samples, 0.02%)</title><rect x="47.0433%" y="1189" width="0.0201%" height="15" fill="rgb(224,40,46)" fg:x="13185372152" fg:w="5626762"/><text x="47.2933%" y="1199.50"></text></g><g><title>[libc.so.6] (141,152,439 samples, 0.50%)</title><rect x="47.0890%" y="1237" width="0.5036%" height="15" fill="rgb(236,108,47)" fg:x="13198172056" fg:w="141152439"/><text x="47.3390%" y="1247.50"></text></g><g><title>clock_gettime (107,444,994 samples, 0.38%)</title><rect x="47.6052%" y="1157" width="0.3833%" height="15" fill="rgb(234,93,0)" fg:x="13342857816" fg:w="107444994"/><text x="47.8552%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (99,985,942 samples, 0.36%)</title><rect x="47.6318%" y="1141" width="0.3567%" height="15" fill="rgb(224,213,32)" fg:x="13350316868" fg:w="99985942"/><text x="47.8818%" y="1151.50"></text></g><g><title>tokio::time::instant::Instant::now (116,388,768 samples, 0.42%)</title><rect x="47.5926%" y="1237" width="0.4153%" height="15" fill="rgb(251,11,48)" fg:x="13339324495" fg:w="116388768"/><text x="47.8426%" y="1247.50"></text></g><g><title>tokio::time::instant::variant::now (116,388,768 samples, 0.42%)</title><rect x="47.5926%" y="1221" width="0.4153%" height="15" fill="rgb(236,173,5)" fg:x="13339324495" fg:w="116388768"/><text x="47.8426%" y="1231.50"></text></g><g><title>std::time::Instant::now (116,388,768 samples, 0.42%)</title><rect x="47.5926%" y="1205" width="0.4153%" height="15" fill="rgb(230,95,12)" fg:x="13339324495" fg:w="116388768"/><text x="47.8426%" y="1215.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (116,388,768 samples, 0.42%)</title><rect x="47.5926%" y="1189" width="0.4153%" height="15" fill="rgb(232,209,1)" fg:x="13339324495" fg:w="116388768"/><text x="47.8426%" y="1199.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (116,388,768 samples, 0.42%)</title><rect x="47.5926%" y="1173" width="0.4153%" height="15" fill="rgb(232,6,1)" fg:x="13339324495" fg:w="116388768"/><text x="47.8426%" y="1183.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (5,410,453 samples, 0.02%)</title><rect x="47.9885%" y="1157" width="0.0193%" height="15" fill="rgb(210,224,50)" fg:x="13450302810" fg:w="5410453"/><text x="48.2385%" y="1167.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3,696,131 samples, 0.01%)</title><rect x="48.0270%" y="1173" width="0.0132%" height="15" fill="rgb(228,127,35)" fg:x="13461072324" fg:w="3696131"/><text x="48.2770%" y="1183.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (3,696,131 samples, 0.01%)</title><rect x="48.0270%" y="1157" width="0.0132%" height="15" fill="rgb(245,102,45)" fg:x="13461072324" fg:w="3696131"/><text x="48.2770%" y="1167.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (3,696,131 samples, 0.01%)</title><rect x="48.0270%" y="1141" width="0.0132%" height="15" fill="rgb(214,1,49)" fg:x="13461072324" fg:w="3696131"/><text x="48.2770%" y="1151.50"></text></g><g><title>pgdog::frontend::client::Client::client_messages::_{{closure}} (9,873,512,396 samples, 35.23%)</title><rect x="12.8654%" y="1269" width="35.2271%" height="15" fill="rgb(226,163,40)" fg:x="3605944555" fg:w="9873512396"/><text x="13.1154%" y="1279.50">pgdog::frontend::client::Client::client_messages::_{{clos..</text></g><g><title>tokio::time::timeout::timeout (288,458,037 samples, 1.03%)</title><rect x="47.0634%" y="1253" width="1.0292%" height="15" fill="rgb(239,212,28)" fg:x="13190998914" fg:w="288458037"/><text x="47.3134%" y="1263.50"></text></g><g><title>tokio::time::sleep::Sleep::new_timeout (23,743,688 samples, 0.08%)</title><rect x="48.0078%" y="1237" width="0.0847%" height="15" fill="rgb(220,20,13)" fg:x="13455713263" fg:w="23743688"/><text x="48.2578%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::Handle::current (18,384,627 samples, 0.07%)</title><rect x="48.0270%" y="1221" width="0.0656%" height="15" fill="rgb(210,164,35)" fg:x="13461072324" fg:w="18384627"/><text x="48.2770%" y="1231.50"></text></g><g><title>tokio::runtime::context::current::with_current (18,384,627 samples, 0.07%)</title><rect x="48.0270%" y="1205" width="0.0656%" height="15" fill="rgb(248,109,41)" fg:x="13461072324" fg:w="18384627"/><text x="48.2770%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18,384,627 samples, 0.07%)</title><rect x="48.0270%" y="1189" width="0.0656%" height="15" fill="rgb(238,23,50)" fg:x="13461072324" fg:w="18384627"/><text x="48.2770%" y="1199.50"></text></g><g><title>tokio::runtime::context::current::with_current::_{{closure}} (14,688,496 samples, 0.05%)</title><rect x="48.0402%" y="1173" width="0.0524%" height="15" fill="rgb(211,48,49)" fg:x="13464768455" fg:w="14688496"/><text x="48.2902%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12,786,782 samples, 0.05%)</title><rect x="48.0469%" y="1157" width="0.0456%" height="15" fill="rgb(223,36,21)" fg:x="13466670169" fg:w="12786782"/><text x="48.2969%" y="1167.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12,786,782 samples, 0.05%)</title><rect x="48.0469%" y="1141" width="0.0456%" height="15" fill="rgb(207,123,46)" fg:x="13466670169" fg:w="12786782"/><text x="48.2969%" y="1151.50"></text></g><g><title>&lt;tokio::runtime::scheduler::Handle as core::clone::Clone&gt;::clone (12,786,782 samples, 0.05%)</title><rect x="48.0469%" y="1125" width="0.0456%" height="15" fill="rgb(240,218,32)" fg:x="13466670169" fg:w="12786782"/><text x="48.2969%" y="1135.50"></text></g><g><title>pgdog::backend::pool::inner::Inner::put (3,648,461 samples, 0.01%)</title><rect x="48.0994%" y="1093" width="0.0130%" height="15" fill="rgb(252,5,43)" fg:x="13481362680" fg:w="3648461"/><text x="48.3494%" y="1103.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (3,648,461 samples, 0.01%)</title><rect x="48.0994%" y="1077" width="0.0130%" height="15" fill="rgb(252,84,19)" fg:x="13481362680" fg:w="3648461"/><text x="48.3494%" y="1087.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (3,648,461 samples, 0.01%)</title><rect x="48.0994%" y="1061" width="0.0130%" height="15" fill="rgb(243,152,39)" fg:x="13481362680" fg:w="3648461"/><text x="48.3494%" y="1071.50"></text></g><g><title>core::ptr::write (3,648,461 samples, 0.01%)</title><rect x="48.0994%" y="1045" width="0.0130%" height="15" fill="rgb(234,160,15)" fg:x="13481362680" fg:w="3648461"/><text x="48.3494%" y="1055.50"></text></g><g><title>[libc.so.6] (3,648,461 samples, 0.01%)</title><rect x="48.0994%" y="1029" width="0.0130%" height="15" fill="rgb(237,34,20)" fg:x="13481362680" fg:w="3648461"/><text x="48.3494%" y="1039.50"></text></g><g><title>pgdog::backend::pool::inner::Inner::maybe_check_in (7,578,717 samples, 0.03%)</title><rect x="48.0926%" y="1109" width="0.0270%" height="15" fill="rgb(229,97,13)" fg:x="13479456951" fg:w="7578717"/><text x="48.3426%" y="1119.50"></text></g><g><title>pgdog::frontend::listener::Listener::listen::_{{closure}}::_{{closure}} (9,911,375,951 samples, 35.36%)</title><rect x="12.7707%" y="1349" width="35.3622%" height="15" fill="rgb(234,71,50)" fg:x="3579403209" fg:w="9911375951"/><text x="13.0207%" y="1359.50">pgdog::frontend::listener::Listener::listen::_{{closure}}..</text></g><g><title>pgdog::frontend::listener::Listener::handle_client::_{{closure}} (9,911,375,951 samples, 35.36%)</title><rect x="12.7707%" y="1333" width="35.3622%" height="15" fill="rgb(253,155,4)" fg:x="3579403209" fg:w="9911375951"/><text x="13.0207%" y="1343.50">pgdog::frontend::listener::Listener::handle_client::_{{cl..</text></g><g><title>pgdog::frontend::client::Client::spawn::_{{closure}} (9,911,375,951 samples, 35.36%)</title><rect x="12.7707%" y="1317" width="35.3622%" height="15" fill="rgb(222,185,37)" fg:x="3579403209" fg:w="9911375951"/><text x="13.0207%" y="1327.50">pgdog::frontend::client::Client::spawn::_{{closure}}</text></g><g><title>pgdog::frontend::client::Client::spawn_internal::_{{closure}} (9,911,375,951 samples, 35.36%)</title><rect x="12.7707%" y="1301" width="35.3622%" height="15" fill="rgb(251,177,13)" fg:x="3579403209" fg:w="9911375951"/><text x="13.0207%" y="1311.50">pgdog::frontend::client::Client::spawn_internal::_{{closu..</text></g><g><title>pgdog::frontend::client::Client::run::_{{closure}} (9,911,375,951 samples, 35.36%)</title><rect x="12.7707%" y="1285" width="35.3622%" height="15" fill="rgb(250,179,40)" fg:x="3579403209" fg:w="9911375951"/><text x="13.0207%" y="1295.50">pgdog::frontend::client::Client::run::_{{closure}}</text></g><g><title>pgdog::frontend::client::Client::server_message::_{{closure}} (11,322,209 samples, 0.04%)</title><rect x="48.0926%" y="1269" width="0.0404%" height="15" fill="rgb(242,44,2)" fg:x="13479456951" fg:w="11322209"/><text x="48.3426%" y="1279.50"></text></g><g><title>pgdog::frontend::client::inner::Inner::disconnect (11,322,209 samples, 0.04%)</title><rect x="48.0926%" y="1253" width="0.0404%" height="15" fill="rgb(216,177,13)" fg:x="13479456951" fg:w="11322209"/><text x="48.3426%" y="1263.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::disconnect (11,322,209 samples, 0.04%)</title><rect x="48.0926%" y="1237" width="0.0404%" height="15" fill="rgb(216,106,43)" fg:x="13479456951" fg:w="11322209"/><text x="48.3426%" y="1247.50"></text></g><g><title>pgdog::backend::pool::connection::binding::Binding::disconnect (11,322,209 samples, 0.04%)</title><rect x="48.0926%" y="1221" width="0.0404%" height="15" fill="rgb(216,183,2)" fg:x="13479456951" fg:w="11322209"/><text x="48.3426%" y="1231.50"></text></g><g><title>core::mem::drop (11,322,209 samples, 0.04%)</title><rect x="48.0926%" y="1205" width="0.0404%" height="15" fill="rgb(249,75,3)" fg:x="13479456951" fg:w="11322209"/><text x="48.3426%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;pgdog::backend::pool::guard::Guard&gt;&gt; (11,322,209 samples, 0.04%)</title><rect x="48.0926%" y="1189" width="0.0404%" height="15" fill="rgb(219,67,39)" fg:x="13479456951" fg:w="11322209"/><text x="48.3426%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::pool::guard::Guard&gt; (11,322,209 samples, 0.04%)</title><rect x="48.0926%" y="1173" width="0.0404%" height="15" fill="rgb(253,228,2)" fg:x="13479456951" fg:w="11322209"/><text x="48.3426%" y="1183.50"></text></g><g><title>&lt;pgdog::backend::pool::guard::Guard as core::ops::drop::Drop&gt;::drop (11,322,209 samples, 0.04%)</title><rect x="48.0926%" y="1157" width="0.0404%" height="15" fill="rgb(235,138,27)" fg:x="13479456951" fg:w="11322209"/><text x="48.3426%" y="1167.50"></text></g><g><title>pgdog::backend::pool::guard::Guard::cleanup (11,322,209 samples, 0.04%)</title><rect x="48.0926%" y="1141" width="0.0404%" height="15" fill="rgb(236,97,51)" fg:x="13479456951" fg:w="11322209"/><text x="48.3426%" y="1151.50"></text></g><g><title>pgdog::backend::pool::pool_impl::Pool::checkin (11,322,209 samples, 0.04%)</title><rect x="48.0926%" y="1125" width="0.0404%" height="15" fill="rgb(240,80,30)" fg:x="13479456951" fg:w="11322209"/><text x="48.3426%" y="1135.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (3,743,480 samples, 0.01%)</title><rect x="48.1196%" y="1109" width="0.0134%" height="15" fill="rgb(230,178,19)" fg:x="13487035680" fg:w="3743480"/><text x="48.3696%" y="1119.50"></text></g><g><title>tokio::sync::notify::Notify::notify_with_strategy (3,743,480 samples, 0.01%)</title><rect x="48.1196%" y="1093" width="0.0134%" height="15" fill="rgb(210,190,27)" fg:x="13487035680" fg:w="3743480"/><text x="48.3696%" y="1103.50"></text></g><g><title>core::mem::drop (13,284,867 samples, 0.05%)</title><rect x="49.4221%" y="613" width="0.0474%" height="15" fill="rgb(222,107,31)" fg:x="13852100743" fg:w="13284867"/><text x="49.6721%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (13,284,867 samples, 0.05%)</title><rect x="49.4221%" y="597" width="0.0474%" height="15" fill="rgb(216,127,34)" fg:x="13852100743" fg:w="13284867"/><text x="49.6721%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (13,284,867 samples, 0.05%)</title><rect x="49.4221%" y="581" width="0.0474%" height="15" fill="rgb(234,116,52)" fg:x="13852100743" fg:w="13284867"/><text x="49.6721%" y="591.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (13,284,867 samples, 0.05%)</title><rect x="49.4221%" y="565" width="0.0474%" height="15" fill="rgb(222,124,15)" fg:x="13852100743" fg:w="13284867"/><text x="49.6721%" y="575.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (13,284,867 samples, 0.05%)</title><rect x="49.4221%" y="549" width="0.0474%" height="15" fill="rgb(231,179,28)" fg:x="13852100743" fg:w="13284867"/><text x="49.6721%" y="559.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (35,190,840 samples, 0.13%)</title><rect x="49.4695%" y="613" width="0.1256%" height="15" fill="rgb(226,93,45)" fg:x="13865385610" fg:w="35190840"/><text x="49.7195%" y="623.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (35,190,840 samples, 0.13%)</title><rect x="49.4695%" y="597" width="0.1256%" height="15" fill="rgb(215,8,51)" fg:x="13865385610" fg:w="35190840"/><text x="49.7195%" y="607.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (26,074,010 samples, 0.09%)</title><rect x="49.5020%" y="581" width="0.0930%" height="15" fill="rgb(223,106,5)" fg:x="13874502440" fg:w="26074010"/><text x="49.7520%" y="591.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (18,761,572 samples, 0.07%)</title><rect x="49.5281%" y="565" width="0.0669%" height="15" fill="rgb(250,191,5)" fg:x="13881814878" fg:w="18761572"/><text x="49.7781%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3,581,127 samples, 0.01%)</title><rect x="49.5823%" y="549" width="0.0128%" height="15" fill="rgb(242,132,44)" fg:x="13896995323" fg:w="3581127"/><text x="49.8323%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_add (3,581,127 samples, 0.01%)</title><rect x="49.5823%" y="533" width="0.0128%" height="15" fill="rgb(251,152,29)" fg:x="13896995323" fg:w="3581127"/><text x="49.8323%" y="543.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (20,708,686 samples, 0.07%)</title><rect x="49.6015%" y="613" width="0.0739%" height="15" fill="rgb(218,179,5)" fg:x="13902383293" fg:w="20708686"/><text x="49.8515%" y="623.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (20,708,686 samples, 0.07%)</title><rect x="49.6015%" y="597" width="0.0739%" height="15" fill="rgb(227,67,19)" fg:x="13902383293" fg:w="20708686"/><text x="49.8515%" y="607.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (20,708,686 samples, 0.07%)</title><rect x="49.6015%" y="581" width="0.0739%" height="15" fill="rgb(233,119,31)" fg:x="13902383293" fg:w="20708686"/><text x="49.8515%" y="591.50"></text></g><g><title>tokio::sync::notify::Notified::project (9,552,457 samples, 0.03%)</title><rect x="49.6818%" y="613" width="0.0341%" height="15" fill="rgb(241,120,22)" fg:x="13924897696" fg:w="9552457"/><text x="49.9318%" y="623.50"></text></g><g><title>tokio::sync::notify::get_state (3,774,487 samples, 0.01%)</title><rect x="49.7159%" y="613" width="0.0135%" height="15" fill="rgb(224,102,30)" fg:x="13934450153" fg:w="3774487"/><text x="49.9659%" y="623.50"></text></g><g><title>tokio::sync::notify::set_state (7,761,655 samples, 0.03%)</title><rect x="49.7294%" y="613" width="0.0277%" height="15" fill="rgb(210,164,37)" fg:x="13938224640" fg:w="7761655"/><text x="49.9794%" y="623.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (131,192,121 samples, 0.47%)</title><rect x="49.3086%" y="645" width="0.4681%" height="15" fill="rgb(226,191,16)" fg:x="13820281328" fg:w="131192121"/><text x="49.5586%" y="655.50"></text></g><g><title>tokio::sync::notify::Notified::poll_notified (129,399,753 samples, 0.46%)</title><rect x="49.3150%" y="629" width="0.4617%" height="15" fill="rgb(214,40,45)" fg:x="13822073696" fg:w="129399753"/><text x="49.5650%" y="639.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (5,487,154 samples, 0.02%)</title><rect x="49.7571%" y="613" width="0.0196%" height="15" fill="rgb(244,29,26)" fg:x="13945986295" fg:w="5487154"/><text x="50.0071%" y="623.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (7,422,082 samples, 0.03%)</title><rect x="49.9736%" y="581" width="0.0265%" height="15" fill="rgb(216,16,5)" fg:x="14006673471" fg:w="7422082"/><text x="50.2236%" y="591.50"></text></g><g><title>tokio::runtime::context::budget (7,422,082 samples, 0.03%)</title><rect x="49.9736%" y="565" width="0.0265%" height="15" fill="rgb(249,76,35)" fg:x="14006673471" fg:w="7422082"/><text x="50.2236%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7,422,082 samples, 0.03%)</title><rect x="49.9736%" y="549" width="0.0265%" height="15" fill="rgb(207,11,44)" fg:x="14006673471" fg:w="7422082"/><text x="50.2236%" y="559.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (3,728,260 samples, 0.01%)</title><rect x="49.9868%" y="533" width="0.0133%" height="15" fill="rgb(228,190,49)" fg:x="14010367293" fg:w="3728260"/><text x="50.2368%" y="543.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (3,728,260 samples, 0.01%)</title><rect x="49.9868%" y="517" width="0.0133%" height="15" fill="rgb(214,173,12)" fg:x="14010367293" fg:w="3728260"/><text x="50.2368%" y="527.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (5,743,296 samples, 0.02%)</title><rect x="50.0529%" y="421" width="0.0205%" height="15" fill="rgb(218,26,35)" fg:x="14028900834" fg:w="5743296"/><text x="50.3029%" y="431.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (5,743,296 samples, 0.02%)</title><rect x="50.0529%" y="405" width="0.0205%" height="15" fill="rgb(220,200,19)" fg:x="14028900834" fg:w="5743296"/><text x="50.3029%" y="415.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (5,743,296 samples, 0.02%)</title><rect x="50.0529%" y="389" width="0.0205%" height="15" fill="rgb(239,95,49)" fg:x="14028900834" fg:w="5743296"/><text x="50.3029%" y="399.50"></text></g><g><title>tokio::runtime::time::entry::StateCell::poll (20,474,808 samples, 0.07%)</title><rect x="50.0131%" y="565" width="0.0731%" height="15" fill="rgb(235,85,53)" fg:x="14017756367" fg:w="20474808"/><text x="50.2631%" y="575.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (20,474,808 samples, 0.07%)</title><rect x="50.0131%" y="549" width="0.0731%" height="15" fill="rgb(233,133,31)" fg:x="14017756367" fg:w="20474808"/><text x="50.2631%" y="559.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (20,474,808 samples, 0.07%)</title><rect x="50.0131%" y="533" width="0.0731%" height="15" fill="rgb(218,25,20)" fg:x="14017756367" fg:w="20474808"/><text x="50.2631%" y="543.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::catch_unwind (9,330,341 samples, 0.03%)</title><rect x="50.0529%" y="517" width="0.0333%" height="15" fill="rgb(252,210,38)" fg:x="14028900834" fg:w="9330341"/><text x="50.3029%" y="527.50"></text></g><g><title>std::panic::catch_unwind (9,330,341 samples, 0.03%)</title><rect x="50.0529%" y="501" width="0.0333%" height="15" fill="rgb(242,134,21)" fg:x="14028900834" fg:w="9330341"/><text x="50.3029%" y="511.50"></text></g><g><title>std::panicking::try (9,330,341 samples, 0.03%)</title><rect x="50.0529%" y="485" width="0.0333%" height="15" fill="rgb(213,28,48)" fg:x="14028900834" fg:w="9330341"/><text x="50.3029%" y="495.50"></text></g><g><title>std::panicking::try::do_call (9,330,341 samples, 0.03%)</title><rect x="50.0529%" y="469" width="0.0333%" height="15" fill="rgb(250,196,2)" fg:x="14028900834" fg:w="9330341"/><text x="50.3029%" y="479.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9,330,341 samples, 0.03%)</title><rect x="50.0529%" y="453" width="0.0333%" height="15" fill="rgb(227,5,17)" fg:x="14028900834" fg:w="9330341"/><text x="50.3029%" y="463.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::_{{closure}} (9,330,341 samples, 0.03%)</title><rect x="50.0529%" y="437" width="0.0333%" height="15" fill="rgb(221,226,24)" fg:x="14028900834" fg:w="9330341"/><text x="50.3029%" y="447.50"></text></g><g><title>core::mem::drop (3,587,045 samples, 0.01%)</title><rect x="50.0734%" y="421" width="0.0128%" height="15" fill="rgb(211,5,48)" fg:x="14034644130" fg:w="3587045"/><text x="50.3234%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (3,587,045 samples, 0.01%)</title><rect x="50.0734%" y="405" width="0.0128%" height="15" fill="rgb(219,150,6)" fg:x="14034644130" fg:w="3587045"/><text x="50.3234%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (3,587,045 samples, 0.01%)</title><rect x="50.0734%" y="389" width="0.0128%" height="15" fill="rgb(251,46,16)" fg:x="14034644130" fg:w="3587045"/><text x="50.3234%" y="399.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (3,587,045 samples, 0.01%)</title><rect x="50.0734%" y="373" width="0.0128%" height="15" fill="rgb(220,204,40)" fg:x="14034644130" fg:w="3587045"/><text x="50.3234%" y="383.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (3,587,045 samples, 0.01%)</title><rect x="50.0734%" y="357" width="0.0128%" height="15" fill="rgb(211,85,2)" fg:x="14034644130" fg:w="3587045"/><text x="50.3234%" y="367.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (3,587,045 samples, 0.01%)</title><rect x="50.0734%" y="341" width="0.0128%" height="15" fill="rgb(229,17,7)" fg:x="14034644130" fg:w="3587045"/><text x="50.3234%" y="351.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (3,587,045 samples, 0.01%)</title><rect x="50.0734%" y="325" width="0.0128%" height="15" fill="rgb(239,72,28)" fg:x="14034644130" fg:w="3587045"/><text x="50.3234%" y="335.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (7,721,220 samples, 0.03%)</title><rect x="50.1136%" y="549" width="0.0275%" height="15" fill="rgb(230,47,54)" fg:x="14045918722" fg:w="7721220"/><text x="50.3636%" y="559.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::insert (3,815,929 samples, 0.01%)</title><rect x="50.1275%" y="533" width="0.0136%" height="15" fill="rgb(214,50,8)" fg:x="14049824013" fg:w="3815929"/><text x="50.3775%" y="543.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::inner (9,634,540 samples, 0.03%)</title><rect x="50.1412%" y="549" width="0.0344%" height="15" fill="rgb(216,198,43)" fg:x="14053639942" fg:w="9634540"/><text x="50.3912%" y="559.50"></text></g><g><title>tokio::runtime::time::entry::generate_shard_id (5,797,451 samples, 0.02%)</title><rect x="50.1548%" y="533" width="0.0207%" height="15" fill="rgb(234,20,35)" fg:x="14057477031" fg:w="5797451"/><text x="50.4048%" y="543.50"></text></g><g><title>tokio::runtime::context::with_scheduler (5,797,451 samples, 0.02%)</title><rect x="50.1548%" y="517" width="0.0207%" height="15" fill="rgb(254,45,19)" fg:x="14057477031" fg:w="5797451"/><text x="50.4048%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,797,451 samples, 0.02%)</title><rect x="50.1548%" y="501" width="0.0207%" height="15" fill="rgb(219,14,44)" fg:x="14057477031" fg:w="5797451"/><text x="50.4048%" y="511.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (5,797,451 samples, 0.02%)</title><rect x="50.1548%" y="485" width="0.0207%" height="15" fill="rgb(217,220,26)" fg:x="14057477031" fg:w="5797451"/><text x="50.4048%" y="495.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (5,797,451 samples, 0.02%)</title><rect x="50.1548%" y="469" width="0.0207%" height="15" fill="rgb(213,158,28)" fg:x="14057477031" fg:w="5797451"/><text x="50.4048%" y="479.50"></text></g><g><title>tokio::runtime::time::entry::generate_shard_id::_{{closure}} (5,797,451 samples, 0.02%)</title><rect x="50.1548%" y="453" width="0.0207%" height="15" fill="rgb(252,51,52)" fg:x="14057477031" fg:w="5797451"/><text x="50.4048%" y="463.50"></text></g><g><title>core::time::Duration::as_millis (5,800,326 samples, 0.02%)</title><rect x="50.1967%" y="517" width="0.0207%" height="15" fill="rgb(246,89,16)" fg:x="14069216988" fg:w="5800326"/><text x="50.4467%" y="527.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll::_{{closure}} (70,321,945 samples, 0.25%)</title><rect x="49.9736%" y="629" width="0.2509%" height="15" fill="rgb(216,158,49)" fg:x="14006673471" fg:w="70321945"/><text x="50.2236%" y="639.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (70,321,945 samples, 0.25%)</title><rect x="49.9736%" y="613" width="0.2509%" height="15" fill="rgb(236,107,19)" fg:x="14006673471" fg:w="70321945"/><text x="50.2236%" y="623.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (70,321,945 samples, 0.25%)</title><rect x="49.9736%" y="597" width="0.2509%" height="15" fill="rgb(228,185,30)" fg:x="14006673471" fg:w="70321945"/><text x="50.2236%" y="607.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (62,899,863 samples, 0.22%)</title><rect x="50.0001%" y="581" width="0.2244%" height="15" fill="rgb(246,134,8)" fg:x="14014095553" fg:w="62899863"/><text x="50.2501%" y="591.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::reset (34,947,852 samples, 0.12%)</title><rect x="50.0998%" y="565" width="0.1247%" height="15" fill="rgb(214,143,50)" fg:x="14042047564" fg:w="34947852"/><text x="50.3498%" y="575.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::deadline_to_tick (13,720,934 samples, 0.05%)</title><rect x="50.1755%" y="549" width="0.0490%" height="15" fill="rgb(228,75,8)" fg:x="14063274482" fg:w="13720934"/><text x="50.4255%" y="559.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (7,778,428 samples, 0.03%)</title><rect x="50.1967%" y="533" width="0.0278%" height="15" fill="rgb(207,175,4)" fg:x="14069216988" fg:w="7778428"/><text x="50.4467%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::pool::connection::binding::Binding::read::{{closure}}&gt; (9,300,806 samples, 0.03%)</title><rect x="50.5938%" y="613" width="0.0332%" height="15" fill="rgb(205,108,24)" fg:x="14180512223" fg:w="9300806"/><text x="50.8438%" y="623.50"></text></g><g><title>tokio::runtime::time::entry::StateCell::poll (16,551,511 samples, 0.06%)</title><rect x="50.9642%" y="549" width="0.0591%" height="15" fill="rgb(244,120,49)" fg:x="14284316605" fg:w="16551511"/><text x="51.2142%" y="559.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (14,600,829 samples, 0.05%)</title><rect x="50.9711%" y="533" width="0.0521%" height="15" fill="rgb(223,47,38)" fg:x="14286267287" fg:w="14600829"/><text x="51.2211%" y="543.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (14,600,829 samples, 0.05%)</title><rect x="50.9711%" y="517" width="0.0521%" height="15" fill="rgb(229,179,11)" fg:x="14286267287" fg:w="14600829"/><text x="51.2211%" y="527.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::catch_unwind (3,644,497 samples, 0.01%)</title><rect x="51.0102%" y="501" width="0.0130%" height="15" fill="rgb(231,122,1)" fg:x="14297223619" fg:w="3644497"/><text x="51.2602%" y="511.50"></text></g><g><title>std::panic::catch_unwind (3,644,497 samples, 0.01%)</title><rect x="51.0102%" y="485" width="0.0130%" height="15" fill="rgb(245,119,9)" fg:x="14297223619" fg:w="3644497"/><text x="51.2602%" y="495.50"></text></g><g><title>std::panicking::try (3,644,497 samples, 0.01%)</title><rect x="51.0102%" y="469" width="0.0130%" height="15" fill="rgb(241,163,25)" fg:x="14297223619" fg:w="3644497"/><text x="51.2602%" y="479.50"></text></g><g><title>std::panicking::try::do_call (3,644,497 samples, 0.01%)</title><rect x="51.0102%" y="453" width="0.0130%" height="15" fill="rgb(217,214,3)" fg:x="14297223619" fg:w="3644497"/><text x="51.2602%" y="463.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,644,497 samples, 0.01%)</title><rect x="51.0102%" y="437" width="0.0130%" height="15" fill="rgb(240,86,28)" fg:x="14297223619" fg:w="3644497"/><text x="51.2602%" y="447.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::_{{closure}} (3,644,497 samples, 0.01%)</title><rect x="51.0102%" y="421" width="0.0130%" height="15" fill="rgb(215,47,9)" fg:x="14297223619" fg:w="3644497"/><text x="51.2602%" y="431.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel (4,048,243 samples, 0.01%)</title><rect x="51.0717%" y="517" width="0.0144%" height="15" fill="rgb(252,25,45)" fg:x="14314450718" fg:w="4048243"/><text x="51.3217%" y="527.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (4,048,243 samples, 0.01%)</title><rect x="51.0717%" y="501" width="0.0144%" height="15" fill="rgb(251,164,9)" fg:x="14314450718" fg:w="4048243"/><text x="51.3217%" y="511.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4,048,243 samples, 0.01%)</title><rect x="51.0717%" y="485" width="0.0144%" height="15" fill="rgb(233,194,0)" fg:x="14314450718" fg:w="4048243"/><text x="51.3217%" y="495.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4,048,243 samples, 0.01%)</title><rect x="51.0717%" y="469" width="0.0144%" height="15" fill="rgb(249,111,24)" fg:x="14314450718" fg:w="4048243"/><text x="51.3217%" y="479.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_for (3,853,434 samples, 0.01%)</title><rect x="51.0861%" y="485" width="0.0137%" height="15" fill="rgb(250,223,3)" fg:x="14318498961" fg:w="3853434"/><text x="51.3361%" y="495.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (15,428,648 samples, 0.06%)</title><rect x="51.0646%" y="533" width="0.0550%" height="15" fill="rgb(236,178,37)" fg:x="14312474940" fg:w="15428648"/><text x="51.3146%" y="543.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::insert (9,404,627 samples, 0.03%)</title><rect x="51.0861%" y="517" width="0.0336%" height="15" fill="rgb(241,158,50)" fg:x="14318498961" fg:w="9404627"/><text x="51.3361%" y="527.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::add_entry (9,404,627 samples, 0.03%)</title><rect x="51.0861%" y="501" width="0.0336%" height="15" fill="rgb(213,121,41)" fg:x="14318498961" fg:w="9404627"/><text x="51.3361%" y="511.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (5,551,193 samples, 0.02%)</title><rect x="51.0999%" y="485" width="0.0198%" height="15" fill="rgb(240,92,3)" fg:x="14322352395" fg:w="5551193"/><text x="51.3499%" y="495.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3,697,889 samples, 0.01%)</title><rect x="51.1065%" y="469" width="0.0132%" height="15" fill="rgb(205,123,3)" fg:x="14324205699" fg:w="3697889"/><text x="51.3565%" y="479.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::driver (3,960,794 samples, 0.01%)</title><rect x="51.1197%" y="533" width="0.0141%" height="15" fill="rgb(205,97,47)" fg:x="14327903588" fg:w="3960794"/><text x="51.3697%" y="543.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::inner (3,915,182 samples, 0.01%)</title><rect x="51.1338%" y="533" width="0.0140%" height="15" fill="rgb(247,152,14)" fg:x="14331864382" fg:w="3915182"/><text x="51.3838%" y="543.50"></text></g><g><title>tokio::runtime::time::entry::generate_shard_id (3,915,182 samples, 0.01%)</title><rect x="51.1338%" y="517" width="0.0140%" height="15" fill="rgb(248,195,53)" fg:x="14331864382" fg:w="3915182"/><text x="51.3838%" y="527.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (60,672,908 samples, 0.22%)</title><rect x="50.9378%" y="597" width="0.2165%" height="15" fill="rgb(226,201,16)" fg:x="14276926670" fg:w="60672908"/><text x="51.1878%" y="607.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (56,831,016 samples, 0.20%)</title><rect x="50.9515%" y="581" width="0.2028%" height="15" fill="rgb(205,98,0)" fg:x="14280768562" fg:w="56831016"/><text x="51.2015%" y="591.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (55,065,705 samples, 0.20%)</title><rect x="50.9578%" y="565" width="0.1965%" height="15" fill="rgb(214,191,48)" fg:x="14282533873" fg:w="55065705"/><text x="51.2078%" y="575.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::reset (34,908,523 samples, 0.12%)</title><rect x="51.0297%" y="549" width="0.1245%" height="15" fill="rgb(237,112,39)" fg:x="14302691055" fg:w="34908523"/><text x="51.2797%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::server::Server::read::{{closure}}&gt; (3,676,313 samples, 0.01%)</title><rect x="51.1679%" y="597" width="0.0131%" height="15" fill="rgb(247,203,27)" fg:x="14341420641" fg:w="3676313"/><text x="51.4179%" y="607.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13,071,367 samples, 0.05%)</title><rect x="52.3616%" y="581" width="0.0466%" height="15" fill="rgb(235,124,28)" fg:x="14675975842" fg:w="13071367"/><text x="52.6116%" y="591.50"></text></g><g><title>&lt;pgdog::net::messages::Message as pgdog::net::messages::ToBytes&gt;::to_bytes (25,993,380 samples, 0.09%)</title><rect x="52.4147%" y="581" width="0.0927%" height="15" fill="rgb(208,207,46)" fg:x="14690876485" fg:w="25993380"/><text x="52.6647%" y="591.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (25,993,380 samples, 0.09%)</title><rect x="52.4147%" y="565" width="0.0927%" height="15" fill="rgb(234,176,4)" fg:x="14690876485" fg:w="25993380"/><text x="52.6647%" y="575.50"></text></g><g><title>bytes::bytes::promotable_even_clone (20,376,234 samples, 0.07%)</title><rect x="52.4348%" y="549" width="0.0727%" height="15" fill="rgb(230,133,28)" fg:x="14696493631" fg:w="20376234"/><text x="52.6848%" y="559.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (18,558,083 samples, 0.07%)</title><rect x="52.4412%" y="533" width="0.0662%" height="15" fill="rgb(211,137,40)" fg:x="14698311782" fg:w="18558083"/><text x="52.6912%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14,996,998 samples, 0.05%)</title><rect x="52.4539%" y="517" width="0.0535%" height="15" fill="rgb(254,35,13)" fg:x="14701872867" fg:w="14996998"/><text x="52.7039%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (11,232,734 samples, 0.04%)</title><rect x="52.4674%" y="501" width="0.0401%" height="15" fill="rgb(225,49,51)" fg:x="14705637131" fg:w="11232734"/><text x="52.7174%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11,232,734 samples, 0.04%)</title><rect x="52.4674%" y="485" width="0.0401%" height="15" fill="rgb(251,10,15)" fg:x="14705637131" fg:w="11232734"/><text x="52.7174%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11,232,734 samples, 0.04%)</title><rect x="52.4674%" y="469" width="0.0401%" height="15" fill="rgb(228,207,15)" fg:x="14705637131" fg:w="11232734"/><text x="52.7174%" y="479.50"></text></g><g><title>alloc::alloc::alloc (11,232,734 samples, 0.04%)</title><rect x="52.4674%" y="453" width="0.0401%" height="15" fill="rgb(241,99,19)" fg:x="14705637131" fg:w="11232734"/><text x="52.7174%" y="463.50"></text></g><g><title>__rust_alloc (11,232,734 samples, 0.04%)</title><rect x="52.4674%" y="437" width="0.0401%" height="15" fill="rgb(207,104,49)" fg:x="14705637131" fg:w="11232734"/><text x="52.7174%" y="447.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11,232,734 samples, 0.04%)</title><rect x="52.4674%" y="421" width="0.0401%" height="15" fill="rgb(234,99,18)" fg:x="14705637131" fg:w="11232734"/><text x="52.7174%" y="431.50"></text></g><g><title>_rjem_malloc (11,232,734 samples, 0.04%)</title><rect x="52.4674%" y="405" width="0.0401%" height="15" fill="rgb(213,191,49)" fg:x="14705637131" fg:w="11232734"/><text x="52.7174%" y="415.50"></text></g><g><title>imalloc_fastpath (11,232,734 samples, 0.04%)</title><rect x="52.4674%" y="389" width="0.0401%" height="15" fill="rgb(210,226,19)" fg:x="14705637131" fg:w="11232734"/><text x="52.7174%" y="399.50"></text></g><g><title>cache_bin_alloc_easy (7,538,673 samples, 0.03%)</title><rect x="52.4806%" y="373" width="0.0269%" height="15" fill="rgb(229,97,18)" fg:x="14709331192" fg:w="7538673"/><text x="52.7306%" y="383.50"></text></g><g><title>cache_bin_alloc_impl (7,538,673 samples, 0.03%)</title><rect x="52.4806%" y="357" width="0.0269%" height="15" fill="rgb(211,167,15)" fg:x="14709331192" fg:w="7538673"/><text x="52.7306%" y="367.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (14,952,982 samples, 0.05%)</title><rect x="52.5343%" y="565" width="0.0533%" height="15" fill="rgb(210,169,34)" fg:x="14724402162" fg:w="14952982"/><text x="52.7843%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (3,878,134 samples, 0.01%)</title><rect x="52.5877%" y="565" width="0.0138%" height="15" fill="rgb(241,121,31)" fg:x="14739355144" fg:w="3878134"/><text x="52.8377%" y="575.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (3,878,134 samples, 0.01%)</title><rect x="52.5877%" y="549" width="0.0138%" height="15" fill="rgb(232,40,11)" fg:x="14739355144" fg:w="3878134"/><text x="52.8377%" y="559.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::deref::Deref&gt;::deref (3,684,029 samples, 0.01%)</title><rect x="52.6882%" y="549" width="0.0131%" height="15" fill="rgb(205,86,26)" fg:x="14767541874" fg:w="3684029"/><text x="52.9382%" y="559.50"></text></g><g><title>bytes::bytes::Bytes::as_slice (3,684,029 samples, 0.01%)</title><rect x="52.6882%" y="533" width="0.0131%" height="15" fill="rgb(231,126,28)" fg:x="14767541874" fg:w="3684029"/><text x="52.9382%" y="543.50"></text></g><g><title>alloc::string::String::push (91,935,485 samples, 0.33%)</title><rect x="52.7014%" y="549" width="0.3280%" height="15" fill="rgb(219,221,18)" fg:x="14771225903" fg:w="91935485"/><text x="52.9514%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (46,666,649 samples, 0.17%)</title><rect x="52.8629%" y="533" width="0.1665%" height="15" fill="rgb(211,40,0)" fg:x="14816494739" fg:w="46666649"/><text x="53.1129%" y="543.50"></text></g><g><title>core::ptr::write (3,577,351 samples, 0.01%)</title><rect x="53.0166%" y="517" width="0.0128%" height="15" fill="rgb(239,85,43)" fg:x="14859584037" fg:w="3577351"/><text x="53.2666%" y="527.50"></text></g><g><title>alloc::string::String::with_capacity (14,672,663 samples, 0.05%)</title><rect x="53.0294%" y="549" width="0.0523%" height="15" fill="rgb(231,55,21)" fg:x="14863161388" fg:w="14672663"/><text x="53.2794%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12,841,754 samples, 0.05%)</title><rect x="53.0359%" y="533" width="0.0458%" height="15" fill="rgb(225,184,43)" fg:x="14864992297" fg:w="12841754"/><text x="53.2859%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12,841,754 samples, 0.05%)</title><rect x="53.0359%" y="517" width="0.0458%" height="15" fill="rgb(251,158,41)" fg:x="14864992297" fg:w="12841754"/><text x="53.2859%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12,841,754 samples, 0.05%)</title><rect x="53.0359%" y="501" width="0.0458%" height="15" fill="rgb(234,159,37)" fg:x="14864992297" fg:w="12841754"/><text x="53.2859%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (12,841,754 samples, 0.05%)</title><rect x="53.0359%" y="485" width="0.0458%" height="15" fill="rgb(216,204,22)" fg:x="14864992297" fg:w="12841754"/><text x="53.2859%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (12,841,754 samples, 0.05%)</title><rect x="53.0359%" y="469" width="0.0458%" height="15" fill="rgb(214,17,3)" fg:x="14864992297" fg:w="12841754"/><text x="53.2859%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11,034,734 samples, 0.04%)</title><rect x="53.0424%" y="453" width="0.0394%" height="15" fill="rgb(212,111,17)" fg:x="14866799317" fg:w="11034734"/><text x="53.2924%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11,034,734 samples, 0.04%)</title><rect x="53.0424%" y="437" width="0.0394%" height="15" fill="rgb(221,157,24)" fg:x="14866799317" fg:w="11034734"/><text x="53.2924%" y="447.50"></text></g><g><title>alloc::alloc::alloc (11,034,734 samples, 0.04%)</title><rect x="53.0424%" y="421" width="0.0394%" height="15" fill="rgb(252,16,13)" fg:x="14866799317" fg:w="11034734"/><text x="53.2924%" y="431.50"></text></g><g><title>__rust_alloc (11,034,734 samples, 0.04%)</title><rect x="53.0424%" y="405" width="0.0394%" height="15" fill="rgb(221,62,2)" fg:x="14866799317" fg:w="11034734"/><text x="53.2924%" y="415.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11,034,734 samples, 0.04%)</title><rect x="53.0424%" y="389" width="0.0394%" height="15" fill="rgb(247,87,22)" fg:x="14866799317" fg:w="11034734"/><text x="53.2924%" y="399.50"></text></g><g><title>_rjem_malloc (8,990,548 samples, 0.03%)</title><rect x="53.0497%" y="373" width="0.0321%" height="15" fill="rgb(215,73,9)" fg:x="14868843503" fg:w="8990548"/><text x="53.2997%" y="383.50"></text></g><g><title>imalloc_fastpath (8,990,548 samples, 0.03%)</title><rect x="53.0497%" y="357" width="0.0321%" height="15" fill="rgb(207,175,33)" fg:x="14868843503" fg:w="8990548"/><text x="53.2997%" y="367.50"></text></g><g><title>cache_bin_alloc_easy (5,382,603 samples, 0.02%)</title><rect x="53.0625%" y="341" width="0.0192%" height="15" fill="rgb(243,129,54)" fg:x="14872451448" fg:w="5382603"/><text x="53.3125%" y="351.50"></text></g><g><title>cache_bin_alloc_impl (5,382,603 samples, 0.02%)</title><rect x="53.0625%" y="325" width="0.0192%" height="15" fill="rgb(227,119,45)" fg:x="14872451448" fg:w="5382603"/><text x="53.3125%" y="335.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (10,807,117 samples, 0.04%)</title><rect x="53.0818%" y="549" width="0.0386%" height="15" fill="rgb(205,109,36)" fg:x="14877834051" fg:w="10807117"/><text x="53.3318%" y="559.50"></text></g><g><title>&lt;bytes::bytes::Bytes as bytes::buf::buf_impl::Buf&gt;::advance (9,039,817 samples, 0.03%)</title><rect x="53.0881%" y="533" width="0.0323%" height="15" fill="rgb(205,6,39)" fg:x="14879601351" fg:w="9039817"/><text x="53.3381%" y="543.50"></text></g><g><title>bytes::bytes::Bytes::inc_start (9,039,817 samples, 0.03%)</title><rect x="53.0881%" y="517" width="0.0323%" height="15" fill="rgb(221,32,16)" fg:x="14879601351" fg:w="9039817"/><text x="53.3381%" y="527.50"></text></g><g><title>&lt;pgdog::net::messages::command_complete::CommandComplete as pgdog::net::messages::FromBytes&gt;::from_bytes (182,849,526 samples, 0.65%)</title><rect x="52.5075%" y="581" width="0.6524%" height="15" fill="rgb(228,144,50)" fg:x="14716869865" fg:w="182849526"/><text x="52.7575%" y="591.50"></text></g><g><title>pgdog::net::c_string_buf (156,486,113 samples, 0.56%)</title><rect x="52.6015%" y="565" width="0.5583%" height="15" fill="rgb(229,201,53)" fg:x="14743233278" fg:w="156486113"/><text x="52.8515%" y="575.50"></text></g><g><title>pgdog::net::c_string_buf_len (11,078,223 samples, 0.04%)</title><rect x="53.1203%" y="549" width="0.0395%" height="15" fill="rgb(249,153,27)" fg:x="14888641168" fg:w="11078223"/><text x="53.3703%" y="559.50"></text></g><g><title>bytes::buf::buf_impl::Buf::has_remaining (5,307,229 samples, 0.02%)</title><rect x="53.1409%" y="533" width="0.0189%" height="15" fill="rgb(227,106,25)" fg:x="14894412162" fg:w="5307229"/><text x="53.3909%" y="543.50"></text></g><g><title>&lt;pgdog::net::messages::rfq::ReadyForQuery as pgdog::net::messages::FromBytes&gt;::from_bytes (9,562,468 samples, 0.03%)</title><rect x="53.1598%" y="581" width="0.0341%" height="15" fill="rgb(230,65,29)" fg:x="14899719391" fg:w="9562468"/><text x="53.4098%" y="591.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (7,589,847 samples, 0.03%)</title><rect x="53.1669%" y="565" width="0.0271%" height="15" fill="rgb(221,57,46)" fg:x="14901692012" fg:w="7589847"/><text x="53.4169%" y="575.50"></text></g><g><title>&lt;bytes::bytes::Bytes as bytes::buf::buf_impl::Buf&gt;::advance (3,779,418 samples, 0.01%)</title><rect x="53.1805%" y="549" width="0.0135%" height="15" fill="rgb(229,161,17)" fg:x="14905502441" fg:w="3779418"/><text x="53.4305%" y="559.50"></text></g><g><title>bytes::bytes::Bytes::inc_start (3,779,418 samples, 0.01%)</title><rect x="53.1805%" y="533" width="0.0135%" height="15" fill="rgb(222,213,11)" fg:x="14905502441" fg:w="3779418"/><text x="53.4305%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3,779,418 samples, 0.01%)</title><rect x="53.1805%" y="517" width="0.0135%" height="15" fill="rgb(235,35,13)" fg:x="14905502441" fg:w="3779418"/><text x="53.4305%" y="527.50"></text></g><g><title>&lt;tracing_core::metadata::Level as core::cmp::PartialOrd&lt;tracing_core::metadata::LevelFilter&gt;&gt;::le (3,689,224 samples, 0.01%)</title><rect x="53.1940%" y="581" width="0.0132%" height="15" fill="rgb(233,158,34)" fg:x="14909281859" fg:w="3689224"/><text x="53.4440%" y="591.50"></text></g><g><title>_rjem_sdallocx (21,120,775 samples, 0.08%)</title><rect x="53.2071%" y="581" width="0.0754%" height="15" fill="rgb(215,151,48)" fg:x="14912971083" fg:w="21120775"/><text x="53.4571%" y="591.50"></text></g><g><title>free_fastpath (13,589,130 samples, 0.05%)</title><rect x="53.2340%" y="565" width="0.0485%" height="15" fill="rgb(229,84,14)" fg:x="14920502728" fg:w="13589130"/><text x="53.4840%" y="575.50"></text></g><g><title>cache_bin_dalloc_easy (2,821,673 samples, 0.01%)</title><rect x="53.2724%" y="549" width="0.0101%" height="15" fill="rgb(229,68,14)" fg:x="14931270185" fg:w="2821673"/><text x="53.5224%" y="559.50"></text></g><g><title>bytes::bytes::shared_drop (28,060,694 samples, 0.10%)</title><rect x="53.2825%" y="581" width="0.1001%" height="15" fill="rgb(243,106,26)" fg:x="14934091858" fg:w="28060694"/><text x="53.5325%" y="591.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (14,848,874 samples, 0.05%)</title><rect x="53.3296%" y="565" width="0.0530%" height="15" fill="rgb(206,45,38)" fg:x="14947303678" fg:w="14848874"/><text x="53.5796%" y="575.50"></text></g><g><title>bytes::bytes::shared_drop::_{{closure}} (14,848,874 samples, 0.05%)</title><rect x="53.3296%" y="549" width="0.0530%" height="15" fill="rgb(226,6,15)" fg:x="14947303678" fg:w="14848874"/><text x="53.5796%" y="559.50"></text></g><g><title>bytes::bytes::release_shared (9,240,148 samples, 0.03%)</title><rect x="53.3496%" y="533" width="0.0330%" height="15" fill="rgb(232,22,54)" fg:x="14952912404" fg:w="9240148"/><text x="53.5996%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3,679,072 samples, 0.01%)</title><rect x="53.3695%" y="517" width="0.0131%" height="15" fill="rgb(229,222,32)" fg:x="14958473480" fg:w="3679072"/><text x="53.6195%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (3,679,072 samples, 0.01%)</title><rect x="53.3695%" y="501" width="0.0131%" height="15" fill="rgb(228,62,29)" fg:x="14958473480" fg:w="3679072"/><text x="53.6195%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::stream::Stream::read::{{closure}}&gt; (7,629,951 samples, 0.03%)</title><rect x="53.3826%" y="581" width="0.0272%" height="15" fill="rgb(251,103,34)" fg:x="14962152552" fg:w="7629951"/><text x="53.6326%" y="591.50"></text></g><g><title>&lt;pgdog::net::messages::Message as pgdog::net::messages::Protocol&gt;::code (18,830,530 samples, 0.07%)</title><rect x="53.4494%" y="565" width="0.0672%" height="15" fill="rgb(233,12,30)" fg:x="14980881842" fg:w="18830530"/><text x="53.6994%" y="575.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (11,190,250 samples, 0.04%)</title><rect x="53.5166%" y="565" width="0.0399%" height="15" fill="rgb(238,52,0)" fg:x="14999712372" fg:w="11190250"/><text x="53.7666%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (35,681,847 samples, 0.13%)</title><rect x="53.5895%" y="549" width="0.1273%" height="15" fill="rgb(223,98,5)" fg:x="15020148991" fg:w="35681847"/><text x="53.8395%" y="559.50"></text></g><g><title>&lt;pgdog::backend::protocol::state::ExecutionCode as core::convert::From&lt;char&gt;&gt;::from (33,845,019 samples, 0.12%)</title><rect x="53.5961%" y="533" width="0.1208%" height="15" fill="rgb(228,75,37)" fg:x="15021985819" fg:w="33845019"/><text x="53.8461%" y="543.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (3,673,431 samples, 0.01%)</title><rect x="53.7168%" y="549" width="0.0131%" height="15" fill="rgb(205,115,49)" fg:x="15055830838" fg:w="3673431"/><text x="53.9668%" y="559.50"></text></g><g><title>pgdog::backend::prepared_statements::PreparedStatements::forward (89,705,257 samples, 0.32%)</title><rect x="53.4228%" y="581" width="0.3201%" height="15" fill="rgb(250,154,43)" fg:x="14973437326" fg:w="89705257"/><text x="53.6728%" y="591.50"></text></g><g><title>pgdog::backend::protocol::state::ProtocolState::action (52,239,961 samples, 0.19%)</title><rect x="53.5565%" y="565" width="0.1864%" height="15" fill="rgb(226,43,29)" fg:x="15010902622" fg:w="52239961"/><text x="53.8065%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (3,638,314 samples, 0.01%)</title><rect x="53.7299%" y="549" width="0.0130%" height="15" fill="rgb(249,228,39)" fg:x="15059504269" fg:w="3638314"/><text x="53.9799%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::error::Error&gt; (3,638,314 samples, 0.01%)</title><rect x="53.7299%" y="533" width="0.0130%" height="15" fill="rgb(216,79,43)" fg:x="15059504269" fg:w="3638314"/><text x="53.9799%" y="543.50"></text></g><g><title>pgdog::backend::protocol::state::ProtocolState::get_simulated (11,684,332 samples, 0.04%)</title><rect x="53.7429%" y="581" width="0.0417%" height="15" fill="rgb(228,95,12)" fg:x="15063142583" fg:w="11684332"/><text x="53.9929%" y="591.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::front (9,662,495 samples, 0.03%)</title><rect x="53.7501%" y="565" width="0.0345%" height="15" fill="rgb(249,221,15)" fg:x="15065164420" fg:w="9662495"/><text x="54.0001%" y="575.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::get (9,662,495 samples, 0.03%)</title><rect x="53.7501%" y="549" width="0.0345%" height="15" fill="rgb(233,34,13)" fg:x="15065164420" fg:w="9662495"/><text x="54.0001%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5,724,411 samples, 0.02%)</title><rect x="53.7642%" y="533" width="0.0204%" height="15" fill="rgb(214,103,39)" fg:x="15069102504" fg:w="5724411"/><text x="54.0142%" y="543.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::AddAssign&gt;::add_assign (5,463,807 samples, 0.02%)</title><rect x="53.7909%" y="565" width="0.0195%" height="15" fill="rgb(251,126,39)" fg:x="15076608360" fg:w="5463807"/><text x="54.0409%" y="575.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::Add&gt;::add (5,463,807 samples, 0.02%)</title><rect x="53.7909%" y="549" width="0.0195%" height="15" fill="rgb(214,216,36)" fg:x="15076608360" fg:w="5463807"/><text x="54.0409%" y="559.50"></text></g><g><title>core::time::Duration::checked_add (5,463,807 samples, 0.02%)</title><rect x="53.7909%" y="533" width="0.0195%" height="15" fill="rgb(220,221,8)" fg:x="15076608360" fg:w="5463807"/><text x="54.0409%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (7,676,092 samples, 0.03%)</title><rect x="53.8104%" y="565" width="0.0274%" height="15" fill="rgb(240,216,3)" fg:x="15082072167" fg:w="7676092"/><text x="54.0604%" y="575.50"></text></g><g><title>core::mem::replace (7,676,092 samples, 0.03%)</title><rect x="53.8104%" y="549" width="0.0274%" height="15" fill="rgb(232,218,17)" fg:x="15082072167" fg:w="7676092"/><text x="54.0604%" y="559.50"></text></g><g><title>core::ptr::read (7,676,092 samples, 0.03%)</title><rect x="53.8104%" y="533" width="0.0274%" height="15" fill="rgb(229,163,45)" fg:x="15082072167" fg:w="7676092"/><text x="54.0604%" y="543.50"></text></g><g><title>pgdog::backend::stats::Stats::query (25,974,667 samples, 0.09%)</title><rect x="53.7909%" y="581" width="0.0927%" height="15" fill="rgb(231,110,42)" fg:x="15076608360" fg:w="25974667"/><text x="54.0409%" y="591.50"></text></g><g><title>std::time::Instant::duration_since (12,834,768 samples, 0.05%)</title><rect x="53.8378%" y="565" width="0.0458%" height="15" fill="rgb(208,170,48)" fg:x="15089748259" fg:w="12834768"/><text x="54.0878%" y="575.50"></text></g><g><title>std::time::Instant::checked_duration_since (12,834,768 samples, 0.05%)</title><rect x="53.8378%" y="549" width="0.0458%" height="15" fill="rgb(239,116,25)" fg:x="15089748259" fg:w="12834768"/><text x="54.0878%" y="559.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (12,834,768 samples, 0.05%)</title><rect x="53.8378%" y="533" width="0.0458%" height="15" fill="rgb(219,200,50)" fg:x="15089748259" fg:w="12834768"/><text x="54.0878%" y="543.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (12,834,768 samples, 0.05%)</title><rect x="53.8378%" y="517" width="0.0458%" height="15" fill="rgb(245,200,0)" fg:x="15089748259" fg:w="12834768"/><text x="54.0878%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (9,240,261 samples, 0.03%)</title><rect x="53.8507%" y="501" width="0.0330%" height="15" fill="rgb(245,119,33)" fg:x="15093342766" fg:w="9240261"/><text x="54.1007%" y="511.50"></text></g><g><title>core::cmp::PartialOrd::ge (9,240,261 samples, 0.03%)</title><rect x="53.8507%" y="485" width="0.0330%" height="15" fill="rgb(231,125,12)" fg:x="15093342766" fg:w="9240261"/><text x="54.1007%" y="495.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (7,411,626 samples, 0.03%)</title><rect x="53.8572%" y="469" width="0.0264%" height="15" fill="rgb(216,96,41)" fg:x="15095171401" fg:w="7411626"/><text x="54.1072%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (7,411,626 samples, 0.03%)</title><rect x="53.8572%" y="453" width="0.0264%" height="15" fill="rgb(248,43,45)" fg:x="15095171401" fg:w="7411626"/><text x="54.1072%" y="463.50"></text></g><g><title>pgdog::backend::stats::Stats::receive (4,131,559 samples, 0.01%)</title><rect x="53.8836%" y="581" width="0.0147%" height="15" fill="rgb(217,222,7)" fg:x="15102583027" fg:w="4131559"/><text x="54.1336%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::AddAssign&gt;::add_assign (9,460,495 samples, 0.03%)</title><rect x="53.9508%" y="549" width="0.0338%" height="15" fill="rgb(233,28,6)" fg:x="15121416765" fg:w="9460495"/><text x="54.2008%" y="559.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::Add&gt;::add (3,799,941 samples, 0.01%)</title><rect x="53.9710%" y="533" width="0.0136%" height="15" fill="rgb(231,218,15)" fg:x="15127077319" fg:w="3799941"/><text x="54.2210%" y="543.50"></text></g><g><title>core::time::Duration::checked_add (3,799,941 samples, 0.01%)</title><rect x="53.9710%" y="517" width="0.0136%" height="15" fill="rgb(226,171,48)" fg:x="15127077319" fg:w="3799941"/><text x="54.2210%" y="527.50"></text></g><g><title>core::ptr::read (5,654,926 samples, 0.02%)</title><rect x="53.9846%" y="517" width="0.0202%" height="15" fill="rgb(235,201,9)" fg:x="15130877260" fg:w="5654926"/><text x="54.2346%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (7,529,649 samples, 0.03%)</title><rect x="53.9846%" y="549" width="0.0269%" height="15" fill="rgb(217,80,15)" fg:x="15130877260" fg:w="7529649"/><text x="54.2346%" y="559.50"></text></g><g><title>core::mem::replace (7,529,649 samples, 0.03%)</title><rect x="53.9846%" y="533" width="0.0269%" height="15" fill="rgb(219,152,8)" fg:x="15130877260" fg:w="7529649"/><text x="54.2346%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_default (9,019,207 samples, 0.03%)</title><rect x="54.0114%" y="533" width="0.0322%" height="15" fill="rgb(243,107,38)" fg:x="15138406909" fg:w="9019207"/><text x="54.2614%" y="543.50"></text></g><g><title>pgdog::backend::stats::Stats::transaction_state (35,232,522 samples, 0.13%)</title><rect x="53.9243%" y="565" width="0.1257%" height="15" fill="rgb(231,17,5)" fg:x="15113979146" fg:w="35232522"/><text x="54.1743%" y="575.50"></text></g><g><title>std::time::Instant::duration_since (10,804,759 samples, 0.04%)</title><rect x="54.0114%" y="549" width="0.0385%" height="15" fill="rgb(209,25,54)" fg:x="15138406909" fg:w="10804759"/><text x="54.2614%" y="559.50"></text></g><g><title>[libc.so.6] (24,451,244 samples, 0.09%)</title><rect x="54.0638%" y="533" width="0.0872%" height="15" fill="rgb(219,0,2)" fg:x="15153071447" fg:w="24451244"/><text x="54.3138%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,std::collections::hash::map::HashMap&lt;pgdog::net::messages::backend_key::BackendKeyData,pgdog::backend::stats::ConnectedServer,core::hash::BuildHasherDefault&lt;fnv::FnvHasher&gt;&gt;&gt;&gt; (5,791,070 samples, 0.02%)</title><rect x="54.1510%" y="533" width="0.0207%" height="15" fill="rgb(246,9,5)" fg:x="15177522691" fg:w="5791070"/><text x="54.4010%" y="543.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (5,791,070 samples, 0.02%)</title><rect x="54.1510%" y="517" width="0.0207%" height="15" fill="rgb(226,159,4)" fg:x="15177522691" fg:w="5791070"/><text x="54.4010%" y="527.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (5,791,070 samples, 0.02%)</title><rect x="54.1510%" y="501" width="0.0207%" height="15" fill="rgb(219,175,34)" fg:x="15177522691" fg:w="5791070"/><text x="54.4010%" y="511.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3,753,216 samples, 0.01%)</title><rect x="54.1717%" y="533" width="0.0134%" height="15" fill="rgb(236,10,46)" fg:x="15183313761" fg:w="3753216"/><text x="54.4217%" y="543.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3,753,216 samples, 0.01%)</title><rect x="54.1717%" y="517" width="0.0134%" height="15" fill="rgb(240,211,16)" fg:x="15183313761" fg:w="3753216"/><text x="54.4217%" y="527.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (9,365,829 samples, 0.03%)</title><rect x="54.1850%" y="373" width="0.0334%" height="15" fill="rgb(205,3,43)" fg:x="15187066977" fg:w="9365829"/><text x="54.4350%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (3,733,529 samples, 0.01%)</title><rect x="54.2051%" y="357" width="0.0133%" height="15" fill="rgb(245,7,22)" fg:x="15192699277" fg:w="3733529"/><text x="54.4551%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (11,164,870 samples, 0.04%)</title><rect x="54.1850%" y="485" width="0.0398%" height="15" fill="rgb(239,132,32)" fg:x="15187066977" fg:w="11164870"/><text x="54.4350%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11,164,870 samples, 0.04%)</title><rect x="54.1850%" y="469" width="0.0398%" height="15" fill="rgb(228,202,34)" fg:x="15187066977" fg:w="11164870"/><text x="54.4350%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (11,164,870 samples, 0.04%)</title><rect x="54.1850%" y="453" width="0.0398%" height="15" fill="rgb(254,200,22)" fg:x="15187066977" fg:w="11164870"/><text x="54.4350%" y="463.50"></text></g><g><title>&lt;pgdog::net::messages::backend_key::BackendKeyData as core::hash::Hash&gt;::hash (11,164,870 samples, 0.04%)</title><rect x="54.1850%" y="437" width="0.0398%" height="15" fill="rgb(219,10,39)" fg:x="15187066977" fg:w="11164870"/><text x="54.4350%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (11,164,870 samples, 0.04%)</title><rect x="54.1850%" y="421" width="0.0398%" height="15" fill="rgb(226,210,39)" fg:x="15187066977" fg:w="11164870"/><text x="54.4350%" y="431.50"></text></g><g><title>core::hash::Hasher::write_i32 (11,164,870 samples, 0.04%)</title><rect x="54.1850%" y="405" width="0.0398%" height="15" fill="rgb(208,219,16)" fg:x="15187066977" fg:w="11164870"/><text x="54.4350%" y="415.50"></text></g><g><title>core::hash::Hasher::write_u32 (11,164,870 samples, 0.04%)</title><rect x="54.1850%" y="389" width="0.0398%" height="15" fill="rgb(216,158,51)" fg:x="15187066977" fg:w="11164870"/><text x="54.4350%" y="399.50"></text></g><g><title>core::intrinsics::likely (57,384,279 samples, 0.20%)</title><rect x="54.2448%" y="437" width="0.2047%" height="15" fill="rgb(233,14,44)" fg:x="15203811252" fg:w="57384279"/><text x="54.4948%" y="447.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (10,883,519 samples, 0.04%)</title><rect x="54.4495%" y="437" width="0.0388%" height="15" fill="rgb(237,97,39)" fg:x="15261195531" fg:w="10883519"/><text x="54.6995%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (10,883,519 samples, 0.04%)</title><rect x="54.4495%" y="421" width="0.0388%" height="15" fill="rgb(218,198,43)" fg:x="15261195531" fg:w="10883519"/><text x="54.6995%" y="431.50"></text></g><g><title>hashbrown::control::tag::Tag::full (5,554,961 samples, 0.02%)</title><rect x="54.4884%" y="437" width="0.0198%" height="15" fill="rgb(231,104,20)" fg:x="15272079050" fg:w="5554961"/><text x="54.7384%" y="447.50"></text></g><g><title>pgdog::backend::stats::Stats::transaction (172,873,786 samples, 0.62%)</title><rect x="53.8984%" y="581" width="0.6168%" height="15" fill="rgb(254,36,13)" fg:x="15106714586" fg:w="172873786"/><text x="54.1484%" y="591.50"></text></g><g><title>pgdog::backend::stats::Stats::update (130,376,704 samples, 0.47%)</title><rect x="54.0500%" y="565" width="0.4652%" height="15" fill="rgb(248,14,50)" fg:x="15149211668" fg:w="130376704"/><text x="54.3000%" y="575.50"></text></g><g><title>pgdog::backend::stats::update (126,516,925 samples, 0.45%)</title><rect x="54.0638%" y="549" width="0.4514%" height="15" fill="rgb(217,107,29)" fg:x="15153071447" fg:w="126516925"/><text x="54.3138%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (92,521,395 samples, 0.33%)</title><rect x="54.1850%" y="533" width="0.3301%" height="15" fill="rgb(251,169,33)" fg:x="15187066977" fg:w="92521395"/><text x="54.4350%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (92,521,395 samples, 0.33%)</title><rect x="54.1850%" y="517" width="0.3301%" height="15" fill="rgb(217,108,32)" fg:x="15187066977" fg:w="92521395"/><text x="54.4350%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (92,521,395 samples, 0.33%)</title><rect x="54.1850%" y="501" width="0.3301%" height="15" fill="rgb(219,66,42)" fg:x="15187066977" fg:w="92521395"/><text x="54.4350%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (81,356,525 samples, 0.29%)</title><rect x="54.2249%" y="485" width="0.2903%" height="15" fill="rgb(206,180,7)" fg:x="15198231847" fg:w="81356525"/><text x="54.4749%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (81,356,525 samples, 0.29%)</title><rect x="54.2249%" y="469" width="0.2903%" height="15" fill="rgb(208,226,31)" fg:x="15198231847" fg:w="81356525"/><text x="54.4749%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (81,356,525 samples, 0.29%)</title><rect x="54.2249%" y="453" width="0.2903%" height="15" fill="rgb(218,26,49)" fg:x="15198231847" fg:w="81356525"/><text x="54.4749%" y="463.50"></text></g><g><title>pgdog::net::messages::Message::backend (6,170,093 samples, 0.02%)</title><rect x="54.5151%" y="581" width="0.0220%" height="15" fill="rgb(233,197,48)" fg:x="15279588372" fg:w="6170093"/><text x="54.7651%" y="591.50"></text></g><g><title>pgdog::net::messages::Message::payload (29,473,705 samples, 0.11%)</title><rect x="54.5372%" y="581" width="0.1052%" height="15" fill="rgb(252,181,51)" fg:x="15285758465" fg:w="29473705"/><text x="54.7872%" y="591.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (29,473,705 samples, 0.11%)</title><rect x="54.5372%" y="565" width="0.1052%" height="15" fill="rgb(253,90,19)" fg:x="15285758465" fg:w="29473705"/><text x="54.7872%" y="575.50"></text></g><g><title>bytes::bytes::promotable_even_clone (29,473,705 samples, 0.11%)</title><rect x="54.5372%" y="549" width="0.1052%" height="15" fill="rgb(215,171,30)" fg:x="15285758465" fg:w="29473705"/><text x="54.7872%" y="559.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (27,594,825 samples, 0.10%)</title><rect x="54.5439%" y="533" width="0.0985%" height="15" fill="rgb(214,222,9)" fg:x="15287637345" fg:w="27594825"/><text x="54.7939%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3,677,160 samples, 0.01%)</title><rect x="54.6292%" y="517" width="0.0131%" height="15" fill="rgb(223,3,22)" fg:x="15311555010" fg:w="3677160"/><text x="54.8792%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (7,335,411 samples, 0.03%)</title><rect x="55.1834%" y="469" width="0.0262%" height="15" fill="rgb(225,196,46)" fg:x="15466875836" fg:w="7335411"/><text x="55.4334%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7,335,411 samples, 0.03%)</title><rect x="55.1834%" y="453" width="0.0262%" height="15" fill="rgb(209,110,37)" fg:x="15466875836" fg:w="7335411"/><text x="55.4334%" y="463.50"></text></g><g><title>[libc.so.6] (7,335,411 samples, 0.03%)</title><rect x="55.1834%" y="437" width="0.0262%" height="15" fill="rgb(249,89,12)" fg:x="15466875836" fg:w="7335411"/><text x="55.4334%" y="447.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (35,391,481 samples, 0.13%)</title><rect x="55.1110%" y="517" width="0.1263%" height="15" fill="rgb(226,27,33)" fg:x="15446606536" fg:w="35391481"/><text x="55.3610%" y="527.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (35,391,481 samples, 0.13%)</title><rect x="55.1110%" y="501" width="0.1263%" height="15" fill="rgb(213,82,22)" fg:x="15446606536" fg:w="35391481"/><text x="55.3610%" y="511.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (28,079,669 samples, 0.10%)</title><rect x="55.1371%" y="485" width="0.1002%" height="15" fill="rgb(248,140,0)" fg:x="15453918348" fg:w="28079669"/><text x="55.3871%" y="495.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (7,786,770 samples, 0.03%)</title><rect x="55.2095%" y="469" width="0.0278%" height="15" fill="rgb(228,106,3)" fg:x="15474211247" fg:w="7786770"/><text x="55.4595%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (7,786,770 samples, 0.03%)</title><rect x="55.2095%" y="453" width="0.0278%" height="15" fill="rgb(209,23,37)" fg:x="15474211247" fg:w="7786770"/><text x="55.4595%" y="463.50"></text></g><g><title>core::slice::index::get_offset_len_mut_noubcheck (3,875,017 samples, 0.01%)</title><rect x="55.2235%" y="437" width="0.0138%" height="15" fill="rgb(241,93,50)" fg:x="15478123000" fg:w="3875017"/><text x="55.4735%" y="447.50"></text></g><g><title>core::slice::index::get_mut_noubcheck (3,875,017 samples, 0.01%)</title><rect x="55.2235%" y="421" width="0.0138%" height="15" fill="rgb(253,46,43)" fg:x="15478123000" fg:w="3875017"/><text x="55.4735%" y="431.50"></text></g><g><title>&lt;tokio::io::util::read_exact::ReadExact&lt;A&gt; as core::future::future::Future&gt;::poll (67,748,640 samples, 0.24%)</title><rect x="55.0092%" y="565" width="0.2417%" height="15" fill="rgb(226,206,43)" fg:x="15418050953" fg:w="67748640"/><text x="55.2592%" y="575.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (57,840,757 samples, 0.21%)</title><rect x="55.0445%" y="549" width="0.2064%" height="15" fill="rgb(217,54,7)" fg:x="15427958836" fg:w="57840757"/><text x="55.2945%" y="559.50"></text></g><g><title>&lt;pgdog::net::stream::Stream as tokio::io::async_read::AsyncRead&gt;::poll_read (53,898,413 samples, 0.19%)</title><rect x="55.0586%" y="533" width="0.1923%" height="15" fill="rgb(223,5,52)" fg:x="15431901180" fg:w="53898413"/><text x="55.3086%" y="543.50"></text></g><g><title>pgdog::net::stream::_::&lt;impl pgdog::net::stream::Stream&gt;::project (3,801,576 samples, 0.01%)</title><rect x="55.2373%" y="517" width="0.0136%" height="15" fill="rgb(206,52,46)" fg:x="15481998017" fg:w="3801576"/><text x="55.4873%" y="527.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (3,815,858 samples, 0.01%)</title><rect x="55.4372%" y="485" width="0.0136%" height="15" fill="rgb(253,136,11)" fg:x="15538014248" fg:w="3815858"/><text x="55.6872%" y="495.50"></text></g><g><title>core::cmp::min (3,799,455 samples, 0.01%)</title><rect x="55.4573%" y="485" width="0.0136%" height="15" fill="rgb(208,106,33)" fg:x="15543662551" fg:w="3799455"/><text x="55.7073%" y="495.50"></text></g><g><title>core::cmp::Ord::min (3,799,455 samples, 0.01%)</title><rect x="55.4573%" y="469" width="0.0136%" height="15" fill="rgb(206,54,4)" fg:x="15543662551" fg:w="3799455"/><text x="55.7073%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (24,146,973 samples, 0.09%)</title><rect x="55.4900%" y="469" width="0.0862%" height="15" fill="rgb(213,3,15)" fg:x="15552812962" fg:w="24146973"/><text x="55.7400%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (24,146,973 samples, 0.09%)</title><rect x="55.4900%" y="453" width="0.0862%" height="15" fill="rgb(252,211,39)" fg:x="15552812962" fg:w="24146973"/><text x="55.7400%" y="463.50"></text></g><g><title>[libc.so.6] (24,146,973 samples, 0.09%)</title><rect x="55.4900%" y="437" width="0.0862%" height="15" fill="rgb(223,6,36)" fg:x="15552812962" fg:w="24146973"/><text x="55.7400%" y="447.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (48,211,435 samples, 0.17%)</title><rect x="55.4106%" y="517" width="0.1720%" height="15" fill="rgb(252,169,45)" fg:x="15530564354" fg:w="48211435"/><text x="55.6606%" y="527.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (48,211,435 samples, 0.17%)</title><rect x="55.4106%" y="501" width="0.1720%" height="15" fill="rgb(212,48,26)" fg:x="15530564354" fg:w="48211435"/><text x="55.6606%" y="511.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (31,313,783 samples, 0.11%)</title><rect x="55.4709%" y="485" width="0.1117%" height="15" fill="rgb(251,102,48)" fg:x="15547462006" fg:w="31313783"/><text x="55.7209%" y="495.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (87,219,514 samples, 0.31%)</title><rect x="55.2842%" y="549" width="0.3112%" height="15" fill="rgb(243,208,16)" fg:x="15495141046" fg:w="87219514"/><text x="55.5342%" y="559.50"></text></g><g><title>&lt;pgdog::net::stream::Stream as tokio::io::async_read::AsyncRead&gt;::poll_read (83,533,354 samples, 0.30%)</title><rect x="55.2974%" y="533" width="0.2980%" height="15" fill="rgb(219,96,24)" fg:x="15498827206" fg:w="83533354"/><text x="55.5474%" y="543.50"></text></g><g><title>pgdog::net::stream::_::&lt;impl pgdog::net::stream::Stream&gt;::project (3,584,771 samples, 0.01%)</title><rect x="55.5826%" y="517" width="0.0128%" height="15" fill="rgb(219,33,29)" fg:x="15578775789" fg:w="3584771"/><text x="55.8326%" y="527.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_i32 (5,559,046 samples, 0.02%)</title><rect x="55.5954%" y="549" width="0.0198%" height="15" fill="rgb(223,176,5)" fg:x="15582360560" fg:w="5559046"/><text x="55.8454%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5,559,046 samples, 0.02%)</title><rect x="55.5954%" y="533" width="0.0198%" height="15" fill="rgb(228,140,14)" fg:x="15582360560" fg:w="5559046"/><text x="55.8454%" y="543.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_i32::_{{closure}} (5,559,046 samples, 0.02%)</title><rect x="55.5954%" y="517" width="0.0198%" height="15" fill="rgb(217,179,31)" fg:x="15582360560" fg:w="5559046"/><text x="55.8454%" y="527.50"></text></g><g><title>core::num::&lt;impl i32&gt;::from_be_bytes (3,602,637 samples, 0.01%)</title><rect x="55.6024%" y="501" width="0.0129%" height="15" fill="rgb(230,9,30)" fg:x="15584316969" fg:w="3602637"/><text x="55.8524%" y="511.50"></text></g><g><title>core::num::&lt;impl i32&gt;::from_be (3,602,637 samples, 0.01%)</title><rect x="55.6024%" y="485" width="0.0129%" height="15" fill="rgb(230,136,20)" fg:x="15584316969" fg:w="3602637"/><text x="55.8524%" y="495.50"></text></g><g><title>core::num::&lt;impl i32&gt;::swap_bytes (3,602,637 samples, 0.01%)</title><rect x="55.6024%" y="469" width="0.0129%" height="15" fill="rgb(215,210,22)" fg:x="15584316969" fg:w="3602637"/><text x="55.8524%" y="479.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (3,602,637 samples, 0.01%)</title><rect x="55.6024%" y="453" width="0.0129%" height="15" fill="rgb(218,43,5)" fg:x="15584316969" fg:w="3602637"/><text x="55.8524%" y="463.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (22,419,444 samples, 0.08%)</title><rect x="55.6152%" y="549" width="0.0800%" height="15" fill="rgb(216,11,5)" fg:x="15587919606" fg:w="22419444"/><text x="55.8652%" y="559.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (18,838,443 samples, 0.07%)</title><rect x="55.6280%" y="533" width="0.0672%" height="15" fill="rgb(209,82,29)" fg:x="15591500607" fg:w="18838443"/><text x="55.8780%" y="543.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (18,838,443 samples, 0.07%)</title><rect x="55.6280%" y="517" width="0.0672%" height="15" fill="rgb(244,115,12)" fg:x="15591500607" fg:w="18838443"/><text x="55.8780%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (18,838,443 samples, 0.07%)</title><rect x="55.6280%" y="501" width="0.0672%" height="15" fill="rgb(222,82,18)" fg:x="15591500607" fg:w="18838443"/><text x="55.8780%" y="511.50"></text></g><g><title>&lt;tokio::io::util::read_int::ReadI32&lt;R&gt; as core::future::future::Future&gt;::poll (126,355,746 samples, 0.45%)</title><rect x="55.2509%" y="565" width="0.4508%" height="15" fill="rgb(249,227,8)" fg:x="15485799593" fg:w="126355746"/><text x="55.5009%" y="575.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (18,917,099 samples, 0.07%)</title><rect x="55.9493%" y="485" width="0.0675%" height="15" fill="rgb(253,141,45)" fg:x="15681564403" fg:w="18917099"/><text x="56.1993%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9,565,911 samples, 0.03%)</title><rect x="56.0754%" y="469" width="0.0341%" height="15" fill="rgb(234,184,4)" fg:x="15716886881" fg:w="9565911"/><text x="56.3254%" y="479.50"></text></g><g><title>recv (2,450,399,546 samples, 8.74%)</title><rect x="56.1560%" y="277" width="8.7426%" height="15" fill="rgb(218,194,23)" fg:x="15739501962" fg:w="2450399546"/><text x="56.4060%" y="287.50">recv</text></g><g><title>[libc.so.6] (2,417,018,740 samples, 8.62%)</title><rect x="56.2751%" y="261" width="8.6235%" height="15" fill="rgb(235,66,41)" fg:x="15772882768" fg:w="2417018740"/><text x="56.5251%" y="271.50">[libc.so.6]</text></g><g><title>[libc.so.6] (2,397,610,361 samples, 8.55%)</title><rect x="56.3444%" y="245" width="8.5543%" height="15" fill="rgb(245,217,1)" fg:x="15792291147" fg:w="2397610361"/><text x="56.5944%" y="255.50">[libc.so.6]</text></g><g><title>[unknown] (2,356,410,937 samples, 8.41%)</title><rect x="56.4914%" y="229" width="8.4073%" height="15" fill="rgb(229,91,1)" fg:x="15833490571" fg:w="2356410937"/><text x="56.7414%" y="239.50">[unknown]</text></g><g><title>[unknown] (2,304,132,508 samples, 8.22%)</title><rect x="56.6779%" y="213" width="8.2208%" height="15" fill="rgb(207,101,30)" fg:x="15885769000" fg:w="2304132508"/><text x="56.9279%" y="223.50">[unknown]</text></g><g><title>[unknown] (2,222,362,624 samples, 7.93%)</title><rect x="56.9696%" y="197" width="7.9290%" height="15" fill="rgb(223,82,49)" fg:x="15967538884" fg:w="2222362624"/><text x="57.2196%" y="207.50">[unknown]</text></g><g><title>[unknown] (2,119,969,239 samples, 7.56%)</title><rect x="57.3350%" y="181" width="7.5637%" height="15" fill="rgb(218,167,17)" fg:x="16069932269" fg:w="2119969239"/><text x="57.5850%" y="191.50">[unknown]</text></g><g><title>[unknown] (2,007,167,577 samples, 7.16%)</title><rect x="57.7374%" y="165" width="7.1613%" height="15" fill="rgb(208,103,14)" fg:x="16182733931" fg:w="2007167577"/><text x="57.9874%" y="175.50">[unknown]</text></g><g><title>[unknown] (1,882,578,584 samples, 6.72%)</title><rect x="58.1819%" y="149" width="6.7167%" height="15" fill="rgb(238,20,8)" fg:x="16307322924" fg:w="1882578584"/><text x="58.4319%" y="159.50">[unknown]</text></g><g><title>[unknown] (1,794,923,304 samples, 6.40%)</title><rect x="58.4947%" y="133" width="6.4040%" height="15" fill="rgb(218,80,54)" fg:x="16394978204" fg:w="1794923304"/><text x="58.7447%" y="143.50">[unknown]</text></g><g><title>[unknown] (1,743,946,835 samples, 6.22%)</title><rect x="58.6766%" y="117" width="6.2221%" height="15" fill="rgb(240,144,17)" fg:x="16445954673" fg:w="1743946835"/><text x="58.9266%" y="127.50">[unknown]</text></g><g><title>[unknown] (1,249,706,991 samples, 4.46%)</title><rect x="60.4399%" y="101" width="4.4588%" height="15" fill="rgb(245,27,50)" fg:x="16940194517" fg:w="1249706991"/><text x="60.6899%" y="111.50">[unkn..</text></g><g><title>[unknown] (822,636,657 samples, 2.94%)</title><rect x="61.9636%" y="85" width="2.9350%" height="15" fill="rgb(251,51,7)" fg:x="17367264851" fg:w="822636657"/><text x="62.2136%" y="95.50">[u..</text></g><g><title>[unknown] (612,448,220 samples, 2.19%)</title><rect x="62.7136%" y="69" width="2.1851%" height="15" fill="rgb(245,217,29)" fg:x="17577453288" fg:w="612448220"/><text x="62.9636%" y="79.50">[..</text></g><g><title>[unknown] (375,372,348 samples, 1.34%)</title><rect x="63.5594%" y="53" width="1.3393%" height="15" fill="rgb(221,176,29)" fg:x="17814529160" fg:w="375372348"/><text x="63.8094%" y="63.50"></text></g><g><title>[unknown] (93,589,775 samples, 0.33%)</title><rect x="64.5648%" y="37" width="0.3339%" height="15" fill="rgb(212,180,24)" fg:x="18096311733" fg:w="93589775"/><text x="64.8148%" y="47.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2,475,316,696 samples, 8.83%)</title><rect x="56.1560%" y="405" width="8.8315%" height="15" fill="rgb(254,24,2)" fg:x="15739501962" fg:w="2475316696"/><text x="56.4060%" y="415.50">&lt;&amp;mio::net::..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2,475,316,696 samples, 8.83%)</title><rect x="56.1560%" y="389" width="8.8315%" height="15" fill="rgb(230,100,2)" fg:x="15739501962" fg:w="2475316696"/><text x="56.4060%" y="399.50">mio::io_sour..</text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (2,475,316,696 samples, 8.83%)</title><rect x="56.1560%" y="373" width="8.8315%" height="15" fill="rgb(219,142,25)" fg:x="15739501962" fg:w="2475316696"/><text x="56.4060%" y="383.50">mio::sys::un..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (2,475,316,696 samples, 8.83%)</title><rect x="56.1560%" y="357" width="8.8315%" height="15" fill="rgb(240,73,43)" fg:x="15739501962" fg:w="2475316696"/><text x="56.4060%" y="367.50">&lt;&amp;mio::net::..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2,475,316,696 samples, 8.83%)</title><rect x="56.1560%" y="341" width="8.8315%" height="15" fill="rgb(214,114,15)" fg:x="15739501962" fg:w="2475316696"/><text x="56.4060%" y="351.50">&lt;&amp;std::net::..</text></g><g><title>std::sys::net::connection::socket::TcpStream::read (2,475,316,696 samples, 8.83%)</title><rect x="56.1560%" y="325" width="8.8315%" height="15" fill="rgb(207,130,4)" fg:x="15739501962" fg:w="2475316696"/><text x="56.4060%" y="335.50">std::sys::ne..</text></g><g><title>std::sys::net::connection::socket::unix::Socket::read (2,475,316,696 samples, 8.83%)</title><rect x="56.1560%" y="309" width="8.8315%" height="15" fill="rgb(221,25,40)" fg:x="15739501962" fg:w="2475316696"/><text x="56.4060%" y="319.50">std::sys::ne..</text></g><g><title>std::sys::net::connection::socket::unix::Socket::recv_with_flags (2,475,316,696 samples, 8.83%)</title><rect x="56.1560%" y="293" width="8.8315%" height="15" fill="rgb(241,184,7)" fg:x="15739501962" fg:w="2475316696"/><text x="56.4060%" y="303.50">std::sys::ne..</text></g><g><title>std::sys::pal::unix::cvt (24,917,150 samples, 0.09%)</title><rect x="64.8987%" y="277" width="0.0889%" height="15" fill="rgb(235,159,4)" fg:x="18189901508" fg:w="24917150"/><text x="65.1487%" y="287.50"></text></g><g><title>tokio::runtime::io::registration::Registration::clear_readiness (5,703,441 samples, 0.02%)</title><rect x="64.9944%" y="405" width="0.0203%" height="15" fill="rgb(214,87,48)" fg:x="18216737872" fg:w="5703441"/><text x="65.2444%" y="415.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_readiness (5,703,441 samples, 0.02%)</title><rect x="64.9944%" y="389" width="0.0203%" height="15" fill="rgb(246,198,24)" fg:x="18216737872" fg:w="5703441"/><text x="65.2444%" y="399.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (5,703,441 samples, 0.02%)</title><rect x="64.9944%" y="373" width="0.0203%" height="15" fill="rgb(209,66,40)" fg:x="18216737872" fg:w="5703441"/><text x="65.2444%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_update (5,703,441 samples, 0.02%)</title><rect x="64.9944%" y="357" width="0.0203%" height="15" fill="rgb(233,147,39)" fg:x="18216737872" fg:w="5703441"/><text x="65.2444%" y="367.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2,516,391,776 samples, 8.98%)</title><rect x="56.1095%" y="469" width="8.9781%" height="15" fill="rgb(231,145,52)" fg:x="15726452792" fg:w="2516391776"/><text x="56.3595%" y="479.50">&lt;tokio::io::u..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (2,516,391,776 samples, 8.98%)</title><rect x="56.1095%" y="453" width="8.9781%" height="15" fill="rgb(206,20,26)" fg:x="15726452792" fg:w="2516391776"/><text x="56.3595%" y="463.50">&lt;tokio::net::..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (2,512,638,902 samples, 8.96%)</title><rect x="56.1229%" y="437" width="8.9647%" height="15" fill="rgb(238,220,4)" fg:x="15730205666" fg:w="2512638902"/><text x="56.3729%" y="447.50">tokio::net::t..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (2,512,638,902 samples, 8.96%)</title><rect x="56.1229%" y="421" width="8.9647%" height="15" fill="rgb(252,195,42)" fg:x="15730205666" fg:w="2512638902"/><text x="56.3729%" y="431.50">tokio::io::po..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (20,403,255 samples, 0.07%)</title><rect x="65.0148%" y="405" width="0.0728%" height="15" fill="rgb(209,10,6)" fg:x="18222441313" fg:w="20403255"/><text x="65.2648%" y="415.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (20,403,255 samples, 0.07%)</title><rect x="65.0148%" y="389" width="0.0728%" height="15" fill="rgb(229,3,52)" fg:x="18222441313" fg:w="20403255"/><text x="65.2648%" y="399.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (14,955,469 samples, 0.05%)</title><rect x="65.0342%" y="373" width="0.0534%" height="15" fill="rgb(253,49,37)" fg:x="18227889099" fg:w="14955469"/><text x="65.2842%" y="383.50"></text></g><g><title>tokio::runtime::io::driver::Direction::mask (13,121,388 samples, 0.05%)</title><rect x="65.0408%" y="357" width="0.0468%" height="15" fill="rgb(240,103,49)" fg:x="18229723180" fg:w="13121388"/><text x="65.2908%" y="367.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (2,547,791,933 samples, 9.09%)</title><rect x="56.0168%" y="485" width="9.0901%" height="15" fill="rgb(250,182,30)" fg:x="15700481502" fg:w="2547791933"/><text x="56.2668%" y="495.50">&lt;tokio::io::u..</text></g><g><title>tokio::io::read_buf::ReadBuf::filled (3,660,168 samples, 0.01%)</title><rect x="65.0939%" y="469" width="0.0131%" height="15" fill="rgb(248,8,30)" fg:x="18244613267" fg:w="3660168"/><text x="65.3439%" y="479.50"></text></g><g><title>core::cmp::min (3,758,175 samples, 0.01%)</title><rect x="65.1069%" y="485" width="0.0134%" height="15" fill="rgb(237,120,30)" fg:x="18248273435" fg:w="3758175"/><text x="65.3569%" y="495.50"></text></g><g><title>core::cmp::Ord::min (3,758,175 samples, 0.01%)</title><rect x="65.1069%" y="469" width="0.0134%" height="15" fill="rgb(221,146,34)" fg:x="18248273435" fg:w="3758175"/><text x="65.3569%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (29,753,881 samples, 0.11%)</title><rect x="65.1539%" y="469" width="0.1062%" height="15" fill="rgb(242,55,13)" fg:x="18261432595" fg:w="29753881"/><text x="65.4039%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29,753,881 samples, 0.11%)</title><rect x="65.1539%" y="453" width="0.1062%" height="15" fill="rgb(242,112,31)" fg:x="18261432595" fg:w="29753881"/><text x="65.4039%" y="463.50"></text></g><g><title>[libc.so.6] (26,137,678 samples, 0.09%)</title><rect x="65.1668%" y="437" width="0.0933%" height="15" fill="rgb(249,192,27)" fg:x="18265048798" fg:w="26137678"/><text x="65.4168%" y="447.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (53,718,881 samples, 0.19%)</title><rect x="65.1204%" y="485" width="0.1917%" height="15" fill="rgb(208,204,44)" fg:x="18252031610" fg:w="53718881"/><text x="65.3704%" y="495.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (14,564,015 samples, 0.05%)</title><rect x="65.2600%" y="469" width="0.0520%" height="15" fill="rgb(208,93,54)" fg:x="18291186476" fg:w="14564015"/><text x="65.5100%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (14,564,015 samples, 0.05%)</title><rect x="65.2600%" y="453" width="0.0520%" height="15" fill="rgb(242,1,31)" fg:x="18291186476" fg:w="14564015"/><text x="65.5100%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (8,995,758 samples, 0.03%)</title><rect x="65.2799%" y="437" width="0.0321%" height="15" fill="rgb(241,83,25)" fg:x="18296754733" fg:w="8995758"/><text x="65.5299%" y="447.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2,641,137,347 samples, 9.42%)</title><rect x="55.9091%" y="517" width="9.4232%" height="15" fill="rgb(205,169,50)" fg:x="15670287573" fg:w="2641137347"/><text x="56.1591%" y="527.50">&lt;tokio::io::u..</text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2,641,137,347 samples, 9.42%)</title><rect x="55.9091%" y="501" width="9.4232%" height="15" fill="rgb(239,186,37)" fg:x="15670287573" fg:w="2641137347"/><text x="56.1591%" y="511.50">&lt;tokio::io::u..</text></g><g><title>tokio::io::read_buf::ReadBuf::remaining (5,674,429 samples, 0.02%)</title><rect x="65.3120%" y="485" width="0.0202%" height="15" fill="rgb(205,221,10)" fg:x="18305750491" fg:w="5674429"/><text x="65.5620%" y="495.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (2,684,389,077 samples, 9.58%)</title><rect x="55.7749%" y="549" width="9.5775%" height="15" fill="rgb(218,196,15)" fg:x="15632675263" fg:w="2684389077"/><text x="56.0249%" y="559.50">&lt;&amp;mut T as tok..</text></g><g><title>&lt;pgdog::net::stream::Stream as tokio::io::async_read::AsyncRead&gt;::poll_read (2,684,389,077 samples, 9.58%)</title><rect x="55.7749%" y="533" width="9.5775%" height="15" fill="rgb(218,196,35)" fg:x="15632675263" fg:w="2684389077"/><text x="56.0249%" y="543.50">&lt;pgdog::net::s..</text></g><g><title>pgdog::net::stream::_::&lt;impl pgdog::net::stream::Stream&gt;::project (5,639,420 samples, 0.02%)</title><rect x="65.3323%" y="517" width="0.0201%" height="15" fill="rgb(233,63,24)" fg:x="18311424920" fg:w="5639420"/><text x="65.5823%" y="527.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (22,309,032 samples, 0.08%)</title><rect x="65.3524%" y="549" width="0.0796%" height="15" fill="rgb(225,8,4)" fg:x="18317064340" fg:w="22309032"/><text x="65.6024%" y="559.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (22,309,032 samples, 0.08%)</title><rect x="65.3524%" y="533" width="0.0796%" height="15" fill="rgb(234,105,35)" fg:x="18317064340" fg:w="22309032"/><text x="65.6024%" y="543.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (22,309,032 samples, 0.08%)</title><rect x="65.3524%" y="517" width="0.0796%" height="15" fill="rgb(236,21,32)" fg:x="18317064340" fg:w="22309032"/><text x="65.6024%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (22,309,032 samples, 0.08%)</title><rect x="65.3524%" y="501" width="0.0796%" height="15" fill="rgb(228,109,6)" fg:x="18317064340" fg:w="22309032"/><text x="65.6024%" y="511.50"></text></g><g><title>&lt;tokio::io::util::read_int::ReadU8&lt;R&gt; as core::future::future::Future&gt;::poll (2,732,763,103 samples, 9.75%)</title><rect x="55.7017%" y="565" width="9.7501%" height="15" fill="rgb(229,215,31)" fg:x="15612155339" fg:w="2732763103"/><text x="55.9517%" y="575.50">&lt;tokio::io::ut..</text></g><g><title>tokio::io::read_buf::ReadBuf::new (5,545,070 samples, 0.02%)</title><rect x="65.4320%" y="549" width="0.0198%" height="15" fill="rgb(221,52,54)" fg:x="18339373372" fg:w="5545070"/><text x="65.6820%" y="559.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_i32 (3,991,912 samples, 0.01%)</title><rect x="65.4518%" y="565" width="0.0142%" height="15" fill="rgb(252,129,43)" fg:x="18344918442" fg:w="3991912"/><text x="65.7018%" y="575.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (3,991,912 samples, 0.01%)</title><rect x="65.4518%" y="549" width="0.0142%" height="15" fill="rgb(248,183,27)" fg:x="18344918442" fg:w="3991912"/><text x="65.7018%" y="559.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (3,991,912 samples, 0.01%)</title><rect x="65.4518%" y="533" width="0.0142%" height="15" fill="rgb(250,0,22)" fg:x="18344918442" fg:w="3991912"/><text x="65.7018%" y="543.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (20,488,266 samples, 0.07%)</title><rect x="65.4660%" y="565" width="0.0731%" height="15" fill="rgb(213,166,10)" fg:x="18348910354" fg:w="20488266"/><text x="65.7160%" y="575.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (20,488,266 samples, 0.07%)</title><rect x="65.4660%" y="549" width="0.0731%" height="15" fill="rgb(207,163,36)" fg:x="18348910354" fg:w="20488266"/><text x="65.7160%" y="559.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (20,488,266 samples, 0.07%)</title><rect x="65.4660%" y="533" width="0.0731%" height="15" fill="rgb(208,122,22)" fg:x="18348910354" fg:w="20488266"/><text x="65.7160%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20,488,266 samples, 0.07%)</title><rect x="65.4660%" y="517" width="0.0731%" height="15" fill="rgb(207,104,49)" fg:x="18348910354" fg:w="20488266"/><text x="65.7160%" y="527.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13,145,890 samples, 0.05%)</title><rect x="65.5458%" y="549" width="0.0469%" height="15" fill="rgb(248,211,50)" fg:x="18371276060" fg:w="13145890"/><text x="65.7958%" y="559.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (13,145,890 samples, 0.05%)</title><rect x="65.5458%" y="533" width="0.0469%" height="15" fill="rgb(217,13,45)" fg:x="18371276060" fg:w="13145890"/><text x="65.7958%" y="543.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt;::from (5,657,241 samples, 0.02%)</title><rect x="65.5725%" y="517" width="0.0202%" height="15" fill="rgb(211,216,49)" fg:x="18378764709" fg:w="5657241"/><text x="65.8225%" y="527.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (18,785,899 samples, 0.07%)</title><rect x="65.5391%" y="565" width="0.0670%" height="15" fill="rgb(221,58,53)" fg:x="18369398620" fg:w="18785899"/><text x="65.7891%" y="575.50"></text></g><g><title>bytes::bytes_mut::BytesMut::get_vec_pos (3,762,569 samples, 0.01%)</title><rect x="65.5927%" y="549" width="0.0134%" height="15" fill="rgb(220,112,41)" fg:x="18384421950" fg:w="3762569"/><text x="65.8427%" y="559.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (3,668,015 samples, 0.01%)</title><rect x="65.6061%" y="549" width="0.0131%" height="15" fill="rgb(236,38,28)" fg:x="18388184519" fg:w="3668015"/><text x="65.8561%" y="559.50"></text></g><g><title>bytes::bytes_mut::BytesMut::resize (40,389,287 samples, 0.14%)</title><rect x="65.6061%" y="565" width="0.1441%" height="15" fill="rgb(227,195,22)" fg:x="18388184519" fg:w="40389287"/><text x="65.8561%" y="575.50"></text></g><g><title>core::intrinsics::write_bytes (36,721,272 samples, 0.13%)</title><rect x="65.6192%" y="549" width="0.1310%" height="15" fill="rgb(214,55,33)" fg:x="18391852534" fg:w="36721272"/><text x="65.8692%" y="559.50"></text></g><g><title>[libc.so.6] (36,721,272 samples, 0.13%)</title><rect x="65.6192%" y="533" width="0.1310%" height="15" fill="rgb(248,80,13)" fg:x="18391852534" fg:w="36721272"/><text x="65.8692%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (79,990,203 samples, 0.29%)</title><rect x="65.7632%" y="469" width="0.2854%" height="15" fill="rgb(238,52,6)" fg:x="18432209824" fg:w="79990203"/><text x="66.0132%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (79,990,203 samples, 0.29%)</title><rect x="65.7632%" y="453" width="0.2854%" height="15" fill="rgb(224,198,47)" fg:x="18432209824" fg:w="79990203"/><text x="66.0132%" y="463.50"></text></g><g><title>alloc::alloc::alloc (79,990,203 samples, 0.29%)</title><rect x="65.7632%" y="437" width="0.2854%" height="15" fill="rgb(233,171,20)" fg:x="18432209824" fg:w="79990203"/><text x="66.0132%" y="447.50"></text></g><g><title>__rust_alloc (79,990,203 samples, 0.29%)</title><rect x="65.7632%" y="421" width="0.2854%" height="15" fill="rgb(241,30,25)" fg:x="18432209824" fg:w="79990203"/><text x="66.0132%" y="431.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (79,990,203 samples, 0.29%)</title><rect x="65.7632%" y="405" width="0.2854%" height="15" fill="rgb(207,171,38)" fg:x="18432209824" fg:w="79990203"/><text x="66.0132%" y="415.50"></text></g><g><title>_rjem_malloc (79,990,203 samples, 0.29%)</title><rect x="65.7632%" y="389" width="0.2854%" height="15" fill="rgb(234,70,1)" fg:x="18432209824" fg:w="79990203"/><text x="66.0132%" y="399.50"></text></g><g><title>imalloc_fastpath (79,990,203 samples, 0.29%)</title><rect x="65.7632%" y="373" width="0.2854%" height="15" fill="rgb(232,178,18)" fg:x="18432209824" fg:w="79990203"/><text x="66.0132%" y="383.50"></text></g><g><title>cache_bin_alloc_easy (27,949,069 samples, 0.10%)</title><rect x="65.9489%" y="357" width="0.0997%" height="15" fill="rgb(241,78,40)" fg:x="18484250958" fg:w="27949069"/><text x="66.1989%" y="367.50"></text></g><g><title>cache_bin_alloc_impl (27,949,069 samples, 0.10%)</title><rect x="65.9489%" y="341" width="0.0997%" height="15" fill="rgb(222,35,25)" fg:x="18484250958" fg:w="27949069"/><text x="66.1989%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (87,491,293 samples, 0.31%)</title><rect x="65.7502%" y="549" width="0.3122%" height="15" fill="rgb(207,92,16)" fg:x="18428573806" fg:w="87491293"/><text x="66.0002%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (87,491,293 samples, 0.31%)</title><rect x="65.7502%" y="533" width="0.3122%" height="15" fill="rgb(216,59,51)" fg:x="18428573806" fg:w="87491293"/><text x="66.0002%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (87,491,293 samples, 0.31%)</title><rect x="65.7502%" y="517" width="0.3122%" height="15" fill="rgb(213,80,28)" fg:x="18428573806" fg:w="87491293"/><text x="66.0002%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (87,491,293 samples, 0.31%)</title><rect x="65.7502%" y="501" width="0.3122%" height="15" fill="rgb(220,93,7)" fg:x="18428573806" fg:w="87491293"/><text x="66.0002%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (87,491,293 samples, 0.31%)</title><rect x="65.7502%" y="485" width="0.3122%" height="15" fill="rgb(225,24,44)" fg:x="18428573806" fg:w="87491293"/><text x="66.0002%" y="495.50"></text></g><g><title>alloc::raw_vec::layout_array (3,865,072 samples, 0.01%)</title><rect x="66.0486%" y="469" width="0.0138%" height="15" fill="rgb(243,74,40)" fg:x="18512200027" fg:w="3865072"/><text x="66.2986%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::repeat (3,865,072 samples, 0.01%)</title><rect x="66.0486%" y="453" width="0.0138%" height="15" fill="rgb(228,39,7)" fg:x="18512200027" fg:w="3865072"/><text x="66.2986%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (3,865,072 samples, 0.01%)</title><rect x="66.0486%" y="437" width="0.0138%" height="15" fill="rgb(227,79,8)" fg:x="18512200027" fg:w="3865072"/><text x="66.2986%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (3,865,072 samples, 0.01%)</title><rect x="66.0486%" y="421" width="0.0138%" height="15" fill="rgb(236,58,11)" fg:x="18512200027" fg:w="3865072"/><text x="66.2986%" y="431.50"></text></g><g><title>core::intrinsics::unlikely (3,865,072 samples, 0.01%)</title><rect x="66.0486%" y="405" width="0.0138%" height="15" fill="rgb(249,63,35)" fg:x="18512200027" fg:w="3865072"/><text x="66.2986%" y="415.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (91,179,695 samples, 0.33%)</title><rect x="65.7502%" y="565" width="0.3253%" height="15" fill="rgb(252,114,16)" fg:x="18428573806" fg:w="91179695"/><text x="66.0002%" y="575.50"></text></g><g><title>bytes::bytes_mut::BytesMut::from_vec (3,688,402 samples, 0.01%)</title><rect x="66.0624%" y="549" width="0.0132%" height="15" fill="rgb(254,151,24)" fg:x="18516065099" fg:w="3688402"/><text x="66.3124%" y="559.50"></text></g><g><title>pgdog::net::stream::Stream::read::_{{closure}} (3,213,879,496 samples, 11.47%)</title><rect x="54.6423%" y="581" width="11.4666%" height="15" fill="rgb(253,54,39)" fg:x="15315232170" fg:w="3213879496"/><text x="54.8923%" y="591.50">pgdog::net::strea..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (9,358,165 samples, 0.03%)</title><rect x="66.0755%" y="565" width="0.0334%" height="15" fill="rgb(243,25,45)" fg:x="18519753501" fg:w="9358165"/><text x="66.3255%" y="575.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (9,358,165 samples, 0.03%)</title><rect x="66.0755%" y="549" width="0.0334%" height="15" fill="rgb(234,134,9)" fg:x="18519753501" fg:w="9358165"/><text x="66.3255%" y="559.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (9,358,165 samples, 0.03%)</title><rect x="66.0755%" y="533" width="0.0334%" height="15" fill="rgb(227,166,31)" fg:x="18519753501" fg:w="9358165"/><text x="66.3255%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (9,358,165 samples, 0.03%)</title><rect x="66.0755%" y="517" width="0.0334%" height="15" fill="rgb(245,143,41)" fg:x="18519753501" fg:w="9358165"/><text x="66.3255%" y="527.50"></text></g><g><title>clock_gettime (95,014,478 samples, 0.34%)</title><rect x="66.1153%" y="533" width="0.3390%" height="15" fill="rgb(238,181,32)" fg:x="18530893436" fg:w="95014478"/><text x="66.3653%" y="543.50"></text></g><g><title>__vdso_clock_gettime (93,227,882 samples, 0.33%)</title><rect x="66.1217%" y="517" width="0.3326%" height="15" fill="rgb(224,113,18)" fg:x="18532680032" fg:w="93227882"/><text x="66.3717%" y="527.50"></text></g><g><title>std::time::Instant::now (98,609,541 samples, 0.35%)</title><rect x="66.1089%" y="581" width="0.3518%" height="15" fill="rgb(240,229,28)" fg:x="18529111666" fg:w="98609541"/><text x="66.3589%" y="591.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (98,609,541 samples, 0.35%)</title><rect x="66.1089%" y="565" width="0.3518%" height="15" fill="rgb(250,185,3)" fg:x="18529111666" fg:w="98609541"/><text x="66.3589%" y="575.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (98,609,541 samples, 0.35%)</title><rect x="66.1089%" y="549" width="0.3518%" height="15" fill="rgb(212,59,25)" fg:x="18529111666" fg:w="98609541"/><text x="66.3589%" y="559.50"></text></g><g><title>pgdog::backend::server::Server::read::_{{closure}} (4,286,189,770 samples, 15.29%)</title><rect x="51.1810%" y="597" width="15.2924%" height="15" fill="rgb(221,87,20)" fg:x="14345096954" fg:w="4286189770"/><text x="51.4310%" y="607.50">pgdog::backend::server:..</text></g><g><title>tracing_core::metadata::LevelFilter::current (3,565,517 samples, 0.01%)</title><rect x="66.4608%" y="581" width="0.0127%" height="15" fill="rgb(213,74,28)" fg:x="18627721207" fg:w="3565517"/><text x="66.7108%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3,565,517 samples, 0.01%)</title><rect x="66.4608%" y="565" width="0.0127%" height="15" fill="rgb(224,132,34)" fg:x="18627721207" fg:w="3565517"/><text x="66.7108%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (3,565,517 samples, 0.01%)</title><rect x="66.4608%" y="549" width="0.0127%" height="15" fill="rgb(222,101,24)" fg:x="18627721207" fg:w="3565517"/><text x="66.7108%" y="559.50"></text></g><g><title>clock_gettime (17,510,987 samples, 0.06%)</title><rect x="66.4874%" y="485" width="0.0625%" height="15" fill="rgb(254,142,4)" fg:x="18635176366" fg:w="17510987"/><text x="66.7374%" y="495.50"></text></g><g><title>__vdso_clock_gettime (17,510,987 samples, 0.06%)</title><rect x="66.4874%" y="469" width="0.0625%" height="15" fill="rgb(230,229,49)" fg:x="18635176366" fg:w="17510987"/><text x="66.7374%" y="479.50"></text></g><g><title>tokio::time::instant::Instant::far_future (19,340,932 samples, 0.07%)</title><rect x="66.4874%" y="581" width="0.0690%" height="15" fill="rgb(238,70,47)" fg:x="18635176366" fg:w="19340932"/><text x="66.7374%" y="591.50"></text></g><g><title>tokio::time::instant::Instant::now (19,340,932 samples, 0.07%)</title><rect x="66.4874%" y="565" width="0.0690%" height="15" fill="rgb(231,160,17)" fg:x="18635176366" fg:w="19340932"/><text x="66.7374%" y="575.50"></text></g><g><title>tokio::time::instant::variant::now (19,340,932 samples, 0.07%)</title><rect x="66.4874%" y="549" width="0.0690%" height="15" fill="rgb(218,68,53)" fg:x="18635176366" fg:w="19340932"/><text x="66.7374%" y="559.50"></text></g><g><title>std::time::Instant::now (19,340,932 samples, 0.07%)</title><rect x="66.4874%" y="533" width="0.0690%" height="15" fill="rgb(236,111,10)" fg:x="18635176366" fg:w="19340932"/><text x="66.7374%" y="543.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (19,340,932 samples, 0.07%)</title><rect x="66.4874%" y="517" width="0.0690%" height="15" fill="rgb(224,34,41)" fg:x="18635176366" fg:w="19340932"/><text x="66.7374%" y="527.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (19,340,932 samples, 0.07%)</title><rect x="66.4874%" y="501" width="0.0690%" height="15" fill="rgb(241,118,19)" fg:x="18635176366" fg:w="19340932"/><text x="66.7374%" y="511.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::read::_{{closure}} (4,592,854,256 samples, 16.39%)</title><rect x="50.2245%" y="629" width="16.3866%" height="15" fill="rgb(238,129,25)" fg:x="14076995416" fg:w="4592854256"/><text x="50.4745%" y="639.50">pgdog::backend::pool::con..</text></g><g><title>pgdog::backend::pool::connection::binding::Binding::read::_{{closure}} (4,480,036,643 samples, 15.98%)</title><rect x="50.6270%" y="613" width="15.9841%" height="15" fill="rgb(238,22,31)" fg:x="14189813029" fg:w="4480036643"/><text x="50.8770%" y="623.50">pgdog::backend::pool::con..</text></g><g><title>tokio::time::sleep::sleep (38,562,948 samples, 0.14%)</title><rect x="66.4735%" y="597" width="0.1376%" height="15" fill="rgb(222,174,48)" fg:x="18631286724" fg:w="38562948"/><text x="66.7235%" y="607.50"></text></g><g><title>tokio::time::instant::Instant::now (15,332,374 samples, 0.05%)</title><rect x="66.5564%" y="581" width="0.0547%" height="15" fill="rgb(206,152,40)" fg:x="18654517298" fg:w="15332374"/><text x="66.8064%" y="591.50"></text></g><g><title>tokio::time::instant::variant::now (15,332,374 samples, 0.05%)</title><rect x="66.5564%" y="565" width="0.0547%" height="15" fill="rgb(218,99,54)" fg:x="18654517298" fg:w="15332374"/><text x="66.8064%" y="575.50"></text></g><g><title>std::time::Instant::now (15,332,374 samples, 0.05%)</title><rect x="66.5564%" y="549" width="0.0547%" height="15" fill="rgb(220,174,26)" fg:x="18654517298" fg:w="15332374"/><text x="66.8064%" y="559.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (15,332,374 samples, 0.05%)</title><rect x="66.5564%" y="533" width="0.0547%" height="15" fill="rgb(245,116,9)" fg:x="18654517298" fg:w="15332374"/><text x="66.8064%" y="543.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (15,332,374 samples, 0.05%)</title><rect x="66.5564%" y="517" width="0.0547%" height="15" fill="rgb(209,72,35)" fg:x="18654517298" fg:w="15332374"/><text x="66.8064%" y="527.50"></text></g><g><title>clock_gettime (15,332,374 samples, 0.05%)</title><rect x="66.5564%" y="501" width="0.0547%" height="15" fill="rgb(226,126,21)" fg:x="18654517298" fg:w="15332374"/><text x="66.8064%" y="511.50"></text></g><g><title>__vdso_clock_gettime (15,332,374 samples, 0.05%)</title><rect x="66.5564%" y="485" width="0.0547%" height="15" fill="rgb(227,192,1)" fg:x="18654517298" fg:w="15332374"/><text x="66.8064%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (5,852,576 samples, 0.02%)</title><rect x="66.6111%" y="613" width="0.0209%" height="15" fill="rgb(237,180,29)" fg:x="18669849672" fg:w="5852576"/><text x="66.8611%" y="623.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (4,726,061,088 samples, 16.86%)</title><rect x="49.7766%" y="645" width="16.8618%" height="15" fill="rgb(230,197,35)" fg:x="13951473449" fg:w="4726061088"/><text x="50.0266%" y="655.50">&lt;tokio::time::timeout::Tim..</text></g><g><title>tokio::runtime::coop::has_budget_remaining (7,684,865 samples, 0.03%)</title><rect x="66.6111%" y="629" width="0.0274%" height="15" fill="rgb(246,193,31)" fg:x="18669849672" fg:w="7684865"/><text x="66.8611%" y="639.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (16,663,988 samples, 0.06%)</title><rect x="67.0081%" y="629" width="0.0595%" height="15" fill="rgb(241,36,4)" fg:x="18781146057" fg:w="16663988"/><text x="67.2581%" y="639.50"></text></g><g><title>&lt;pgdog::net::messages::bind::Bind as pgdog::net::messages::FromBytes&gt;::from_bytes::_{{closure}} (9,514,573 samples, 0.03%)</title><rect x="67.1982%" y="437" width="0.0339%" height="15" fill="rgb(241,130,17)" fg:x="18834401409" fg:w="9514573"/><text x="67.4482%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,711,782 samples, 0.01%)</title><rect x="67.2189%" y="421" width="0.0132%" height="15" fill="rgb(206,137,32)" fg:x="18840204200" fg:w="3711782"/><text x="67.4689%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3,711,782 samples, 0.01%)</title><rect x="67.2189%" y="405" width="0.0132%" height="15" fill="rgb(237,228,51)" fg:x="18840204200" fg:w="3711782"/><text x="67.4689%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3,711,782 samples, 0.01%)</title><rect x="67.2189%" y="389" width="0.0132%" height="15" fill="rgb(243,6,42)" fg:x="18840204200" fg:w="3711782"/><text x="67.4689%" y="399.50"></text></g><g><title>&lt;pgdog::net::messages::bind::Bind as pgdog::net::messages::FromBytes&gt;::from_bytes::_{{closure}}::_{{closure}} (3,711,782 samples, 0.01%)</title><rect x="67.2189%" y="373" width="0.0132%" height="15" fill="rgb(251,74,28)" fg:x="18840204200" fg:w="3711782"/><text x="67.4689%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9,556,407 samples, 0.03%)</title><rect x="67.1982%" y="597" width="0.0341%" height="15" fill="rgb(218,20,49)" fg:x="18834401409" fg:w="9556407"/><text x="67.4482%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9,556,407 samples, 0.03%)</title><rect x="67.1982%" y="581" width="0.0341%" height="15" fill="rgb(238,28,14)" fg:x="18834401409" fg:w="9556407"/><text x="67.4482%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9,556,407 samples, 0.03%)</title><rect x="67.1982%" y="565" width="0.0341%" height="15" fill="rgb(229,40,46)" fg:x="18834401409" fg:w="9556407"/><text x="67.4482%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9,556,407 samples, 0.03%)</title><rect x="67.1982%" y="549" width="0.0341%" height="15" fill="rgb(244,195,20)" fg:x="18834401409" fg:w="9556407"/><text x="67.4482%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9,556,407 samples, 0.03%)</title><rect x="67.1982%" y="533" width="0.0341%" height="15" fill="rgb(253,56,35)" fg:x="18834401409" fg:w="9556407"/><text x="67.4482%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (9,556,407 samples, 0.03%)</title><rect x="67.1982%" y="517" width="0.0341%" height="15" fill="rgb(210,149,44)" fg:x="18834401409" fg:w="9556407"/><text x="67.4482%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9,556,407 samples, 0.03%)</title><rect x="67.1982%" y="501" width="0.0341%" height="15" fill="rgb(240,135,12)" fg:x="18834401409" fg:w="9556407"/><text x="67.4482%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9,556,407 samples, 0.03%)</title><rect x="67.1982%" y="485" width="0.0341%" height="15" fill="rgb(251,24,50)" fg:x="18834401409" fg:w="9556407"/><text x="67.4482%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9,556,407 samples, 0.03%)</title><rect x="67.1982%" y="469" width="0.0341%" height="15" fill="rgb(243,200,47)" fg:x="18834401409" fg:w="9556407"/><text x="67.4482%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (9,556,407 samples, 0.03%)</title><rect x="67.1982%" y="453" width="0.0341%" height="15" fill="rgb(224,166,26)" fg:x="18834401409" fg:w="9556407"/><text x="67.4482%" y="463.50"></text></g><g><title>&lt;pgdog::net::messages::bind::Bind as pgdog::net::messages::FromBytes&gt;::from_bytes (32,788,392 samples, 0.12%)</title><rect x="67.1488%" y="613" width="0.1170%" height="15" fill="rgb(233,0,47)" fg:x="18820558298" fg:w="32788392"/><text x="67.3988%" y="623.50"></text></g><g><title>pgdog::net::c_string_buf (7,646,783 samples, 0.03%)</title><rect x="67.2385%" y="597" width="0.0273%" height="15" fill="rgb(253,80,5)" fg:x="18845699907" fg:w="7646783"/><text x="67.4885%" y="607.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (3,786,486 samples, 0.01%)</title><rect x="67.2866%" y="597" width="0.0135%" height="15" fill="rgb(214,133,25)" fg:x="18859196023" fg:w="3786486"/><text x="67.5366%" y="607.50"></text></g><g><title>&lt;pgdog::net::messages::describe::Describe as pgdog::net::messages::FromBytes&gt;::from_bytes (11,385,467 samples, 0.04%)</title><rect x="67.2730%" y="613" width="0.0406%" height="15" fill="rgb(209,27,14)" fg:x="18855377514" fg:w="11385467"/><text x="67.5230%" y="623.50"></text></g><g><title>pgdog::net::c_string_buf (3,780,472 samples, 0.01%)</title><rect x="67.3001%" y="597" width="0.0135%" height="15" fill="rgb(219,102,51)" fg:x="18862982509" fg:w="3780472"/><text x="67.5501%" y="607.50"></text></g><g><title>alloc::string::String::with_capacity (3,780,472 samples, 0.01%)</title><rect x="67.3001%" y="581" width="0.0135%" height="15" fill="rgb(237,18,16)" fg:x="18862982509" fg:w="3780472"/><text x="67.5501%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,780,472 samples, 0.01%)</title><rect x="67.3001%" y="565" width="0.0135%" height="15" fill="rgb(241,85,17)" fg:x="18862982509" fg:w="3780472"/><text x="67.5501%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,780,472 samples, 0.01%)</title><rect x="67.3001%" y="549" width="0.0135%" height="15" fill="rgb(236,90,42)" fg:x="18862982509" fg:w="3780472"/><text x="67.5501%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,780,472 samples, 0.01%)</title><rect x="67.3001%" y="533" width="0.0135%" height="15" fill="rgb(249,57,21)" fg:x="18862982509" fg:w="3780472"/><text x="67.5501%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,780,472 samples, 0.01%)</title><rect x="67.3001%" y="517" width="0.0135%" height="15" fill="rgb(243,12,36)" fg:x="18862982509" fg:w="3780472"/><text x="67.5501%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,780,472 samples, 0.01%)</title><rect x="67.3001%" y="501" width="0.0135%" height="15" fill="rgb(253,128,47)" fg:x="18862982509" fg:w="3780472"/><text x="67.5501%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,780,472 samples, 0.01%)</title><rect x="67.3001%" y="485" width="0.0135%" height="15" fill="rgb(207,33,20)" fg:x="18862982509" fg:w="3780472"/><text x="67.5501%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,780,472 samples, 0.01%)</title><rect x="67.3001%" y="469" width="0.0135%" height="15" fill="rgb(233,215,35)" fg:x="18862982509" fg:w="3780472"/><text x="67.5501%" y="479.50"></text></g><g><title>alloc::alloc::alloc (3,780,472 samples, 0.01%)</title><rect x="67.3001%" y="453" width="0.0135%" height="15" fill="rgb(249,188,52)" fg:x="18862982509" fg:w="3780472"/><text x="67.5501%" y="463.50"></text></g><g><title>__rust_alloc (3,780,472 samples, 0.01%)</title><rect x="67.3001%" y="437" width="0.0135%" height="15" fill="rgb(225,12,32)" fg:x="18862982509" fg:w="3780472"/><text x="67.5501%" y="447.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3,780,472 samples, 0.01%)</title><rect x="67.3001%" y="421" width="0.0135%" height="15" fill="rgb(247,98,14)" fg:x="18862982509" fg:w="3780472"/><text x="67.5501%" y="431.50"></text></g><g><title>_rjem_malloc (3,780,472 samples, 0.01%)</title><rect x="67.3001%" y="405" width="0.0135%" height="15" fill="rgb(247,219,48)" fg:x="18862982509" fg:w="3780472"/><text x="67.5501%" y="415.50"></text></g><g><title>imalloc_fastpath (3,780,472 samples, 0.01%)</title><rect x="67.3001%" y="389" width="0.0135%" height="15" fill="rgb(253,60,48)" fg:x="18862982509" fg:w="3780472"/><text x="67.5501%" y="399.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3,662,753 samples, 0.01%)</title><rect x="67.3136%" y="597" width="0.0131%" height="15" fill="rgb(245,15,52)" fg:x="18866762981" fg:w="3662753"/><text x="67.5636%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3,662,753 samples, 0.01%)</title><rect x="67.3136%" y="581" width="0.0131%" height="15" fill="rgb(220,133,28)" fg:x="18866762981" fg:w="3662753"/><text x="67.5636%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (3,662,753 samples, 0.01%)</title><rect x="67.3136%" y="565" width="0.0131%" height="15" fill="rgb(217,180,4)" fg:x="18866762981" fg:w="3662753"/><text x="67.5636%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,662,753 samples, 0.01%)</title><rect x="67.3136%" y="549" width="0.0131%" height="15" fill="rgb(251,24,1)" fg:x="18866762981" fg:w="3662753"/><text x="67.5636%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,662,753 samples, 0.01%)</title><rect x="67.3136%" y="533" width="0.0131%" height="15" fill="rgb(212,185,49)" fg:x="18866762981" fg:w="3662753"/><text x="67.5636%" y="543.50"></text></g><g><title>alloc::alloc::alloc (3,662,753 samples, 0.01%)</title><rect x="67.3136%" y="517" width="0.0131%" height="15" fill="rgb(215,175,22)" fg:x="18866762981" fg:w="3662753"/><text x="67.5636%" y="527.50"></text></g><g><title>__rust_alloc (3,662,753 samples, 0.01%)</title><rect x="67.3136%" y="501" width="0.0131%" height="15" fill="rgb(250,205,14)" fg:x="18866762981" fg:w="3662753"/><text x="67.5636%" y="511.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3,662,753 samples, 0.01%)</title><rect x="67.3136%" y="485" width="0.0131%" height="15" fill="rgb(225,211,22)" fg:x="18866762981" fg:w="3662753"/><text x="67.5636%" y="495.50"></text></g><g><title>_rjem_malloc (3,662,753 samples, 0.01%)</title><rect x="67.3136%" y="469" width="0.0131%" height="15" fill="rgb(251,179,42)" fg:x="18866762981" fg:w="3662753"/><text x="67.5636%" y="479.50"></text></g><g><title>imalloc_fastpath (3,662,753 samples, 0.01%)</title><rect x="67.3136%" y="453" width="0.0131%" height="15" fill="rgb(208,216,51)" fg:x="18866762981" fg:w="3662753"/><text x="67.5636%" y="463.50"></text></g><g><title>&lt;pgdog::net::messages::parse::Parse as pgdog::net::messages::FromBytes&gt;::from_bytes (5,479,123 samples, 0.02%)</title><rect x="67.3136%" y="613" width="0.0195%" height="15" fill="rgb(235,36,11)" fg:x="18866762981" fg:w="5479123"/><text x="67.5636%" y="623.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (5,535,030 samples, 0.02%)</title><rect x="67.3332%" y="597" width="0.0197%" height="15" fill="rgb(213,189,28)" fg:x="18872242104" fg:w="5535030"/><text x="67.5832%" y="607.50"></text></g><g><title>&lt;bytes::bytes::Bytes as bytes::buf::buf_impl::Buf&gt;::advance (3,755,459 samples, 0.01%)</title><rect x="67.3395%" y="581" width="0.0134%" height="15" fill="rgb(227,203,42)" fg:x="18874021675" fg:w="3755459"/><text x="67.5895%" y="591.50"></text></g><g><title>bytes::bytes::Bytes::inc_start (3,755,459 samples, 0.01%)</title><rect x="67.3395%" y="565" width="0.0134%" height="15" fill="rgb(244,72,36)" fg:x="18874021675" fg:w="3755459"/><text x="67.5895%" y="575.50"></text></g><g><title>&lt;pgdog::net::messages::sync::Sync as pgdog::net::messages::FromBytes&gt;::from_bytes (9,129,278 samples, 0.03%)</title><rect x="67.3332%" y="613" width="0.0326%" height="15" fill="rgb(213,53,17)" fg:x="18872242104" fg:w="9129278"/><text x="67.5832%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (3,594,248 samples, 0.01%)</title><rect x="67.3529%" y="597" width="0.0128%" height="15" fill="rgb(207,167,3)" fg:x="18877777134" fg:w="3594248"/><text x="67.6029%" y="607.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (3,594,248 samples, 0.01%)</title><rect x="67.3529%" y="581" width="0.0128%" height="15" fill="rgb(216,98,30)" fg:x="18877777134" fg:w="3594248"/><text x="67.6029%" y="591.50"></text></g><g><title>bytes::bytes::shared_drop (3,594,248 samples, 0.01%)</title><rect x="67.3529%" y="565" width="0.0128%" height="15" fill="rgb(236,123,15)" fg:x="18877777134" fg:w="3594248"/><text x="67.6029%" y="575.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (5,592,887 samples, 0.02%)</title><rect x="67.3657%" y="613" width="0.0200%" height="15" fill="rgb(248,81,50)" fg:x="18881371382" fg:w="5592887"/><text x="67.6157%" y="623.50"></text></g><g><title>&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage as pgdog::net::messages::FromBytes&gt;::from_bytes (91,060,844 samples, 0.32%)</title><rect x="67.0676%" y="629" width="0.3249%" height="15" fill="rgb(214,120,4)" fg:x="18797810045" fg:w="91060844"/><text x="67.3176%" y="639.50"></text></g><g><title>&lt;pgdog::net::messages::Message as pgdog::net::messages::Protocol&gt;::code (3,849,852 samples, 0.01%)</title><rect x="67.3925%" y="629" width="0.0137%" height="15" fill="rgb(208,179,34)" fg:x="18888870889" fg:w="3849852"/><text x="67.6425%" y="639.50"></text></g><g><title>&lt;pgdog::net::messages::Message as pgdog::net::messages::ToBytes&gt;::to_bytes (27,186,750 samples, 0.10%)</title><rect x="67.4062%" y="629" width="0.0970%" height="15" fill="rgb(227,140,7)" fg:x="18892720741" fg:w="27186750"/><text x="67.6562%" y="639.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (27,186,750 samples, 0.10%)</title><rect x="67.4062%" y="613" width="0.0970%" height="15" fill="rgb(214,22,6)" fg:x="18892720741" fg:w="27186750"/><text x="67.6562%" y="623.50"></text></g><g><title>bytes::bytes::promotable_even_clone (27,186,750 samples, 0.10%)</title><rect x="67.4062%" y="597" width="0.0970%" height="15" fill="rgb(207,137,27)" fg:x="18892720741" fg:w="27186750"/><text x="67.6562%" y="607.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (22,719,187 samples, 0.08%)</title><rect x="67.4222%" y="581" width="0.0811%" height="15" fill="rgb(210,8,46)" fg:x="18897188304" fg:w="22719187"/><text x="67.6722%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13,262,968 samples, 0.05%)</title><rect x="67.4559%" y="565" width="0.0473%" height="15" fill="rgb(240,16,54)" fg:x="18906644523" fg:w="13262968"/><text x="67.7059%" y="575.50"></text></g><g><title>alloc::alloc::exchange_malloc (13,262,968 samples, 0.05%)</title><rect x="67.4559%" y="549" width="0.0473%" height="15" fill="rgb(211,209,29)" fg:x="18906644523" fg:w="13262968"/><text x="67.7059%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13,262,968 samples, 0.05%)</title><rect x="67.4559%" y="533" width="0.0473%" height="15" fill="rgb(226,228,24)" fg:x="18906644523" fg:w="13262968"/><text x="67.7059%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13,262,968 samples, 0.05%)</title><rect x="67.4559%" y="517" width="0.0473%" height="15" fill="rgb(222,84,9)" fg:x="18906644523" fg:w="13262968"/><text x="67.7059%" y="527.50"></text></g><g><title>alloc::alloc::alloc (13,262,968 samples, 0.05%)</title><rect x="67.4559%" y="501" width="0.0473%" height="15" fill="rgb(234,203,30)" fg:x="18906644523" fg:w="13262968"/><text x="67.7059%" y="511.50"></text></g><g><title>__rust_alloc (13,262,968 samples, 0.05%)</title><rect x="67.4559%" y="485" width="0.0473%" height="15" fill="rgb(238,109,14)" fg:x="18906644523" fg:w="13262968"/><text x="67.7059%" y="495.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13,262,968 samples, 0.05%)</title><rect x="67.4559%" y="469" width="0.0473%" height="15" fill="rgb(233,206,34)" fg:x="18906644523" fg:w="13262968"/><text x="67.7059%" y="479.50"></text></g><g><title>_rjem_malloc (13,262,968 samples, 0.05%)</title><rect x="67.4559%" y="453" width="0.0473%" height="15" fill="rgb(220,167,47)" fg:x="18906644523" fg:w="13262968"/><text x="67.7059%" y="463.50"></text></g><g><title>imalloc_fastpath (13,262,968 samples, 0.05%)</title><rect x="67.4559%" y="437" width="0.0473%" height="15" fill="rgb(238,105,10)" fg:x="18906644523" fg:w="13262968"/><text x="67.7059%" y="447.50"></text></g><g><title>cache_bin_alloc_easy (5,789,157 samples, 0.02%)</title><rect x="67.4826%" y="421" width="0.0207%" height="15" fill="rgb(213,227,17)" fg:x="18914118334" fg:w="5789157"/><text x="67.7326%" y="431.50"></text></g><g><title>cache_bin_alloc_impl (5,789,157 samples, 0.02%)</title><rect x="67.4826%" y="405" width="0.0207%" height="15" fill="rgb(217,132,38)" fg:x="18914118334" fg:w="5789157"/><text x="67.7326%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (48,528,850 samples, 0.17%)</title><rect x="67.5098%" y="629" width="0.1731%" height="15" fill="rgb(242,146,4)" fg:x="18921758536" fg:w="48528850"/><text x="67.7598%" y="639.50"></text></g><g><title>core::ptr::write (44,905,341 samples, 0.16%)</title><rect x="67.5228%" y="613" width="0.1602%" height="15" fill="rgb(212,61,9)" fg:x="18925382045" fg:w="44905341"/><text x="67.7728%" y="623.50"></text></g><g><title>[libc.so.6] (44,905,341 samples, 0.16%)</title><rect x="67.5228%" y="597" width="0.1602%" height="15" fill="rgb(247,126,22)" fg:x="18925382045" fg:w="44905341"/><text x="67.7728%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;pgdog::config::ConfigAndUsers&gt;&gt; (11,193,762 samples, 0.04%)</title><rect x="67.6830%" y="629" width="0.0399%" height="15" fill="rgb(220,196,2)" fg:x="18970287386" fg:w="11193762"/><text x="67.9330%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,193,762 samples, 0.04%)</title><rect x="67.6830%" y="613" width="0.0399%" height="15" fill="rgb(208,46,4)" fg:x="18970287386" fg:w="11193762"/><text x="67.9330%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9,280,035 samples, 0.03%)</title><rect x="67.6898%" y="597" width="0.0331%" height="15" fill="rgb(252,104,46)" fg:x="18972201113" fg:w="9280035"/><text x="67.9398%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (9,280,035 samples, 0.03%)</title><rect x="67.6898%" y="581" width="0.0331%" height="15" fill="rgb(237,152,48)" fg:x="18972201113" fg:w="9280035"/><text x="67.9398%" y="591.50"></text></g><g><title>[unknown] (3,871,712 samples, 0.01%)</title><rect x="67.7557%" y="549" width="0.0138%" height="15" fill="rgb(221,59,37)" fg:x="18990668775" fg:w="3871712"/><text x="68.0057%" y="559.50"></text></g><g><title>[unknown] (3,871,712 samples, 0.01%)</title><rect x="67.7557%" y="533" width="0.0138%" height="15" fill="rgb(209,202,51)" fg:x="18990668775" fg:w="3871712"/><text x="68.0057%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::messages::Message&gt; (15,075,993 samples, 0.05%)</title><rect x="67.7229%" y="629" width="0.0538%" height="15" fill="rgb(228,81,30)" fg:x="18981481148" fg:w="15075993"/><text x="67.9729%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (15,075,993 samples, 0.05%)</title><rect x="67.7229%" y="613" width="0.0538%" height="15" fill="rgb(227,42,39)" fg:x="18981481148" fg:w="15075993"/><text x="67.9729%" y="623.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (15,075,993 samples, 0.05%)</title><rect x="67.7229%" y="597" width="0.0538%" height="15" fill="rgb(221,26,2)" fg:x="18981481148" fg:w="15075993"/><text x="67.9729%" y="607.50"></text></g><g><title>bytes::bytes::promotable_even_drop (7,712,537 samples, 0.03%)</title><rect x="67.7492%" y="581" width="0.0275%" height="15" fill="rgb(254,61,31)" fg:x="18988844604" fg:w="7712537"/><text x="67.9992%" y="591.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (7,712,537 samples, 0.03%)</title><rect x="67.7492%" y="565" width="0.0275%" height="15" fill="rgb(222,173,38)" fg:x="18988844604" fg:w="7712537"/><text x="67.9992%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (14,899,307 samples, 0.05%)</title><rect x="67.7900%" y="613" width="0.0532%" height="15" fill="rgb(218,50,12)" fg:x="19000293075" fg:w="14899307"/><text x="68.0400%" y="623.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (5,365,079 samples, 0.02%)</title><rect x="67.8432%" y="613" width="0.0191%" height="15" fill="rgb(223,88,40)" fg:x="19015192382" fg:w="5365079"/><text x="68.0932%" y="623.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (5,365,079 samples, 0.02%)</title><rect x="67.8432%" y="597" width="0.0191%" height="15" fill="rgb(237,54,19)" fg:x="19015192382" fg:w="5365079"/><text x="68.0932%" y="607.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (5,365,079 samples, 0.02%)</title><rect x="67.8432%" y="581" width="0.0191%" height="15" fill="rgb(251,129,25)" fg:x="19015192382" fg:w="5365079"/><text x="68.0932%" y="591.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (5,365,079 samples, 0.02%)</title><rect x="67.8432%" y="565" width="0.0191%" height="15" fill="rgb(238,97,19)" fg:x="19015192382" fg:w="5365079"/><text x="68.0932%" y="575.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (5,365,079 samples, 0.02%)</title><rect x="67.8432%" y="549" width="0.0191%" height="15" fill="rgb(240,169,18)" fg:x="19015192382" fg:w="5365079"/><text x="68.0932%" y="559.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (5,365,079 samples, 0.02%)</title><rect x="67.8432%" y="533" width="0.0191%" height="15" fill="rgb(230,187,49)" fg:x="19015192382" fg:w="5365079"/><text x="68.0932%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (3,583,432 samples, 0.01%)</title><rect x="67.8495%" y="517" width="0.0128%" height="15" fill="rgb(209,44,26)" fg:x="19016974029" fg:w="3583432"/><text x="68.0995%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (3,583,432 samples, 0.01%)</title><rect x="67.8495%" y="501" width="0.0128%" height="15" fill="rgb(244,0,6)" fg:x="19016974029" fg:w="3583432"/><text x="68.0995%" y="511.50"></text></g><g><title>arc_swap::debt::fast::Slots::get_debt (5,692,291 samples, 0.02%)</title><rect x="67.8902%" y="485" width="0.0203%" height="15" fill="rgb(248,18,21)" fg:x="19028361438" fg:w="5692291"/><text x="68.1402%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (5,645,211 samples, 0.02%)</title><rect x="67.9105%" y="485" width="0.0201%" height="15" fill="rgb(245,180,19)" fg:x="19034053729" fg:w="5645211"/><text x="68.1605%" y="495.50"></text></g><g><title>arc_swap::debt::list::LocalNode::new_fast (15,227,899 samples, 0.05%)</title><rect x="67.8902%" y="501" width="0.0543%" height="15" fill="rgb(252,118,36)" fg:x="19028361438" fg:w="15227899"/><text x="68.1402%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (3,890,397 samples, 0.01%)</title><rect x="67.9306%" y="485" width="0.0139%" height="15" fill="rgb(210,224,19)" fg:x="19039698940" fg:w="3890397"/><text x="68.1806%" y="495.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::_{{closure}} (26,658,754 samples, 0.10%)</title><rect x="67.8623%" y="549" width="0.0951%" height="15" fill="rgb(218,30,24)" fg:x="19020557461" fg:w="26658754"/><text x="68.1123%" y="559.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load::_{{closure}} (24,624,421 samples, 0.09%)</title><rect x="67.8696%" y="533" width="0.0879%" height="15" fill="rgb(219,75,50)" fg:x="19022591794" fg:w="24624421"/><text x="68.1196%" y="543.50"></text></g><g><title>arc_swap::strategy::hybrid::HybridProtection&lt;T&gt;::attempt (20,832,353 samples, 0.07%)</title><rect x="67.8831%" y="517" width="0.0743%" height="15" fill="rgb(234,72,50)" fg:x="19026383862" fg:w="20832353"/><text x="68.1331%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (3,626,878 samples, 0.01%)</title><rect x="67.9445%" y="501" width="0.0129%" height="15" fill="rgb(219,100,48)" fg:x="19043589337" fg:w="3626878"/><text x="68.1945%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (3,626,878 samples, 0.01%)</title><rect x="67.9445%" y="485" width="0.0129%" height="15" fill="rgb(253,5,41)" fg:x="19043589337" fg:w="3626878"/><text x="68.1945%" y="495.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load (28,489,719 samples, 0.10%)</title><rect x="67.8623%" y="613" width="0.1016%" height="15" fill="rgb(247,181,11)" fg:x="19020557461" fg:w="28489719"/><text x="68.1123%" y="623.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load (28,489,719 samples, 0.10%)</title><rect x="67.8623%" y="597" width="0.1016%" height="15" fill="rgb(222,223,25)" fg:x="19020557461" fg:w="28489719"/><text x="68.1123%" y="607.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (28,489,719 samples, 0.10%)</title><rect x="67.8623%" y="581" width="0.1016%" height="15" fill="rgb(214,198,28)" fg:x="19020557461" fg:w="28489719"/><text x="68.1123%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (28,489,719 samples, 0.10%)</title><rect x="67.8623%" y="565" width="0.1016%" height="15" fill="rgb(230,46,43)" fg:x="19020557461" fg:w="28489719"/><text x="68.1123%" y="575.50"></text></g><g><title>pgdog::config::config (56,247,790 samples, 0.20%)</title><rect x="67.7900%" y="629" width="0.2007%" height="15" fill="rgb(233,65,53)" fg:x="19000293075" fg:w="56247790"/><text x="68.0400%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;arc_swap::Guard&lt;alloc::sync::Arc&lt;pgdog::config::ConfigAndUsers&gt;&gt;&gt; (7,493,685 samples, 0.03%)</title><rect x="67.9640%" y="613" width="0.0267%" height="15" fill="rgb(221,121,27)" fg:x="19049047180" fg:w="7493685"/><text x="68.2140%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;arc_swap::strategy::hybrid::HybridProtection&lt;alloc::sync::Arc&lt;pgdog::config::ConfigAndUsers&gt;&gt;&gt; (7,493,685 samples, 0.03%)</title><rect x="67.9640%" y="597" width="0.0267%" height="15" fill="rgb(247,70,47)" fg:x="19049047180" fg:w="7493685"/><text x="68.2140%" y="607.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridProtection&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,493,685 samples, 0.03%)</title><rect x="67.9640%" y="581" width="0.0267%" height="15" fill="rgb(228,85,35)" fg:x="19049047180" fg:w="7493685"/><text x="68.2140%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (69,027,612 samples, 0.25%)</title><rect x="68.0133%" y="533" width="0.2463%" height="15" fill="rgb(209,50,18)" fg:x="19062858580" fg:w="69027612"/><text x="68.2633%" y="543.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::len::_{{closure}} (69,027,612 samples, 0.25%)</title><rect x="68.0133%" y="517" width="0.2463%" height="15" fill="rgb(250,19,35)" fg:x="19062858580" fg:w="69027612"/><text x="68.2633%" y="527.50"></text></g><g><title>pgdog::backend::protocol::protocol_message::ProtocolMessage::len (69,027,612 samples, 0.25%)</title><rect x="68.0133%" y="501" width="0.2463%" height="15" fill="rgb(253,107,29)" fg:x="19062858580" fg:w="69027612"/><text x="68.2633%" y="511.50"></text></g><g><title>[unknown] (4,613,565 samples, 0.02%)</title><rect x="68.2431%" y="485" width="0.0165%" height="15" fill="rgb(252,179,29)" fg:x="19127272627" fg:w="4613565"/><text x="68.4931%" y="495.50"></text></g><g><title>[unknown] (4,613,565 samples, 0.02%)</title><rect x="68.2431%" y="469" width="0.0165%" height="15" fill="rgb(238,194,6)" fg:x="19127272627" fg:w="4613565"/><text x="68.4931%" y="479.50"></text></g><g><title>[unknown] (4,613,565 samples, 0.02%)</title><rect x="68.2431%" y="453" width="0.0165%" height="15" fill="rgb(238,164,29)" fg:x="19127272627" fg:w="4613565"/><text x="68.4931%" y="463.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::full (75,346,870 samples, 0.27%)</title><rect x="67.9907%" y="629" width="0.2688%" height="15" fill="rgb(224,25,9)" fg:x="19056540865" fg:w="75346870"/><text x="68.2407%" y="639.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::len (73,489,482 samples, 0.26%)</title><rect x="67.9973%" y="613" width="0.2622%" height="15" fill="rgb(244,153,23)" fg:x="19058398253" fg:w="73489482"/><text x="68.2473%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (73,489,482 samples, 0.26%)</title><rect x="67.9973%" y="597" width="0.2622%" height="15" fill="rgb(212,203,14)" fg:x="19058398253" fg:w="73489482"/><text x="68.2473%" y="607.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (73,489,482 samples, 0.26%)</title><rect x="67.9973%" y="581" width="0.2622%" height="15" fill="rgb(220,164,20)" fg:x="19058398253" fg:w="73489482"/><text x="68.2473%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (73,489,482 samples, 0.26%)</title><rect x="67.9973%" y="565" width="0.2622%" height="15" fill="rgb(222,203,48)" fg:x="19058398253" fg:w="73489482"/><text x="68.2473%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (73,489,482 samples, 0.26%)</title><rect x="67.9973%" y="549" width="0.2622%" height="15" fill="rgb(215,159,22)" fg:x="19058398253" fg:w="73489482"/><text x="68.2473%" y="559.50"></text></g><g><title>_rjem_je_malloc_default (3,811,285 samples, 0.01%)</title><rect x="68.2730%" y="453" width="0.0136%" height="15" fill="rgb(216,183,47)" fg:x="19135658327" fg:w="3811285"/><text x="68.5230%" y="463.50"></text></g><g><title>imalloc (3,811,285 samples, 0.01%)</title><rect x="68.2730%" y="437" width="0.0136%" height="15" fill="rgb(229,195,25)" fg:x="19135658327" fg:w="3811285"/><text x="68.5230%" y="447.50"></text></g><g><title>imalloc_body (3,811,285 samples, 0.01%)</title><rect x="68.2730%" y="421" width="0.0136%" height="15" fill="rgb(224,132,51)" fg:x="19135658327" fg:w="3811285"/><text x="68.5230%" y="431.50"></text></g><g><title>thread_alloc_event (3,811,285 samples, 0.01%)</title><rect x="68.2730%" y="405" width="0.0136%" height="15" fill="rgb(240,63,7)" fg:x="19135658327" fg:w="3811285"/><text x="68.5230%" y="415.50"></text></g><g><title>te_event_advance (3,811,285 samples, 0.01%)</title><rect x="68.2730%" y="389" width="0.0136%" height="15" fill="rgb(249,182,41)" fg:x="19135658327" fg:w="3811285"/><text x="68.5230%" y="399.50"></text></g><g><title>_rjem_je_te_event_trigger (3,811,285 samples, 0.01%)</title><rect x="68.2730%" y="373" width="0.0136%" height="15" fill="rgb(243,47,26)" fg:x="19135658327" fg:w="3811285"/><text x="68.5230%" y="383.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::new (21,046,316 samples, 0.08%)</title><rect x="68.2595%" y="629" width="0.0751%" height="15" fill="rgb(233,48,2)" fg:x="19131887735" fg:w="21046316"/><text x="68.5095%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (21,046,316 samples, 0.08%)</title><rect x="68.2595%" y="613" width="0.0751%" height="15" fill="rgb(244,165,34)" fg:x="19131887735" fg:w="21046316"/><text x="68.5095%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21,046,316 samples, 0.08%)</title><rect x="68.2595%" y="597" width="0.0751%" height="15" fill="rgb(207,89,7)" fg:x="19131887735" fg:w="21046316"/><text x="68.5095%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21,046,316 samples, 0.08%)</title><rect x="68.2595%" y="581" width="0.0751%" height="15" fill="rgb(244,117,36)" fg:x="19131887735" fg:w="21046316"/><text x="68.5095%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (21,046,316 samples, 0.08%)</title><rect x="68.2595%" y="565" width="0.0751%" height="15" fill="rgb(226,144,34)" fg:x="19131887735" fg:w="21046316"/><text x="68.5095%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (21,046,316 samples, 0.08%)</title><rect x="68.2595%" y="549" width="0.0751%" height="15" fill="rgb(213,23,19)" fg:x="19131887735" fg:w="21046316"/><text x="68.5095%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17,275,735 samples, 0.06%)</title><rect x="68.2730%" y="533" width="0.0616%" height="15" fill="rgb(217,75,12)" fg:x="19135658316" fg:w="17275735"/><text x="68.5230%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17,275,735 samples, 0.06%)</title><rect x="68.2730%" y="517" width="0.0616%" height="15" fill="rgb(224,159,17)" fg:x="19135658316" fg:w="17275735"/><text x="68.5230%" y="527.50"></text></g><g><title>alloc::alloc::alloc (17,275,735 samples, 0.06%)</title><rect x="68.2730%" y="501" width="0.0616%" height="15" fill="rgb(217,118,1)" fg:x="19135658316" fg:w="17275735"/><text x="68.5230%" y="511.50"></text></g><g><title>__rust_alloc (17,275,735 samples, 0.06%)</title><rect x="68.2730%" y="485" width="0.0616%" height="15" fill="rgb(232,180,48)" fg:x="19135658316" fg:w="17275735"/><text x="68.5230%" y="495.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (17,275,735 samples, 0.06%)</title><rect x="68.2730%" y="469" width="0.0616%" height="15" fill="rgb(230,27,33)" fg:x="19135658316" fg:w="17275735"/><text x="68.5230%" y="479.50"></text></g><g><title>_rjem_malloc (13,464,439 samples, 0.05%)</title><rect x="68.2866%" y="453" width="0.0480%" height="15" fill="rgb(205,31,21)" fg:x="19139469612" fg:w="13464439"/><text x="68.5366%" y="463.50"></text></g><g><title>imalloc_fastpath (13,464,439 samples, 0.05%)</title><rect x="68.2866%" y="437" width="0.0480%" height="15" fill="rgb(253,59,4)" fg:x="19139469612" fg:w="13464439"/><text x="68.5366%" y="447.50"></text></g><g><title>cache_bin_alloc_easy (7,740,237 samples, 0.03%)</title><rect x="68.3070%" y="421" width="0.0276%" height="15" fill="rgb(224,201,9)" fg:x="19145193814" fg:w="7740237"/><text x="68.5570%" y="431.50"></text></g><g><title>cache_bin_alloc_impl (7,740,237 samples, 0.03%)</title><rect x="68.3070%" y="405" width="0.0276%" height="15" fill="rgb(229,206,30)" fg:x="19145193814" fg:w="7740237"/><text x="68.5570%" y="415.50"></text></g><g><title>pgdog::frontend::client::timeouts::Timeouts::from_config (4,178,550 samples, 0.01%)</title><rect x="68.3346%" y="629" width="0.0149%" height="15" fill="rgb(212,67,47)" fg:x="19152934051" fg:w="4178550"/><text x="68.5846%" y="639.50"></text></g><g><title>pgdog::config::General::query_timeout (4,178,550 samples, 0.01%)</title><rect x="68.3346%" y="613" width="0.0149%" height="15" fill="rgb(211,96,50)" fg:x="19152934051" fg:w="4178550"/><text x="68.5846%" y="623.50"></text></g><g><title>core::time::Duration::from_millis (4,178,550 samples, 0.01%)</title><rect x="68.3346%" y="597" width="0.0149%" height="15" fill="rgb(252,114,18)" fg:x="19152934051" fg:w="4178550"/><text x="68.5846%" y="607.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11,181,975 samples, 0.04%)</title><rect x="68.3495%" y="613" width="0.0399%" height="15" fill="rgb(223,58,37)" fg:x="19157112601" fg:w="11181975"/><text x="68.5995%" y="623.50"></text></g><g><title>pgdog::frontend::prepared_statements::PreparedStatements::maybe_rewrite (50,573,748 samples, 0.18%)</title><rect x="68.3495%" y="629" width="0.1804%" height="15" fill="rgb(237,70,4)" fg:x="19157112601" fg:w="50573748"/><text x="68.5995%" y="639.50"></text></g><g><title>pgdog::frontend::prepared_statements::rewrite::Rewrite::rewrite (39,391,773 samples, 0.14%)</title><rect x="68.3894%" y="613" width="0.1405%" height="15" fill="rgb(244,85,46)" fg:x="19168294576" fg:w="39391773"/><text x="68.6394%" y="623.50"></text></g><g><title>pgdog::frontend::prepared_statements::rewrite::Rewrite::bind (5,818,756 samples, 0.02%)</title><rect x="68.5092%" y="597" width="0.0208%" height="15" fill="rgb(223,39,52)" fg:x="19201867593" fg:w="5818756"/><text x="68.7592%" y="607.50"></text></g><g><title>&lt;tokio::io::util::read_exact::ReadExact&lt;A&gt; as core::future::future::Future&gt;::poll (10,004,746 samples, 0.04%)</title><rect x="68.7051%" y="613" width="0.0357%" height="15" fill="rgb(218,200,14)" fg:x="19256781989" fg:w="10004746"/><text x="68.9551%" y="623.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (6,267,849 samples, 0.02%)</title><rect x="68.7185%" y="597" width="0.0224%" height="15" fill="rgb(208,171,16)" fg:x="19260518886" fg:w="6267849"/><text x="68.9685%" y="607.50"></text></g><g><title>&lt;pgdog::net::stream::Stream as tokio::io::async_read::AsyncRead&gt;::poll_read (6,267,849 samples, 0.02%)</title><rect x="68.7185%" y="581" width="0.0224%" height="15" fill="rgb(234,200,18)" fg:x="19260518886" fg:w="6267849"/><text x="68.9685%" y="591.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (4,139,836 samples, 0.01%)</title><rect x="68.7261%" y="565" width="0.0148%" height="15" fill="rgb(228,45,11)" fg:x="19262646899" fg:w="4139836"/><text x="68.9761%" y="575.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (4,139,836 samples, 0.01%)</title><rect x="68.7261%" y="549" width="0.0148%" height="15" fill="rgb(237,182,11)" fg:x="19262646899" fg:w="4139836"/><text x="68.9761%" y="559.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (3,795,600 samples, 0.01%)</title><rect x="68.8309%" y="533" width="0.0135%" height="15" fill="rgb(241,175,49)" fg:x="19292043651" fg:w="3795600"/><text x="69.0809%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (13,361,885 samples, 0.05%)</title><rect x="68.8585%" y="517" width="0.0477%" height="15" fill="rgb(247,38,35)" fg:x="19299775237" fg:w="13361885"/><text x="69.1085%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13,361,885 samples, 0.05%)</title><rect x="68.8585%" y="501" width="0.0477%" height="15" fill="rgb(228,39,49)" fg:x="19299775237" fg:w="13361885"/><text x="69.1085%" y="511.50"></text></g><g><title>[libc.so.6] (13,361,885 samples, 0.05%)</title><rect x="68.8585%" y="485" width="0.0477%" height="15" fill="rgb(226,101,26)" fg:x="19299775237" fg:w="13361885"/><text x="69.1085%" y="495.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (48,269,981 samples, 0.17%)</title><rect x="68.7472%" y="597" width="0.1722%" height="15" fill="rgb(206,141,19)" fg:x="19268565623" fg:w="48269981"/><text x="68.9972%" y="607.50"></text></g><g><title>&lt;pgdog::net::stream::Stream as tokio::io::async_read::AsyncRead&gt;::poll_read (46,393,206 samples, 0.17%)</title><rect x="68.7539%" y="581" width="0.1655%" height="15" fill="rgb(211,200,13)" fg:x="19270442398" fg:w="46393206"/><text x="69.0039%" y="591.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (30,910,752 samples, 0.11%)</title><rect x="68.8091%" y="565" width="0.1103%" height="15" fill="rgb(241,121,6)" fg:x="19285924852" fg:w="30910752"/><text x="69.0591%" y="575.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (30,910,752 samples, 0.11%)</title><rect x="68.8091%" y="549" width="0.1103%" height="15" fill="rgb(234,221,29)" fg:x="19285924852" fg:w="30910752"/><text x="69.0591%" y="559.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (19,044,301 samples, 0.07%)</title><rect x="68.8515%" y="533" width="0.0679%" height="15" fill="rgb(229,136,5)" fg:x="19297791303" fg:w="19044301"/><text x="69.1015%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (3,698,482 samples, 0.01%)</title><rect x="68.9062%" y="517" width="0.0132%" height="15" fill="rgb(238,36,11)" fg:x="19313137122" fg:w="3698482"/><text x="69.1562%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3,698,482 samples, 0.01%)</title><rect x="68.9062%" y="501" width="0.0132%" height="15" fill="rgb(251,55,41)" fg:x="19313137122" fg:w="3698482"/><text x="69.1562%" y="511.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (18,661,452 samples, 0.07%)</title><rect x="68.9325%" y="597" width="0.0666%" height="15" fill="rgb(242,34,40)" fg:x="19320493081" fg:w="18661452"/><text x="69.1825%" y="607.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (18,661,452 samples, 0.07%)</title><rect x="68.9325%" y="581" width="0.0666%" height="15" fill="rgb(215,42,17)" fg:x="19320493081" fg:w="18661452"/><text x="69.1825%" y="591.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (18,661,452 samples, 0.07%)</title><rect x="68.9325%" y="565" width="0.0666%" height="15" fill="rgb(207,44,46)" fg:x="19320493081" fg:w="18661452"/><text x="69.1825%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (18,661,452 samples, 0.07%)</title><rect x="68.9325%" y="549" width="0.0666%" height="15" fill="rgb(211,206,28)" fg:x="19320493081" fg:w="18661452"/><text x="69.1825%" y="559.50"></text></g><g><title>&lt;tokio::io::util::read_int::ReadI32&lt;R&gt; as core::future::future::Future&gt;::poll (74,222,472 samples, 0.26%)</title><rect x="68.7408%" y="613" width="0.2648%" height="15" fill="rgb(237,167,16)" fg:x="19266786735" fg:w="74222472"/><text x="68.9908%" y="623.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (3,837,945 samples, 0.01%)</title><rect x="69.3115%" y="533" width="0.0137%" height="15" fill="rgb(233,66,6)" fg:x="19426740433" fg:w="3837945"/><text x="69.5615%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3,732,226 samples, 0.01%)</title><rect x="69.3971%" y="517" width="0.0133%" height="15" fill="rgb(246,123,29)" fg:x="19450725687" fg:w="3732226"/><text x="69.6471%" y="527.50"></text></g><g><title>recv (2,678,664,254 samples, 9.56%)</title><rect x="69.5050%" y="325" width="9.5570%" height="15" fill="rgb(209,62,40)" fg:x="19480966742" fg:w="2678664254"/><text x="69.7550%" y="335.50">recv</text></g><g><title>[libc.so.6] (2,634,086,382 samples, 9.40%)</title><rect x="69.6640%" y="309" width="9.3980%" height="15" fill="rgb(218,4,25)" fg:x="19525544614" fg:w="2634086382"/><text x="69.9140%" y="319.50">[libc.so.6]</text></g><g><title>[libc.so.6] (2,615,680,859 samples, 9.33%)</title><rect x="69.7297%" y="293" width="9.3323%" height="15" fill="rgb(253,91,49)" fg:x="19543950137" fg:w="2615680859"/><text x="69.9797%" y="303.50">[libc.so.6]</text></g><g><title>[unknown] (2,585,920,256 samples, 9.23%)</title><rect x="69.8359%" y="277" width="9.2262%" height="15" fill="rgb(228,155,29)" fg:x="19573710740" fg:w="2585920256"/><text x="70.0859%" y="287.50">[unknown]</text></g><g><title>[unknown] (2,488,695,248 samples, 8.88%)</title><rect x="70.1828%" y="261" width="8.8793%" height="15" fill="rgb(243,57,37)" fg:x="19670935748" fg:w="2488695248"/><text x="70.4328%" y="271.50">[unknown]</text></g><g><title>[unknown] (2,398,408,831 samples, 8.56%)</title><rect x="70.5049%" y="245" width="8.5571%" height="15" fill="rgb(244,167,17)" fg:x="19761222165" fg:w="2398408831"/><text x="70.7549%" y="255.50">[unknown]</text></g><g><title>[unknown] (2,276,475,600 samples, 8.12%)</title><rect x="70.9399%" y="229" width="8.1221%" height="15" fill="rgb(207,181,38)" fg:x="19883155396" fg:w="2276475600"/><text x="71.1899%" y="239.50">[unknown]</text></g><g><title>[unknown] (2,076,648,468 samples, 7.41%)</title><rect x="71.6529%" y="213" width="7.4092%" height="15" fill="rgb(211,8,23)" fg:x="20082982528" fg:w="2076648468"/><text x="71.9029%" y="223.50">[unknown]</text></g><g><title>[unknown] (1,963,827,016 samples, 7.01%)</title><rect x="72.0554%" y="197" width="7.0066%" height="15" fill="rgb(235,11,44)" fg:x="20195803980" fg:w="1963827016"/><text x="72.3054%" y="207.50">[unknown]</text></g><g><title>[unknown] (1,842,493,521 samples, 6.57%)</title><rect x="72.4883%" y="181" width="6.5737%" height="15" fill="rgb(248,18,52)" fg:x="20317137475" fg:w="1842493521"/><text x="72.7383%" y="191.50">[unknown]</text></g><g><title>[unknown] (1,774,129,855 samples, 6.33%)</title><rect x="72.7322%" y="165" width="6.3298%" height="15" fill="rgb(208,4,7)" fg:x="20385501141" fg:w="1774129855"/><text x="72.9822%" y="175.50">[unknown]</text></g><g><title>[unknown] (1,276,626,379 samples, 4.55%)</title><rect x="74.5072%" y="149" width="4.5548%" height="15" fill="rgb(240,17,39)" fg:x="20883004617" fg:w="1276626379"/><text x="74.7572%" y="159.50">[unkn..</text></g><g><title>[unknown] (747,188,898 samples, 2.67%)</title><rect x="76.3962%" y="133" width="2.6659%" height="15" fill="rgb(207,170,3)" fg:x="21412442098" fg:w="747188898"/><text x="76.6462%" y="143.50">[u..</text></g><g><title>[unknown] (558,552,439 samples, 1.99%)</title><rect x="77.0692%" y="117" width="1.9928%" height="15" fill="rgb(236,100,52)" fg:x="21601078557" fg:w="558552439"/><text x="77.3192%" y="127.50">[..</text></g><g><title>[unknown] (269,021,057 samples, 0.96%)</title><rect x="78.1022%" y="101" width="0.9598%" height="15" fill="rgb(246,78,51)" fg:x="21890609939" fg:w="269021057"/><text x="78.3522%" y="111.50"></text></g><g><title>[unknown] (39,181,019 samples, 0.14%)</title><rect x="78.9223%" y="85" width="0.1398%" height="15" fill="rgb(211,17,15)" fg:x="22120449977" fg:w="39181019"/><text x="79.1723%" y="95.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2,704,753,642 samples, 9.65%)</title><rect x="69.5050%" y="453" width="9.6501%" height="15" fill="rgb(209,59,46)" fg:x="19480966742" fg:w="2704753642"/><text x="69.7550%" y="463.50">&lt;&amp;mio::net::tc..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2,704,753,642 samples, 9.65%)</title><rect x="69.5050%" y="437" width="9.6501%" height="15" fill="rgb(210,92,25)" fg:x="19480966742" fg:w="2704753642"/><text x="69.7550%" y="447.50">mio::io_source..</text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (2,704,753,642 samples, 9.65%)</title><rect x="69.5050%" y="421" width="9.6501%" height="15" fill="rgb(238,174,52)" fg:x="19480966742" fg:w="2704753642"/><text x="69.7550%" y="431.50">mio::sys::unix..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (2,704,753,642 samples, 9.65%)</title><rect x="69.5050%" y="405" width="9.6501%" height="15" fill="rgb(230,73,7)" fg:x="19480966742" fg:w="2704753642"/><text x="69.7550%" y="415.50">&lt;&amp;mio::net::tc..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2,704,753,642 samples, 9.65%)</title><rect x="69.5050%" y="389" width="9.6501%" height="15" fill="rgb(243,124,40)" fg:x="19480966742" fg:w="2704753642"/><text x="69.7550%" y="399.50">&lt;&amp;std::net::tc..</text></g><g><title>std::sys::net::connection::socket::TcpStream::read (2,704,753,642 samples, 9.65%)</title><rect x="69.5050%" y="373" width="9.6501%" height="15" fill="rgb(244,170,11)" fg:x="19480966742" fg:w="2704753642"/><text x="69.7550%" y="383.50">std::sys::net:..</text></g><g><title>std::sys::net::connection::socket::unix::Socket::read (2,704,753,642 samples, 9.65%)</title><rect x="69.5050%" y="357" width="9.6501%" height="15" fill="rgb(207,114,54)" fg:x="19480966742" fg:w="2704753642"/><text x="69.7550%" y="367.50">std::sys::net:..</text></g><g><title>std::sys::net::connection::socket::unix::Socket::recv_with_flags (2,704,753,642 samples, 9.65%)</title><rect x="69.5050%" y="341" width="9.6501%" height="15" fill="rgb(205,42,20)" fg:x="19480966742" fg:w="2704753642"/><text x="69.7550%" y="351.50">std::sys::net:..</text></g><g><title>std::sys::pal::unix::cvt (26,089,388 samples, 0.09%)</title><rect x="79.0620%" y="325" width="0.0931%" height="15" fill="rgb(230,30,28)" fg:x="22159630996" fg:w="26089388"/><text x="79.3120%" y="335.50"></text></g><g><title>tokio::runtime::io::registration::Registration::clear_readiness (9,139,034 samples, 0.03%)</title><rect x="79.1615%" y="453" width="0.0326%" height="15" fill="rgb(205,73,54)" fg:x="22187512286" fg:w="9139034"/><text x="79.4115%" y="463.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_readiness (9,139,034 samples, 0.03%)</title><rect x="79.1615%" y="437" width="0.0326%" height="15" fill="rgb(254,227,23)" fg:x="22187512286" fg:w="9139034"/><text x="79.4115%" y="447.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (9,139,034 samples, 0.03%)</title><rect x="79.1615%" y="421" width="0.0326%" height="15" fill="rgb(228,202,34)" fg:x="22187512286" fg:w="9139034"/><text x="79.4115%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_update (9,139,034 samples, 0.03%)</title><rect x="79.1615%" y="405" width="0.0326%" height="15" fill="rgb(222,225,37)" fg:x="22187512286" fg:w="9139034"/><text x="79.4115%" y="415.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness::_{{closure}} (3,694,364 samples, 0.01%)</title><rect x="79.1809%" y="389" width="0.0132%" height="15" fill="rgb(221,14,54)" fg:x="22192956956" fg:w="3694364"/><text x="79.4309%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::RestoreOnPending&gt; (11,524,995 samples, 0.04%)</title><rect x="79.2713%" y="421" width="0.0411%" height="15" fill="rgb(254,102,2)" fg:x="22218277761" fg:w="11524995"/><text x="79.5213%" y="431.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (11,524,995 samples, 0.04%)</title><rect x="79.2713%" y="405" width="0.0411%" height="15" fill="rgb(232,104,17)" fg:x="22218277761" fg:w="11524995"/><text x="79.5213%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3,673,517 samples, 0.01%)</title><rect x="79.3323%" y="373" width="0.0131%" height="15" fill="rgb(250,220,14)" fg:x="22235366455" fg:w="3673517"/><text x="79.5823%" y="383.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (3,673,517 samples, 0.01%)</title><rect x="79.3323%" y="357" width="0.0131%" height="15" fill="rgb(241,158,9)" fg:x="22235366455" fg:w="3673517"/><text x="79.5823%" y="367.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (3,673,517 samples, 0.01%)</title><rect x="79.3323%" y="341" width="0.0131%" height="15" fill="rgb(246,9,43)" fg:x="22235366455" fg:w="3673517"/><text x="79.5823%" y="351.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (14,836,919 samples, 0.05%)</title><rect x="79.3124%" y="421" width="0.0529%" height="15" fill="rgb(206,73,33)" fg:x="22229802756" fg:w="14836919"/><text x="79.5624%" y="431.50"></text></g><g><title>tokio::runtime::context::budget (9,273,220 samples, 0.03%)</title><rect x="79.3323%" y="405" width="0.0331%" height="15" fill="rgb(222,79,8)" fg:x="22235366455" fg:w="9273220"/><text x="79.5823%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9,273,220 samples, 0.03%)</title><rect x="79.3323%" y="389" width="0.0331%" height="15" fill="rgb(234,8,54)" fg:x="22235366455" fg:w="9273220"/><text x="79.5823%" y="399.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (5,599,703 samples, 0.02%)</title><rect x="79.3454%" y="373" width="0.0200%" height="15" fill="rgb(209,134,38)" fg:x="22239039972" fg:w="5599703"/><text x="79.5954%" y="383.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (5,599,703 samples, 0.02%)</title><rect x="79.3454%" y="357" width="0.0200%" height="15" fill="rgb(230,127,29)" fg:x="22239039972" fg:w="5599703"/><text x="79.5954%" y="367.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (5,621,557 samples, 0.02%)</title><rect x="79.3978%" y="405" width="0.0201%" height="15" fill="rgb(242,44,41)" fg:x="22253738744" fg:w="5621557"/><text x="79.6478%" y="415.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (5,621,557 samples, 0.02%)</title><rect x="79.3978%" y="389" width="0.0201%" height="15" fill="rgb(222,56,43)" fg:x="22253738744" fg:w="5621557"/><text x="79.6478%" y="399.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (5,621,557 samples, 0.02%)</title><rect x="79.3978%" y="373" width="0.0201%" height="15" fill="rgb(238,39,47)" fg:x="22253738744" fg:w="5621557"/><text x="79.6478%" y="383.50"></text></g><g><title>tokio::runtime::io::driver::Direction::mask (15,218,190 samples, 0.05%)</title><rect x="79.4179%" y="405" width="0.0543%" height="15" fill="rgb(226,79,43)" fg:x="22259360301" fg:w="15218190"/><text x="79.6679%" y="415.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2,821,948,280 samples, 10.07%)</title><rect x="69.4104%" y="517" width="10.0683%" height="15" fill="rgb(242,105,53)" fg:x="19454457913" fg:w="2821948280"/><text x="69.6604%" y="527.50">&lt;tokio::io::uti..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (2,821,948,280 samples, 10.07%)</title><rect x="69.4104%" y="501" width="10.0683%" height="15" fill="rgb(251,132,46)" fg:x="19454457913" fg:w="2821948280"/><text x="69.6604%" y="511.50">&lt;tokio::net::tc..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (2,810,587,609 samples, 10.03%)</title><rect x="69.4510%" y="485" width="10.0277%" height="15" fill="rgb(231,77,14)" fg:x="19465818584" fg:w="2810587609"/><text x="69.7010%" y="495.50">tokio::net::tc..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (2,810,587,609 samples, 10.03%)</title><rect x="69.4510%" y="469" width="10.0277%" height="15" fill="rgb(240,135,9)" fg:x="19465818584" fg:w="2810587609"/><text x="69.7010%" y="479.50">tokio::io::pol..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (79,754,873 samples, 0.28%)</title><rect x="79.1941%" y="453" width="0.2846%" height="15" fill="rgb(248,109,14)" fg:x="22196651320" fg:w="79754873"/><text x="79.4441%" y="463.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (79,754,872 samples, 0.28%)</title><rect x="79.1941%" y="437" width="0.2846%" height="15" fill="rgb(227,146,52)" fg:x="22196651321" fg:w="79754872"/><text x="79.4441%" y="447.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (31,766,518 samples, 0.11%)</title><rect x="79.3653%" y="421" width="0.1133%" height="15" fill="rgb(232,54,3)" fg:x="22244639675" fg:w="31766518"/><text x="79.6153%" y="431.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (13,014,542 samples, 0.05%)</title><rect x="79.4787%" y="517" width="0.0464%" height="15" fill="rgb(229,201,43)" fg:x="22276406193" fg:w="13014542"/><text x="79.7287%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3,699,084 samples, 0.01%)</title><rect x="79.5119%" y="501" width="0.0132%" height="15" fill="rgb(252,161,33)" fg:x="22285721651" fg:w="3699084"/><text x="79.7619%" y="511.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3,699,084 samples, 0.01%)</title><rect x="79.5119%" y="485" width="0.0132%" height="15" fill="rgb(226,146,40)" fg:x="22285721651" fg:w="3699084"/><text x="79.7619%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3,699,084 samples, 0.01%)</title><rect x="79.5119%" y="469" width="0.0132%" height="15" fill="rgb(219,47,25)" fg:x="22285721651" fg:w="3699084"/><text x="79.7619%" y="479.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (2,860,622,674 samples, 10.21%)</title><rect x="69.3252%" y="533" width="10.2062%" height="15" fill="rgb(250,135,13)" fg:x="19430578378" fg:w="2860622674"/><text x="69.5752%" y="543.50">&lt;tokio::io::uti..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (11,145,702 samples, 0.04%)</title><rect x="79.5522%" y="517" width="0.0398%" height="15" fill="rgb(219,229,18)" fg:x="22297021375" fg:w="11145702"/><text x="79.8022%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11,145,702 samples, 0.04%)</title><rect x="79.5522%" y="501" width="0.0398%" height="15" fill="rgb(217,152,27)" fg:x="22297021375" fg:w="11145702"/><text x="79.8022%" y="511.50"></text></g><g><title>[libc.so.6] (11,145,702 samples, 0.04%)</title><rect x="79.5522%" y="485" width="0.0398%" height="15" fill="rgb(225,71,47)" fg:x="22297021375" fg:w="11145702"/><text x="79.8022%" y="495.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (20,574,240 samples, 0.07%)</title><rect x="79.5315%" y="533" width="0.0734%" height="15" fill="rgb(220,139,14)" fg:x="22291201052" fg:w="20574240"/><text x="79.7815%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (3,608,215 samples, 0.01%)</title><rect x="79.5920%" y="517" width="0.0129%" height="15" fill="rgb(247,54,32)" fg:x="22308167077" fg:w="3608215"/><text x="79.8420%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3,608,215 samples, 0.01%)</title><rect x="79.5920%" y="501" width="0.0129%" height="15" fill="rgb(252,131,39)" fg:x="22308167077" fg:w="3608215"/><text x="79.8420%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (3,608,215 samples, 0.01%)</title><rect x="79.5920%" y="485" width="0.0129%" height="15" fill="rgb(210,108,39)" fg:x="22308167077" fg:w="3608215"/><text x="79.8420%" y="495.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2,918,880,919 samples, 10.41%)</title><rect x="69.2109%" y="565" width="10.4141%" height="15" fill="rgb(205,23,29)" fg:x="19398524883" fg:w="2918880919"/><text x="69.4609%" y="575.50">&lt;tokio::io::uti..</text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2,918,880,919 samples, 10.41%)</title><rect x="69.2109%" y="549" width="10.4141%" height="15" fill="rgb(246,139,46)" fg:x="19398524883" fg:w="2918880919"/><text x="69.4609%" y="559.50">&lt;tokio::io::uti..</text></g><g><title>tokio::io::read_buf::ReadBuf::remaining (5,630,510 samples, 0.02%)</title><rect x="79.6049%" y="533" width="0.0201%" height="15" fill="rgb(250,81,26)" fg:x="22311775292" fg:w="5630510"/><text x="79.8549%" y="543.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::capacity (3,782,829 samples, 0.01%)</title><rect x="79.6115%" y="517" width="0.0135%" height="15" fill="rgb(214,104,7)" fg:x="22313622973" fg:w="3782829"/><text x="79.8615%" y="527.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (2,963,024,210 samples, 10.57%)</title><rect x="69.0663%" y="597" width="10.5716%" height="15" fill="rgb(233,189,8)" fg:x="19357994621" fg:w="2963024210"/><text x="69.3163%" y="607.50">&lt;&amp;mut T as toki..</text></g><g><title>&lt;pgdog::net::stream::Stream as tokio::io::async_read::AsyncRead&gt;::poll_read (2,961,143,546 samples, 10.56%)</title><rect x="69.0730%" y="581" width="10.5649%" height="15" fill="rgb(228,141,17)" fg:x="19359875285" fg:w="2961143546"/><text x="69.3230%" y="591.50">&lt;pgdog::net::st..</text></g><g><title>pgdog::net::stream::_::&lt;impl pgdog::net::stream::Stream&gt;::project (3,613,029 samples, 0.01%)</title><rect x="79.6250%" y="565" width="0.0129%" height="15" fill="rgb(247,157,1)" fg:x="22317405802" fg:w="3613029"/><text x="79.8750%" y="575.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (3,828,090 samples, 0.01%)</title><rect x="79.6379%" y="597" width="0.0137%" height="15" fill="rgb(249,225,5)" fg:x="22321018831" fg:w="3828090"/><text x="79.8879%" y="607.50"></text></g><g><title>&lt;tokio::io::util::read_int::ReadU8&lt;R&gt; as core::future::future::Future&gt;::poll (2,987,620,445 samples, 10.66%)</title><rect x="69.0057%" y="613" width="10.6594%" height="15" fill="rgb(242,55,13)" fg:x="19341009207" fg:w="2987620445"/><text x="69.2557%" y="623.50">&lt;tokio::io::util..</text></g><g><title>tokio::io::read_buf::ReadBuf::new (3,782,731 samples, 0.01%)</title><rect x="79.6515%" y="597" width="0.0135%" height="15" fill="rgb(230,49,50)" fg:x="22324846921" fg:w="3782731"/><text x="79.9015%" y="607.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (8,587,362 samples, 0.03%)</title><rect x="79.6715%" y="613" width="0.0306%" height="15" fill="rgb(241,111,38)" fg:x="22330455458" fg:w="8587362"/><text x="79.9215%" y="623.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (8,587,362 samples, 0.03%)</title><rect x="79.6715%" y="597" width="0.0306%" height="15" fill="rgb(252,155,4)" fg:x="22330455458" fg:w="8587362"/><text x="79.9215%" y="607.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (8,587,362 samples, 0.03%)</title><rect x="79.6715%" y="581" width="0.0306%" height="15" fill="rgb(212,69,32)" fg:x="22330455458" fg:w="8587362"/><text x="79.9215%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8,587,362 samples, 0.03%)</title><rect x="79.6715%" y="565" width="0.0306%" height="15" fill="rgb(243,107,47)" fg:x="22330455458" fg:w="8587362"/><text x="79.9215%" y="575.50"></text></g><g><title>bytes::bytes_mut::BytesMut::resize (3,946,043 samples, 0.01%)</title><rect x="79.7086%" y="613" width="0.0141%" height="15" fill="rgb(247,130,12)" fg:x="22340843545" fg:w="3946043"/><text x="79.9586%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (76,264,970 samples, 0.27%)</title><rect x="79.7357%" y="517" width="0.2721%" height="15" fill="rgb(233,74,16)" fg:x="22348445445" fg:w="76264970"/><text x="79.9857%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (76,264,970 samples, 0.27%)</title><rect x="79.7357%" y="501" width="0.2721%" height="15" fill="rgb(208,58,18)" fg:x="22348445445" fg:w="76264970"/><text x="79.9857%" y="511.50"></text></g><g><title>alloc::alloc::alloc (76,264,970 samples, 0.27%)</title><rect x="79.7357%" y="485" width="0.2721%" height="15" fill="rgb(242,225,1)" fg:x="22348445445" fg:w="76264970"/><text x="79.9857%" y="495.50"></text></g><g><title>__rust_alloc (76,264,970 samples, 0.27%)</title><rect x="79.7357%" y="469" width="0.2721%" height="15" fill="rgb(249,39,40)" fg:x="22348445445" fg:w="76264970"/><text x="79.9857%" y="479.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (76,264,970 samples, 0.27%)</title><rect x="79.7357%" y="453" width="0.2721%" height="15" fill="rgb(207,72,44)" fg:x="22348445445" fg:w="76264970"/><text x="79.9857%" y="463.50"></text></g><g><title>_rjem_malloc (76,264,970 samples, 0.27%)</title><rect x="79.7357%" y="437" width="0.2721%" height="15" fill="rgb(215,193,12)" fg:x="22348445445" fg:w="76264970"/><text x="79.9857%" y="447.50"></text></g><g><title>imalloc_fastpath (76,264,970 samples, 0.27%)</title><rect x="79.7357%" y="421" width="0.2721%" height="15" fill="rgb(248,41,39)" fg:x="22348445445" fg:w="76264970"/><text x="79.9857%" y="431.50"></text></g><g><title>cache_bin_alloc_easy (27,929,513 samples, 0.10%)</title><rect x="79.9082%" y="405" width="0.0996%" height="15" fill="rgb(253,85,4)" fg:x="22396780902" fg:w="27929513"/><text x="80.1582%" y="415.50"></text></g><g><title>cache_bin_alloc_impl (27,929,513 samples, 0.10%)</title><rect x="79.9082%" y="389" width="0.0996%" height="15" fill="rgb(243,70,31)" fg:x="22396780902" fg:w="27929513"/><text x="80.1582%" y="399.50"></text></g><g><title>pgdog::net::stream::Stream::read::_{{closure}} (3,218,794,401 samples, 11.48%)</title><rect x="68.5370%" y="629" width="11.4841%" height="15" fill="rgb(253,195,26)" fg:x="19209644220" fg:w="3218794401"/><text x="68.7870%" y="639.50">pgdog::net::strea..</text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (83,649,033 samples, 0.30%)</title><rect x="79.7227%" y="613" width="0.2984%" height="15" fill="rgb(243,42,11)" fg:x="22344789588" fg:w="83649033"/><text x="79.9727%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (83,649,033 samples, 0.30%)</title><rect x="79.7227%" y="597" width="0.2984%" height="15" fill="rgb(239,66,17)" fg:x="22344789588" fg:w="83649033"/><text x="79.9727%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (83,649,033 samples, 0.30%)</title><rect x="79.7227%" y="581" width="0.2984%" height="15" fill="rgb(217,132,21)" fg:x="22344789588" fg:w="83649033"/><text x="79.9727%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (83,649,033 samples, 0.30%)</title><rect x="79.7227%" y="565" width="0.2984%" height="15" fill="rgb(252,202,21)" fg:x="22344789588" fg:w="83649033"/><text x="79.9727%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (83,649,033 samples, 0.30%)</title><rect x="79.7227%" y="549" width="0.2984%" height="15" fill="rgb(233,98,36)" fg:x="22344789588" fg:w="83649033"/><text x="79.9727%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (83,649,033 samples, 0.30%)</title><rect x="79.7227%" y="533" width="0.2984%" height="15" fill="rgb(216,153,54)" fg:x="22344789588" fg:w="83649033"/><text x="79.9727%" y="543.50"></text></g><g><title>alloc::raw_vec::layout_array (3,728,206 samples, 0.01%)</title><rect x="80.0078%" y="517" width="0.0133%" height="15" fill="rgb(250,99,7)" fg:x="22424710415" fg:w="3728206"/><text x="80.2578%" y="527.50"></text></g><g><title>core::alloc::layout::Layout::repeat (3,728,206 samples, 0.01%)</title><rect x="80.0078%" y="501" width="0.0133%" height="15" fill="rgb(207,56,50)" fg:x="22424710415" fg:w="3728206"/><text x="80.2578%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::repeat_packed (3,728,206 samples, 0.01%)</title><rect x="80.0078%" y="485" width="0.0133%" height="15" fill="rgb(244,61,34)" fg:x="22424710415" fg:w="3728206"/><text x="80.2578%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (3,728,206 samples, 0.01%)</title><rect x="80.0078%" y="469" width="0.0133%" height="15" fill="rgb(241,50,38)" fg:x="22424710415" fg:w="3728206"/><text x="80.2578%" y="479.50"></text></g><g><title>core::intrinsics::unlikely (3,728,206 samples, 0.01%)</title><rect x="80.0078%" y="453" width="0.0133%" height="15" fill="rgb(212,166,30)" fg:x="22424710415" fg:w="3728206"/><text x="80.2578%" y="463.50"></text></g><g><title>pgdog::frontend::client::Client::buffer::_{{closure}} (3,760,335,605 samples, 13.42%)</title><rect x="66.6385%" y="645" width="13.4163%" height="15" fill="rgb(249,127,32)" fg:x="18677534537" fg:w="3760335605"/><text x="66.8885%" y="655.50">pgdog::frontend::cli..</text></g><g><title>std::time::Instant::now (9,431,521 samples, 0.03%)</title><rect x="80.0211%" y="629" width="0.0337%" height="15" fill="rgb(209,103,0)" fg:x="22428438621" fg:w="9431521"/><text x="80.2711%" y="639.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (9,431,521 samples, 0.03%)</title><rect x="80.0211%" y="613" width="0.0337%" height="15" fill="rgb(238,209,51)" fg:x="22428438621" fg:w="9431521"/><text x="80.2711%" y="623.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (9,431,521 samples, 0.03%)</title><rect x="80.0211%" y="597" width="0.0337%" height="15" fill="rgb(237,56,23)" fg:x="22428438621" fg:w="9431521"/><text x="80.2711%" y="607.50"></text></g><g><title>clock_gettime (9,431,521 samples, 0.03%)</title><rect x="80.0211%" y="581" width="0.0337%" height="15" fill="rgb(215,153,46)" fg:x="22428438621" fg:w="9431521"/><text x="80.2711%" y="591.50"></text></g><g><title>__vdso_clock_gettime (9,431,520 samples, 0.03%)</title><rect x="80.0211%" y="565" width="0.0337%" height="15" fill="rgb(224,49,31)" fg:x="22428438622" fg:w="9431520"/><text x="80.2711%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7,627,197 samples, 0.03%)</title><rect x="80.0548%" y="581" width="0.0272%" height="15" fill="rgb(250,18,42)" fg:x="22437870142" fg:w="7627197"/><text x="80.3048%" y="591.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (7,627,197 samples, 0.03%)</title><rect x="80.0548%" y="565" width="0.0272%" height="15" fill="rgb(215,176,39)" fg:x="22437870142" fg:w="7627197"/><text x="80.3048%" y="575.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (7,627,197 samples, 0.03%)</title><rect x="80.0548%" y="549" width="0.0272%" height="15" fill="rgb(223,77,29)" fg:x="22437870142" fg:w="7627197"/><text x="80.3048%" y="559.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (3,733,039 samples, 0.01%)</title><rect x="80.0687%" y="533" width="0.0133%" height="15" fill="rgb(234,94,52)" fg:x="22441764300" fg:w="3733039"/><text x="80.3187%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (26,631,622 samples, 0.10%)</title><rect x="80.0890%" y="565" width="0.0950%" height="15" fill="rgb(220,154,50)" fg:x="22447466568" fg:w="26631622"/><text x="80.3390%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (26,631,622 samples, 0.10%)</title><rect x="80.0890%" y="549" width="0.0950%" height="15" fill="rgb(212,11,10)" fg:x="22447466568" fg:w="26631622"/><text x="80.3390%" y="559.50"></text></g><g><title>core::mem::replace (26,631,622 samples, 0.10%)</title><rect x="80.0890%" y="533" width="0.0950%" height="15" fill="rgb(205,166,19)" fg:x="22447466568" fg:w="26631622"/><text x="80.3390%" y="543.50"></text></g><g><title>core::ptr::write (26,631,622 samples, 0.10%)</title><rect x="80.0890%" y="517" width="0.0950%" height="15" fill="rgb(244,198,16)" fg:x="22447466568" fg:w="26631622"/><text x="80.3390%" y="527.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (8,813,219,225 samples, 31.44%)</title><rect x="48.7734%" y="677" width="31.4442%" height="15" fill="rgb(219,69,12)" fg:x="13670286686" fg:w="8813219225"/><text x="49.0234%" y="687.50">&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::..</text></g><g><title>pgdog::frontend::client::Client::run::_{{closure}}::_{{closure}} (8,813,219,225 samples, 31.44%)</title><rect x="48.7734%" y="661" width="31.4442%" height="15" fill="rgb(245,30,7)" fg:x="13670286686" fg:w="8813219225"/><text x="49.0234%" y="671.50">pgdog::frontend::client::Client::run::_{{closure}}:..</text></g><g><title>tokio::macros::support::thread_rng_n (45,635,769 samples, 0.16%)</title><rect x="80.0548%" y="645" width="0.1628%" height="15" fill="rgb(218,221,48)" fg:x="22437870142" fg:w="45635769"/><text x="80.3048%" y="655.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (45,635,769 samples, 0.16%)</title><rect x="80.0548%" y="629" width="0.1628%" height="15" fill="rgb(216,66,15)" fg:x="22437870142" fg:w="45635769"/><text x="80.3048%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (45,635,769 samples, 0.16%)</title><rect x="80.0548%" y="613" width="0.1628%" height="15" fill="rgb(226,122,50)" fg:x="22437870142" fg:w="45635769"/><text x="80.3048%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (45,635,769 samples, 0.16%)</title><rect x="80.0548%" y="597" width="0.1628%" height="15" fill="rgb(239,156,16)" fg:x="22437870142" fg:w="45635769"/><text x="80.3048%" y="607.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (38,008,572 samples, 0.14%)</title><rect x="80.0820%" y="581" width="0.1356%" height="15" fill="rgb(224,27,38)" fg:x="22445497339" fg:w="38008572"/><text x="80.3320%" y="591.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand_n (7,591,726 samples, 0.03%)</title><rect x="80.1905%" y="565" width="0.0271%" height="15" fill="rgb(224,39,27)" fg:x="22475914185" fg:w="7591726"/><text x="80.4405%" y="575.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (5,680,495 samples, 0.02%)</title><rect x="80.1973%" y="549" width="0.0203%" height="15" fill="rgb(215,92,29)" fg:x="22477825416" fg:w="5680495"/><text x="80.4473%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3,722,555 samples, 0.01%)</title><rect x="80.2176%" y="677" width="0.0133%" height="15" fill="rgb(207,159,16)" fg:x="22483505911" fg:w="3722555"/><text x="80.4676%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (27,993,312 samples, 0.10%)</title><rect x="80.3441%" y="629" width="0.0999%" height="15" fill="rgb(238,163,47)" fg:x="22518965584" fg:w="27993312"/><text x="80.5941%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (27,993,312 samples, 0.10%)</title><rect x="80.3441%" y="613" width="0.0999%" height="15" fill="rgb(219,91,49)" fg:x="22518965584" fg:w="27993312"/><text x="80.5941%" y="623.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (27,993,312 samples, 0.10%)</title><rect x="80.3441%" y="597" width="0.0999%" height="15" fill="rgb(227,167,31)" fg:x="22518965584" fg:w="27993312"/><text x="80.5941%" y="607.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (27,993,312 samples, 0.10%)</title><rect x="80.3441%" y="581" width="0.0999%" height="15" fill="rgb(234,80,54)" fg:x="22518965584" fg:w="27993312"/><text x="80.5941%" y="591.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (32,050,877 samples, 0.11%)</title><rect x="80.4440%" y="629" width="0.1144%" height="15" fill="rgb(212,114,2)" fg:x="22546958896" fg:w="32050877"/><text x="80.6940%" y="639.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (32,050,877 samples, 0.11%)</title><rect x="80.4440%" y="613" width="0.1144%" height="15" fill="rgb(234,50,24)" fg:x="22546958896" fg:w="32050877"/><text x="80.6940%" y="623.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (32,050,877 samples, 0.11%)</title><rect x="80.4440%" y="597" width="0.1144%" height="15" fill="rgb(221,68,8)" fg:x="22546958896" fg:w="32050877"/><text x="80.6940%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (3,728,780 samples, 0.01%)</title><rect x="80.5450%" y="581" width="0.0133%" height="15" fill="rgb(254,180,31)" fg:x="22575280993" fg:w="3728780"/><text x="80.7950%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3,728,780 samples, 0.01%)</title><rect x="80.5450%" y="565" width="0.0133%" height="15" fill="rgb(247,130,50)" fg:x="22575280993" fg:w="3728780"/><text x="80.7950%" y="575.50"></text></g><g><title>tokio::sync::notify::AtomicNotification::load (15,219,982 samples, 0.05%)</title><rect x="80.5583%" y="629" width="0.0543%" height="15" fill="rgb(211,109,4)" fg:x="22579009773" fg:w="15219982"/><text x="80.8083%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5,471,048 samples, 0.02%)</title><rect x="80.5931%" y="613" width="0.0195%" height="15" fill="rgb(238,50,21)" fg:x="22588758707" fg:w="5471048"/><text x="80.8431%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (5,471,048 samples, 0.02%)</title><rect x="80.5931%" y="597" width="0.0195%" height="15" fill="rgb(225,57,45)" fg:x="22588758707" fg:w="5471048"/><text x="80.8431%" y="607.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (5,541,152 samples, 0.02%)</title><rect x="80.6126%" y="629" width="0.0198%" height="15" fill="rgb(209,196,50)" fg:x="22594229755" fg:w="5541152"/><text x="80.8626%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (5,541,152 samples, 0.02%)</title><rect x="80.6126%" y="613" width="0.0198%" height="15" fill="rgb(242,140,13)" fg:x="22594229755" fg:w="5541152"/><text x="80.8626%" y="623.50"></text></g><g><title>core::cmp::PartialEq::ne (5,773,248 samples, 0.02%)</title><rect x="80.6324%" y="613" width="0.0206%" height="15" fill="rgb(217,111,7)" fg:x="22599770907" fg:w="5773248"/><text x="80.8824%" y="623.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (5,773,248 samples, 0.02%)</title><rect x="80.6324%" y="597" width="0.0206%" height="15" fill="rgb(253,193,51)" fg:x="22599770907" fg:w="5773248"/><text x="80.8824%" y="607.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::ops::drop::Drop&gt;::drop (119,813,508 samples, 0.43%)</title><rect x="80.3108%" y="645" width="0.4275%" height="15" fill="rgb(252,70,29)" fg:x="22509625244" fg:w="119813508"/><text x="80.5608%" y="655.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (29,667,845 samples, 0.11%)</title><rect x="80.6324%" y="629" width="0.1059%" height="15" fill="rgb(232,127,12)" fg:x="22599770907" fg:w="29667845"/><text x="80.8824%" y="639.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::set_prev (23,894,597 samples, 0.09%)</title><rect x="80.6530%" y="613" width="0.0853%" height="15" fill="rgb(211,180,21)" fg:x="22605544155" fg:w="23894597"/><text x="80.9030%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (23,894,597 samples, 0.09%)</title><rect x="80.6530%" y="597" width="0.0853%" height="15" fill="rgb(229,72,13)" fg:x="22605544155" fg:w="23894597"/><text x="80.9030%" y="607.50"></text></g><g><title>core::ptr::write (23,894,597 samples, 0.09%)</title><rect x="80.6530%" y="581" width="0.0853%" height="15" fill="rgb(240,211,49)" fg:x="22605544155" fg:w="23894597"/><text x="80.9030%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::notify::Notified&gt; (151,416,564 samples, 0.54%)</title><rect x="80.3037%" y="661" width="0.5402%" height="15" fill="rgb(219,149,40)" fg:x="22507637776" fg:w="151416564"/><text x="80.5537%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::notify::Waiter&gt; (29,615,588 samples, 0.11%)</title><rect x="80.7382%" y="645" width="0.1057%" height="15" fill="rgb(210,127,46)" fg:x="22629438752" fg:w="29615588"/><text x="80.9882%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (29,615,588 samples, 0.11%)</title><rect x="80.7382%" y="629" width="0.1057%" height="15" fill="rgb(220,106,7)" fg:x="22629438752" fg:w="29615588"/><text x="80.9882%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (29,615,588 samples, 0.11%)</title><rect x="80.7382%" y="613" width="0.1057%" height="15" fill="rgb(249,31,22)" fg:x="22629438752" fg:w="29615588"/><text x="80.9882%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (29,615,588 samples, 0.11%)</title><rect x="80.7382%" y="597" width="0.1057%" height="15" fill="rgb(253,1,49)" fg:x="22629438752" fg:w="29615588"/><text x="80.9882%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (29,615,588 samples, 0.11%)</title><rect x="80.7382%" y="581" width="0.1057%" height="15" fill="rgb(227,144,33)" fg:x="22629438752" fg:w="29615588"/><text x="80.9882%" y="591.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (29,615,588 samples, 0.11%)</title><rect x="80.7382%" y="565" width="0.1057%" height="15" fill="rgb(249,163,44)" fg:x="22629438752" fg:w="29615588"/><text x="80.9882%" y="575.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (29,615,588 samples, 0.11%)</title><rect x="80.7382%" y="549" width="0.1057%" height="15" fill="rgb(234,15,39)" fg:x="22629438752" fg:w="29615588"/><text x="80.9882%" y="559.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (22,574,462 samples, 0.08%)</title><rect x="80.7634%" y="533" width="0.0805%" height="15" fill="rgb(207,66,16)" fg:x="22636479878" fg:w="22574462"/><text x="81.0134%" y="543.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (22,574,462 samples, 0.08%)</title><rect x="80.7634%" y="517" width="0.0805%" height="15" fill="rgb(233,112,24)" fg:x="22636479878" fg:w="22574462"/><text x="81.0134%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::pool::connection::binding::Binding::read::{{closure}}&gt; (26,148,679 samples, 0.09%)</title><rect x="80.8632%" y="629" width="0.0933%" height="15" fill="rgb(230,90,22)" fg:x="22664461481" fg:w="26148679"/><text x="81.1132%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (18,535,292 samples, 0.07%)</title><rect x="80.9630%" y="549" width="0.0661%" height="15" fill="rgb(229,61,13)" fg:x="22692431188" fg:w="18535292"/><text x="81.2130%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (11,278,312 samples, 0.04%)</title><rect x="80.9889%" y="533" width="0.0402%" height="15" fill="rgb(225,57,24)" fg:x="22699688168" fg:w="11278312"/><text x="81.2389%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (11,278,312 samples, 0.04%)</title><rect x="80.9889%" y="517" width="0.0402%" height="15" fill="rgb(208,169,48)" fg:x="22699688168" fg:w="11278312"/><text x="81.2389%" y="527.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (11,278,312 samples, 0.04%)</title><rect x="80.9889%" y="501" width="0.0402%" height="15" fill="rgb(244,218,51)" fg:x="22699688168" fg:w="11278312"/><text x="81.2389%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (11,278,312 samples, 0.04%)</title><rect x="80.9889%" y="485" width="0.0402%" height="15" fill="rgb(214,148,10)" fg:x="22699688168" fg:w="11278312"/><text x="81.2389%" y="495.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (11,278,312 samples, 0.04%)</title><rect x="80.9889%" y="469" width="0.0402%" height="15" fill="rgb(225,174,27)" fg:x="22699688168" fg:w="11278312"/><text x="81.2389%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3,705,935 samples, 0.01%)</title><rect x="81.0159%" y="453" width="0.0132%" height="15" fill="rgb(230,96,26)" fg:x="22707260545" fg:w="3705935"/><text x="81.2659%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (3,705,935 samples, 0.01%)</title><rect x="81.0159%" y="437" width="0.0132%" height="15" fill="rgb(232,10,30)" fg:x="22707260545" fg:w="3705935"/><text x="81.2659%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (18,592,351 samples, 0.07%)</title><rect x="81.0291%" y="549" width="0.0663%" height="15" fill="rgb(222,8,50)" fg:x="22710966480" fg:w="18592351"/><text x="81.2791%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (18,592,351 samples, 0.07%)</title><rect x="81.0291%" y="533" width="0.0663%" height="15" fill="rgb(213,81,27)" fg:x="22710966480" fg:w="18592351"/><text x="81.2791%" y="543.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (18,592,351 samples, 0.07%)</title><rect x="81.0291%" y="517" width="0.0663%" height="15" fill="rgb(245,50,10)" fg:x="22710966480" fg:w="18592351"/><text x="81.2791%" y="527.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (18,592,351 samples, 0.07%)</title><rect x="81.0291%" y="501" width="0.0663%" height="15" fill="rgb(216,100,18)" fg:x="22710966480" fg:w="18592351"/><text x="81.2791%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (7,609,726 samples, 0.03%)</title><rect x="81.0955%" y="549" width="0.0272%" height="15" fill="rgb(236,147,54)" fg:x="22729558831" fg:w="7609726"/><text x="81.3455%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::time::ShardedWheel&gt;&gt; (7,609,726 samples, 0.03%)</title><rect x="81.0955%" y="533" width="0.0272%" height="15" fill="rgb(205,143,26)" fg:x="22729558831" fg:w="7609726"/><text x="81.3455%" y="543.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (7,609,726 samples, 0.03%)</title><rect x="81.0955%" y="517" width="0.0272%" height="15" fill="rgb(236,26,9)" fg:x="22729558831" fg:w="7609726"/><text x="81.3455%" y="527.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (7,609,726 samples, 0.03%)</title><rect x="81.0955%" y="501" width="0.0272%" height="15" fill="rgb(221,165,53)" fg:x="22729558831" fg:w="7609726"/><text x="81.3455%" y="511.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::read (7,460,908 samples, 0.03%)</title><rect x="81.1226%" y="549" width="0.0266%" height="15" fill="rgb(214,110,17)" fg:x="22737168557" fg:w="7460908"/><text x="81.3726%" y="559.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (7,460,908 samples, 0.03%)</title><rect x="81.1226%" y="533" width="0.0266%" height="15" fill="rgb(237,197,12)" fg:x="22737168557" fg:w="7460908"/><text x="81.3726%" y="543.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (7,460,908 samples, 0.03%)</title><rect x="81.1226%" y="517" width="0.0266%" height="15" fill="rgb(205,84,17)" fg:x="22737168557" fg:w="7460908"/><text x="81.3726%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (3,686,709 samples, 0.01%)</title><rect x="81.1624%" y="533" width="0.0132%" height="15" fill="rgb(237,18,45)" fg:x="22748318556" fg:w="3686709"/><text x="81.4124%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3,686,709 samples, 0.01%)</title><rect x="81.1624%" y="517" width="0.0132%" height="15" fill="rgb(221,87,14)" fg:x="22748318556" fg:w="3686709"/><text x="81.4124%" y="527.50"></text></g><g><title>core::slice::index::get_noubcheck (3,686,709 samples, 0.01%)</title><rect x="81.1624%" y="501" width="0.0132%" height="15" fill="rgb(238,186,15)" fg:x="22748318556" fg:w="3686709"/><text x="81.4124%" y="511.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel (22,278,805 samples, 0.08%)</title><rect x="81.1492%" y="549" width="0.0795%" height="15" fill="rgb(208,115,11)" fg:x="22744629465" fg:w="22278805"/><text x="81.3992%" y="559.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (14,903,005 samples, 0.05%)</title><rect x="81.1755%" y="533" width="0.0532%" height="15" fill="rgb(254,175,0)" fg:x="22752005265" fg:w="14903005"/><text x="81.4255%" y="543.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (14,903,005 samples, 0.05%)</title><rect x="81.1755%" y="517" width="0.0532%" height="15" fill="rgb(227,24,42)" fg:x="22752005265" fg:w="14903005"/><text x="81.4255%" y="527.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (14,903,005 samples, 0.05%)</title><rect x="81.1755%" y="501" width="0.0532%" height="15" fill="rgb(223,211,37)" fg:x="22752005265" fg:w="14903005"/><text x="81.4255%" y="511.50"></text></g><g><title>tokio::runtime::time::entry::TimerShared::cached_when (4,022,128 samples, 0.01%)</title><rect x="81.2684%" y="533" width="0.0144%" height="15" fill="rgb(235,49,27)" fg:x="22778019410" fg:w="4022128"/><text x="81.5184%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (4,022,128 samples, 0.01%)</title><rect x="81.2684%" y="517" width="0.0144%" height="15" fill="rgb(254,97,51)" fg:x="22778019410" fg:w="4022128"/><text x="81.5184%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (4,022,128 samples, 0.01%)</title><rect x="81.2684%" y="501" width="0.0144%" height="15" fill="rgb(249,51,40)" fg:x="22778019410" fg:w="4022128"/><text x="81.5184%" y="511.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_for (7,459,825 samples, 0.03%)</title><rect x="81.2899%" y="517" width="0.0266%" height="15" fill="rgb(210,128,45)" fg:x="22784065657" fg:w="7459825"/><text x="81.5399%" y="527.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::clear_entry (113,936,885 samples, 0.41%)</title><rect x="80.9630%" y="565" width="0.4065%" height="15" fill="rgb(224,137,50)" fg:x="22692431188" fg:w="113936885"/><text x="81.2130%" y="575.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::remove (37,585,467 samples, 0.13%)</title><rect x="81.2354%" y="549" width="0.1341%" height="15" fill="rgb(242,15,9)" fg:x="22768782606" fg:w="37585467"/><text x="81.4854%" y="559.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::remove_entry (22,302,416 samples, 0.08%)</title><rect x="81.2899%" y="533" width="0.0796%" height="15" fill="rgb(233,187,41)" fg:x="22784065657" fg:w="22302416"/><text x="81.5399%" y="543.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (14,842,591 samples, 0.05%)</title><rect x="81.3165%" y="517" width="0.0530%" height="15" fill="rgb(227,2,29)" fg:x="22791525482" fg:w="14842591"/><text x="81.5665%" y="527.50"></text></g><g><title>&lt;tokio::runtime::time::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (119,515,700 samples, 0.43%)</title><rect x="80.9565%" y="597" width="0.4264%" height="15" fill="rgb(222,70,3)" fg:x="22690610160" fg:w="119515700"/><text x="81.2065%" y="607.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::cancel (119,515,700 samples, 0.43%)</title><rect x="80.9565%" y="581" width="0.4264%" height="15" fill="rgb(213,11,42)" fg:x="22690610160" fg:w="119515700"/><text x="81.2065%" y="591.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::driver (3,757,787 samples, 0.01%)</title><rect x="81.3695%" y="565" width="0.0134%" height="15" fill="rgb(225,150,9)" fg:x="22806368073" fg:w="3757787"/><text x="81.6195%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::pool::connection::Connection::read::{{closure}}&gt; (158,320,519 samples, 0.56%)</title><rect x="80.8439%" y="645" width="0.5649%" height="15" fill="rgb(230,162,45)" fg:x="22659054340" fg:w="158320519"/><text x="81.0939%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::sleep::Sleep&gt; (126,764,699 samples, 0.45%)</title><rect x="80.9565%" y="629" width="0.4523%" height="15" fill="rgb(222,14,52)" fg:x="22690610160" fg:w="126764699"/><text x="81.2065%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::time::entry::TimerEntry&gt; (126,764,699 samples, 0.45%)</title><rect x="80.9565%" y="613" width="0.4523%" height="15" fill="rgb(254,198,14)" fg:x="22690610160" fg:w="126764699"/><text x="81.2065%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::scheduler::Handle&gt; (7,248,999 samples, 0.03%)</title><rect x="81.3829%" y="597" width="0.0259%" height="15" fill="rgb(220,217,30)" fg:x="22810125860" fg:w="7248999"/><text x="81.6329%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt; (7,248,999 samples, 0.03%)</title><rect x="81.3829%" y="581" width="0.0259%" height="15" fill="rgb(215,146,41)" fg:x="22810125860" fg:w="7248999"/><text x="81.6329%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,248,999 samples, 0.03%)</title><rect x="81.3829%" y="565" width="0.0259%" height="15" fill="rgb(217,27,36)" fg:x="22810125860" fg:w="7248999"/><text x="81.6329%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (27,876,347 samples, 0.10%)</title><rect x="81.4940%" y="565" width="0.0995%" height="15" fill="rgb(219,218,39)" fg:x="22841250840" fg:w="27876347"/><text x="81.7440%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (13,032,673 samples, 0.05%)</title><rect x="81.5469%" y="549" width="0.0465%" height="15" fill="rgb(219,4,42)" fg:x="22856094514" fg:w="13032673"/><text x="81.7969%" y="559.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (13,032,673 samples, 0.05%)</title><rect x="81.5469%" y="533" width="0.0465%" height="15" fill="rgb(249,119,36)" fg:x="22856094514" fg:w="13032673"/><text x="81.7969%" y="543.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (13,032,673 samples, 0.05%)</title><rect x="81.5469%" y="517" width="0.0465%" height="15" fill="rgb(209,23,33)" fg:x="22856094514" fg:w="13032673"/><text x="81.7969%" y="527.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (10,889,727 samples, 0.04%)</title><rect x="81.5546%" y="501" width="0.0389%" height="15" fill="rgb(211,10,0)" fg:x="22858237460" fg:w="10889727"/><text x="81.8046%" y="511.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (10,889,727 samples, 0.04%)</title><rect x="81.5546%" y="485" width="0.0389%" height="15" fill="rgb(208,99,37)" fg:x="22858237460" fg:w="10889727"/><text x="81.8046%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (14,765,728 samples, 0.05%)</title><rect x="81.5934%" y="565" width="0.0527%" height="15" fill="rgb(213,132,31)" fg:x="22869127187" fg:w="14765728"/><text x="81.8434%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (14,765,728 samples, 0.05%)</title><rect x="81.5934%" y="549" width="0.0527%" height="15" fill="rgb(243,129,40)" fg:x="22869127187" fg:w="14765728"/><text x="81.8434%" y="559.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (14,765,728 samples, 0.05%)</title><rect x="81.5934%" y="533" width="0.0527%" height="15" fill="rgb(210,66,33)" fg:x="22869127187" fg:w="14765728"/><text x="81.8434%" y="543.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (14,765,728 samples, 0.05%)</title><rect x="81.5934%" y="517" width="0.0527%" height="15" fill="rgb(209,189,4)" fg:x="22869127187" fg:w="14765728"/><text x="81.8434%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (16,457,416 samples, 0.06%)</title><rect x="81.6461%" y="565" width="0.0587%" height="15" fill="rgb(214,107,37)" fg:x="22883892915" fg:w="16457416"/><text x="81.8961%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::time::ShardedWheel&gt;&gt; (16,457,416 samples, 0.06%)</title><rect x="81.6461%" y="549" width="0.0587%" height="15" fill="rgb(245,88,54)" fg:x="22883892915" fg:w="16457416"/><text x="81.8961%" y="559.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (16,457,416 samples, 0.06%)</title><rect x="81.6461%" y="533" width="0.0587%" height="15" fill="rgb(205,146,20)" fg:x="22883892915" fg:w="16457416"/><text x="81.8961%" y="543.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (16,457,416 samples, 0.06%)</title><rect x="81.6461%" y="517" width="0.0587%" height="15" fill="rgb(220,161,25)" fg:x="22883892915" fg:w="16457416"/><text x="81.8961%" y="527.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::read (9,207,090 samples, 0.03%)</title><rect x="81.7048%" y="565" width="0.0328%" height="15" fill="rgb(215,152,15)" fg:x="22900350331" fg:w="9207090"/><text x="81.9548%" y="575.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (9,207,090 samples, 0.03%)</title><rect x="81.7048%" y="549" width="0.0328%" height="15" fill="rgb(233,192,44)" fg:x="22900350331" fg:w="9207090"/><text x="81.9548%" y="559.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (9,207,090 samples, 0.03%)</title><rect x="81.7048%" y="533" width="0.0328%" height="15" fill="rgb(240,170,46)" fg:x="22900350331" fg:w="9207090"/><text x="81.9548%" y="543.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel (11,270,521 samples, 0.04%)</title><rect x="81.7377%" y="565" width="0.0402%" height="15" fill="rgb(207,104,33)" fg:x="22909557421" fg:w="11270521"/><text x="81.9877%" y="575.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (7,520,442 samples, 0.03%)</title><rect x="81.7510%" y="549" width="0.0268%" height="15" fill="rgb(219,21,39)" fg:x="22913307500" fg:w="7520442"/><text x="82.0010%" y="559.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7,520,442 samples, 0.03%)</title><rect x="81.7510%" y="533" width="0.0268%" height="15" fill="rgb(214,133,29)" fg:x="22913307500" fg:w="7520442"/><text x="82.0010%" y="543.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7,520,442 samples, 0.03%)</title><rect x="81.7510%" y="517" width="0.0268%" height="15" fill="rgb(226,93,6)" fg:x="22913307500" fg:w="7520442"/><text x="82.0010%" y="527.50"></text></g><g><title>tokio::runtime::time::entry::TimerHandle::fire (9,447,872 samples, 0.03%)</title><rect x="81.7779%" y="565" width="0.0337%" height="15" fill="rgb(252,222,34)" fg:x="22920827942" fg:w="9447872"/><text x="82.0279%" y="575.50"></text></g><g><title>tokio::runtime::time::entry::StateCell::fire (9,447,872 samples, 0.03%)</title><rect x="81.7779%" y="549" width="0.0337%" height="15" fill="rgb(252,92,48)" fg:x="22920827942" fg:w="9447872"/><text x="82.0279%" y="559.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (9,447,872 samples, 0.03%)</title><rect x="81.7779%" y="533" width="0.0337%" height="15" fill="rgb(245,223,24)" fg:x="22920827942" fg:w="9447872"/><text x="82.0279%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (9,447,872 samples, 0.03%)</title><rect x="81.7779%" y="517" width="0.0337%" height="15" fill="rgb(205,176,3)" fg:x="22920827942" fg:w="9447872"/><text x="82.0279%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_or (9,447,872 samples, 0.03%)</title><rect x="81.7779%" y="501" width="0.0337%" height="15" fill="rgb(235,151,15)" fg:x="22920827942" fg:w="9447872"/><text x="82.0279%" y="511.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::level_for (9,361,705 samples, 0.03%)</title><rect x="81.8183%" y="549" width="0.0334%" height="15" fill="rgb(237,209,11)" fg:x="22932153209" fg:w="9361705"/><text x="82.0683%" y="559.50"></text></g><g><title>tokio::runtime::time::wheel::level_for (9,361,705 samples, 0.03%)</title><rect x="81.8183%" y="533" width="0.0334%" height="15" fill="rgb(243,227,24)" fg:x="22932153209" fg:w="9361705"/><text x="82.0683%" y="543.50"></text></g><g><title>&lt;tokio::runtime::time::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (116,709,396 samples, 0.42%)</title><rect x="81.4682%" y="613" width="0.4164%" height="15" fill="rgb(239,193,16)" fg:x="22834041433" fg:w="116709396"/><text x="81.7182%" y="623.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::cancel (114,930,954 samples, 0.41%)</title><rect x="81.4746%" y="597" width="0.4101%" height="15" fill="rgb(231,27,9)" fg:x="22835819875" fg:w="114930954"/><text x="81.7246%" y="607.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::clear_entry (113,148,670 samples, 0.40%)</title><rect x="81.4809%" y="581" width="0.4037%" height="15" fill="rgb(219,169,10)" fg:x="22837602159" fg:w="113148670"/><text x="81.7309%" y="591.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::remove (20,475,015 samples, 0.07%)</title><rect x="81.8116%" y="565" width="0.0731%" height="15" fill="rgb(244,229,43)" fg:x="22930275814" fg:w="20475015"/><text x="82.0616%" y="575.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::remove_entry (9,235,915 samples, 0.03%)</title><rect x="81.8517%" y="549" width="0.0330%" height="15" fill="rgb(254,38,20)" fg:x="22941514914" fg:w="9235915"/><text x="82.1017%" y="559.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (7,455,815 samples, 0.03%)</title><rect x="81.8580%" y="533" width="0.0266%" height="15" fill="rgb(250,47,30)" fg:x="22943295014" fg:w="7455815"/><text x="82.1080%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;tokio::runtime::time::entry::TimerShared&gt;&gt;&gt; (3,687,238 samples, 0.01%)</title><rect x="81.8846%" y="613" width="0.0132%" height="15" fill="rgb(224,124,36)" fg:x="22950750829" fg:w="3687238"/><text x="82.1346%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::time::entry::TimerShared&gt;&gt; (3,687,238 samples, 0.01%)</title><rect x="81.8846%" y="597" width="0.0132%" height="15" fill="rgb(246,68,51)" fg:x="22950750829" fg:w="3687238"/><text x="82.1346%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;(tokio::sync::notify::Notified,tokio::time::timeout::Timeout&lt;pgdog::backend::pool::connection::Connection::read::{{closure}}&gt;,pgdog::frontend::client::Client::buffer::{{closure}})&gt; (500,574,238 samples, 1.79%)</title><rect x="80.2309%" y="677" width="1.7860%" height="15" fill="rgb(253,43,49)" fg:x="22487228811" fg:w="500574238"/><text x="80.4809%" y="687.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::timeout::Timeout&lt;pgdog::backend::pool::connection::Connection::read::{{closure}}&gt;&gt; (328,748,709 samples, 1.17%)</title><rect x="80.8439%" y="661" width="1.1729%" height="15" fill="rgb(219,54,36)" fg:x="22659054340" fg:w="328748709"/><text x="81.0939%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::sleep::Sleep&gt; (170,428,190 samples, 0.61%)</title><rect x="81.4088%" y="645" width="0.6081%" height="15" fill="rgb(227,133,34)" fg:x="22817374859" fg:w="170428190"/><text x="81.6588%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::time::entry::TimerEntry&gt; (153,761,616 samples, 0.55%)</title><rect x="81.4682%" y="629" width="0.5486%" height="15" fill="rgb(247,227,15)" fg:x="22834041433" fg:w="153761616"/><text x="81.7182%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::scheduler::Handle&gt; (33,364,982 samples, 0.12%)</title><rect x="81.8978%" y="613" width="0.1190%" height="15" fill="rgb(229,96,14)" fg:x="22954438067" fg:w="33364982"/><text x="82.1478%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::current_thread::Handle&gt;&gt; (27,986,551 samples, 0.10%)</title><rect x="81.9170%" y="597" width="0.0999%" height="15" fill="rgb(220,79,17)" fg:x="22959816498" fg:w="27986551"/><text x="82.1670%" y="607.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27,986,551 samples, 0.10%)</title><rect x="81.9170%" y="581" width="0.0999%" height="15" fill="rgb(205,131,53)" fg:x="22959816498" fg:w="27986551"/><text x="82.1670%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;pgdog::config::ConfigAndUsers&gt;&gt; (20,101,998 samples, 0.07%)</title><rect x="82.0510%" y="661" width="0.0717%" height="15" fill="rgb(209,50,29)" fg:x="22997380780" fg:w="20101998"/><text x="82.3010%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,101,998 samples, 0.07%)</title><rect x="82.0510%" y="645" width="0.0717%" height="15" fill="rgb(245,86,46)" fg:x="22997380780" fg:w="20101998"/><text x="82.3010%" y="655.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (5,622,469 samples, 0.02%)</title><rect x="82.1295%" y="581" width="0.0201%" height="15" fill="rgb(235,66,46)" fg:x="23019391459" fg:w="5622469"/><text x="82.3795%" y="591.50"></text></g><g><title>_rjem_je_sdallocx_default (9,512,193 samples, 0.03%)</title><rect x="82.1227%" y="645" width="0.0339%" height="15" fill="rgb(232,148,31)" fg:x="23017482778" fg:w="9512193"/><text x="82.3727%" y="655.50"></text></g><g><title>isfree (7,603,512 samples, 0.03%)</title><rect x="82.1295%" y="629" width="0.0271%" height="15" fill="rgb(217,149,8)" fg:x="23019391459" fg:w="7603512"/><text x="82.3795%" y="639.50"></text></g><g><title>thread_dalloc_event (7,603,512 samples, 0.03%)</title><rect x="82.1295%" y="613" width="0.0271%" height="15" fill="rgb(209,183,11)" fg:x="23019391459" fg:w="7603512"/><text x="82.3795%" y="623.50"></text></g><g><title>te_event_advance (7,603,512 samples, 0.03%)</title><rect x="82.1295%" y="597" width="0.0271%" height="15" fill="rgb(208,55,20)" fg:x="23019391459" fg:w="7603512"/><text x="82.3795%" y="607.50"></text></g><g><title>_rjem_sdallocx (5,770,839 samples, 0.02%)</title><rect x="82.1567%" y="645" width="0.0206%" height="15" fill="rgb(218,39,14)" fg:x="23026994971" fg:w="5770839"/><text x="82.4067%" y="655.50"></text></g><g><title>free_fastpath (5,770,839 samples, 0.02%)</title><rect x="82.1567%" y="629" width="0.0206%" height="15" fill="rgb(216,169,33)" fg:x="23026994971" fg:w="5770839"/><text x="82.4067%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::client::Client::buffer::{{closure}}&gt; (52,121,299 samples, 0.19%)</title><rect x="82.0168%" y="677" width="0.1860%" height="15" fill="rgb(233,80,24)" fg:x="22987803049" fg:w="52121299"/><text x="82.2668%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::buffer::Buffer&gt; (22,441,570 samples, 0.08%)</title><rect x="82.1227%" y="661" width="0.0801%" height="15" fill="rgb(213,179,31)" fg:x="23017482778" fg:w="22441570"/><text x="82.3727%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage&gt;&gt; (7,158,538 samples, 0.03%)</title><rect x="82.1773%" y="645" width="0.0255%" height="15" fill="rgb(209,19,5)" fg:x="23032765810" fg:w="7158538"/><text x="82.4273%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage&gt;&gt; (5,352,154 samples, 0.02%)</title><rect x="82.1837%" y="629" width="0.0191%" height="15" fill="rgb(219,18,35)" fg:x="23034572194" fg:w="5352154"/><text x="82.4337%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,352,154 samples, 0.02%)</title><rect x="82.1837%" y="613" width="0.0191%" height="15" fill="rgb(209,169,16)" fg:x="23034572194" fg:w="5352154"/><text x="82.4337%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,352,154 samples, 0.02%)</title><rect x="82.1837%" y="597" width="0.0191%" height="15" fill="rgb(245,90,51)" fg:x="23034572194" fg:w="5352154"/><text x="82.4337%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,352,154 samples, 0.02%)</title><rect x="82.1837%" y="581" width="0.0191%" height="15" fill="rgb(220,99,45)" fg:x="23034572194" fg:w="5352154"/><text x="82.4337%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (5,352,154 samples, 0.02%)</title><rect x="82.1837%" y="565" width="0.0191%" height="15" fill="rgb(249,89,25)" fg:x="23034572194" fg:w="5352154"/><text x="82.4337%" y="575.50"></text></g><g><title>__rust_dealloc (5,352,154 samples, 0.02%)</title><rect x="82.1837%" y="549" width="0.0191%" height="15" fill="rgb(239,193,0)" fg:x="23034572194" fg:w="5352154"/><text x="82.4337%" y="559.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (5,352,154 samples, 0.02%)</title><rect x="82.1837%" y="533" width="0.0191%" height="15" fill="rgb(231,126,1)" fg:x="23034572194" fg:w="5352154"/><text x="82.4337%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::client::Client::server_message::{{closure}}&gt; (17,287,595 samples, 0.06%)</title><rect x="82.2028%" y="677" width="0.0617%" height="15" fill="rgb(243,166,3)" fg:x="23039924349" fg:w="17287595"/><text x="82.4528%" y="687.50"></text></g><g><title>pgdog::net::messages::bind::Bind::len (5,567,371 samples, 0.02%)</title><rect x="82.3372%" y="533" width="0.0199%" height="15" fill="rgb(223,22,34)" fg:x="23077604630" fg:w="5567371"/><text x="82.5872%" y="543.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::is_empty (27,870,228 samples, 0.10%)</title><rect x="82.2645%" y="677" width="0.0994%" height="15" fill="rgb(251,52,51)" fg:x="23057211944" fg:w="27870228"/><text x="82.5145%" y="687.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::len (27,870,228 samples, 0.10%)</title><rect x="82.2645%" y="661" width="0.0994%" height="15" fill="rgb(221,165,28)" fg:x="23057211944" fg:w="27870228"/><text x="82.5145%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (27,870,228 samples, 0.10%)</title><rect x="82.2645%" y="645" width="0.0994%" height="15" fill="rgb(218,121,47)" fg:x="23057211944" fg:w="27870228"/><text x="82.5145%" y="655.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (27,870,228 samples, 0.10%)</title><rect x="82.2645%" y="629" width="0.0994%" height="15" fill="rgb(209,120,9)" fg:x="23057211944" fg:w="27870228"/><text x="82.5145%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27,870,228 samples, 0.10%)</title><rect x="82.2645%" y="613" width="0.0994%" height="15" fill="rgb(236,68,12)" fg:x="23057211944" fg:w="27870228"/><text x="82.5145%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27,870,228 samples, 0.10%)</title><rect x="82.2645%" y="597" width="0.0994%" height="15" fill="rgb(225,194,26)" fg:x="23057211944" fg:w="27870228"/><text x="82.5145%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (22,184,146 samples, 0.08%)</title><rect x="82.2848%" y="581" width="0.0791%" height="15" fill="rgb(231,84,39)" fg:x="23062898026" fg:w="22184146"/><text x="82.5348%" y="591.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::len::_{{closure}} (22,184,146 samples, 0.08%)</title><rect x="82.2848%" y="565" width="0.0791%" height="15" fill="rgb(210,11,45)" fg:x="23062898026" fg:w="22184146"/><text x="82.5348%" y="575.50"></text></g><g><title>pgdog::backend::protocol::protocol_message::ProtocolMessage::len (22,184,146 samples, 0.08%)</title><rect x="82.2848%" y="549" width="0.0791%" height="15" fill="rgb(224,54,52)" fg:x="23062898026" fg:w="22184146"/><text x="82.5348%" y="559.50"></text></g><g><title>pgdog::frontend::client::Client::client_messages::_{{closure}} (5,699,595 samples, 0.02%)</title><rect x="82.3639%" y="677" width="0.0203%" height="15" fill="rgb(238,102,14)" fg:x="23085082172" fg:w="5699595"/><text x="82.6139%" y="687.50"></text></g><g><title>&lt;pgdog::net::messages::Message as pgdog::net::messages::Protocol&gt;::code (18,762,042 samples, 0.07%)</title><rect x="82.9826%" y="661" width="0.0669%" height="15" fill="rgb(243,160,52)" fg:x="23258501722" fg:w="18762042"/><text x="83.2326%" y="671.50"></text></g><g><title>[libc.so.6] (21,911,782 samples, 0.08%)</title><rect x="83.0563%" y="629" width="0.0782%" height="15" fill="rgb(216,114,19)" fg:x="23279152437" fg:w="21911782"/><text x="83.3063%" y="639.50"></text></g><g><title>[libc.so.6] (30,969,096 samples, 0.11%)</title><rect x="83.1612%" y="613" width="0.1105%" height="15" fill="rgb(244,166,37)" fg:x="23308555726" fg:w="30969096"/><text x="83.4112%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,std::collections::hash::map::HashMap&lt;pgdog::net::messages::backend_key::BackendKeyData,pgdog::frontend::connected_client::ConnectedClient,core::hash::BuildHasherDefault&lt;fnv::FnvHasher&gt;&gt;&gt;&gt; (13,328,700 samples, 0.05%)</title><rect x="83.2717%" y="613" width="0.0476%" height="15" fill="rgb(246,29,44)" fg:x="23339524822" fg:w="13328700"/><text x="83.5217%" y="623.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (13,328,700 samples, 0.05%)</title><rect x="83.2717%" y="597" width="0.0476%" height="15" fill="rgb(215,56,53)" fg:x="23339524822" fg:w="13328700"/><text x="83.5217%" y="607.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (13,328,700 samples, 0.05%)</title><rect x="83.2717%" y="581" width="0.0476%" height="15" fill="rgb(217,60,2)" fg:x="23339524822" fg:w="13328700"/><text x="83.5217%" y="591.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (11,186,487 samples, 0.04%)</title><rect x="83.3193%" y="613" width="0.0399%" height="15" fill="rgb(207,26,24)" fg:x="23352853522" fg:w="11186487"/><text x="83.5693%" y="623.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (11,186,487 samples, 0.04%)</title><rect x="83.3193%" y="597" width="0.0399%" height="15" fill="rgb(252,210,15)" fg:x="23352853522" fg:w="11186487"/><text x="83.5693%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (3,666,549 samples, 0.01%)</title><rect x="83.3461%" y="581" width="0.0131%" height="15" fill="rgb(253,209,26)" fg:x="23360373460" fg:w="3666549"/><text x="83.5961%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3,666,549 samples, 0.01%)</title><rect x="83.3461%" y="565" width="0.0131%" height="15" fill="rgb(238,170,14)" fg:x="23360373460" fg:w="3666549"/><text x="83.5961%" y="575.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (20,726,736 samples, 0.07%)</title><rect x="83.3655%" y="453" width="0.0739%" height="15" fill="rgb(216,178,15)" fg:x="23365822740" fg:w="20726736"/><text x="83.6155%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (17,070,559 samples, 0.06%)</title><rect x="83.3786%" y="437" width="0.0609%" height="15" fill="rgb(250,197,2)" fg:x="23369478917" fg:w="17070559"/><text x="83.6286%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (22,653,570 samples, 0.08%)</title><rect x="83.3655%" y="565" width="0.0808%" height="15" fill="rgb(212,70,42)" fg:x="23365822740" fg:w="22653570"/><text x="83.6155%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (22,653,570 samples, 0.08%)</title><rect x="83.3655%" y="549" width="0.0808%" height="15" fill="rgb(227,213,9)" fg:x="23365822740" fg:w="22653570"/><text x="83.6155%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (22,653,570 samples, 0.08%)</title><rect x="83.3655%" y="533" width="0.0808%" height="15" fill="rgb(245,99,25)" fg:x="23365822740" fg:w="22653570"/><text x="83.6155%" y="543.50"></text></g><g><title>&lt;pgdog::net::messages::backend_key::BackendKeyData as core::hash::Hash&gt;::hash (22,653,570 samples, 0.08%)</title><rect x="83.3655%" y="517" width="0.0808%" height="15" fill="rgb(250,82,29)" fg:x="23365822740" fg:w="22653570"/><text x="83.6155%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (22,653,570 samples, 0.08%)</title><rect x="83.3655%" y="501" width="0.0808%" height="15" fill="rgb(241,226,54)" fg:x="23365822740" fg:w="22653570"/><text x="83.6155%" y="511.50"></text></g><g><title>core::hash::Hasher::write_i32 (22,653,570 samples, 0.08%)</title><rect x="83.3655%" y="485" width="0.0808%" height="15" fill="rgb(221,99,41)" fg:x="23365822740" fg:w="22653570"/><text x="83.6155%" y="495.50"></text></g><g><title>core::hash::Hasher::write_u32 (22,653,570 samples, 0.08%)</title><rect x="83.3655%" y="469" width="0.0808%" height="15" fill="rgb(213,90,21)" fg:x="23365822740" fg:w="22653570"/><text x="83.6155%" y="479.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (5,659,226 samples, 0.02%)</title><rect x="83.4464%" y="517" width="0.0202%" height="15" fill="rgb(205,208,24)" fg:x="23388476310" fg:w="5659226"/><text x="83.6964%" y="527.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (5,659,226 samples, 0.02%)</title><rect x="83.4464%" y="501" width="0.0202%" height="15" fill="rgb(246,31,12)" fg:x="23388476310" fg:w="5659226"/><text x="83.6964%" y="511.50"></text></g><g><title>core::intrinsics::likely (7,359,507 samples, 0.03%)</title><rect x="83.4666%" y="517" width="0.0263%" height="15" fill="rgb(213,154,6)" fg:x="23394135536" fg:w="7359507"/><text x="83.7166%" y="527.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (7,592,899 samples, 0.03%)</title><rect x="83.4928%" y="517" width="0.0271%" height="15" fill="rgb(222,163,29)" fg:x="23401495043" fg:w="7592899"/><text x="83.7428%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7,592,899 samples, 0.03%)</title><rect x="83.4928%" y="501" width="0.0271%" height="15" fill="rgb(227,201,8)" fg:x="23401495043" fg:w="7592899"/><text x="83.7428%" y="511.50"></text></g><g><title>hashbrown::control::tag::Tag::full (32,802,280 samples, 0.12%)</title><rect x="83.5199%" y="517" width="0.1170%" height="15" fill="rgb(233,9,32)" fg:x="23409087942" fg:w="32802280"/><text x="83.7699%" y="527.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (3,549,758 samples, 0.01%)</title><rect x="83.6369%" y="501" width="0.0127%" height="15" fill="rgb(217,54,24)" fg:x="23441890222" fg:w="3549758"/><text x="83.8869%" y="511.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (3,549,758 samples, 0.01%)</title><rect x="83.6369%" y="485" width="0.0127%" height="15" fill="rgb(235,192,0)" fg:x="23441890222" fg:w="3549758"/><text x="83.8869%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3,549,758 samples, 0.01%)</title><rect x="83.6369%" y="469" width="0.0127%" height="15" fill="rgb(235,45,9)" fg:x="23441890222" fg:w="3549758"/><text x="83.8869%" y="479.50"></text></g><g><title>&lt;pgdog::net::messages::backend_key::BackendKeyData as core::cmp::PartialEq&gt;::eq (3,549,758 samples, 0.01%)</title><rect x="83.6369%" y="453" width="0.0127%" height="15" fill="rgb(246,42,40)" fg:x="23441890222" fg:w="3549758"/><text x="83.8869%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (5,555,706 samples, 0.02%)</title><rect x="83.6369%" y="517" width="0.0198%" height="15" fill="rgb(248,111,24)" fg:x="23441890222" fg:w="5555706"/><text x="83.8869%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::client::inner::InnerBorrow&gt; (171,915,083 samples, 0.61%)</title><rect x="83.0496%" y="661" width="0.6134%" height="15" fill="rgb(249,65,22)" fg:x="23277263764" fg:w="171915083"/><text x="83.2996%" y="671.50"></text></g><g><title>&lt;pgdog::frontend::client::inner::InnerBorrow as core::ops::drop::Drop&gt;::drop (170,026,410 samples, 0.61%)</title><rect x="83.0563%" y="645" width="0.6066%" height="15" fill="rgb(238,111,51)" fg:x="23279152437" fg:w="170026410"/><text x="83.3063%" y="655.50"></text></g><g><title>pgdog::frontend::comms::Comms::stats (148,114,628 samples, 0.53%)</title><rect x="83.1345%" y="629" width="0.5284%" height="15" fill="rgb(250,118,22)" fg:x="23301064219" fg:w="148114628"/><text x="83.3845%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (85,138,838 samples, 0.30%)</title><rect x="83.3592%" y="613" width="0.3038%" height="15" fill="rgb(234,84,26)" fg:x="23364040009" fg:w="85138838"/><text x="83.6092%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (85,138,838 samples, 0.30%)</title><rect x="83.3592%" y="597" width="0.3038%" height="15" fill="rgb(243,172,12)" fg:x="23364040009" fg:w="85138838"/><text x="83.6092%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (83,356,107 samples, 0.30%)</title><rect x="83.3655%" y="581" width="0.2974%" height="15" fill="rgb(236,150,49)" fg:x="23365822740" fg:w="83356107"/><text x="83.6155%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (60,702,537 samples, 0.22%)</title><rect x="83.4464%" y="565" width="0.2166%" height="15" fill="rgb(225,197,26)" fg:x="23388476310" fg:w="60702537"/><text x="83.6964%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (60,702,537 samples, 0.22%)</title><rect x="83.4464%" y="549" width="0.2166%" height="15" fill="rgb(214,17,42)" fg:x="23388476310" fg:w="60702537"/><text x="83.6964%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (60,702,537 samples, 0.22%)</title><rect x="83.4464%" y="533" width="0.2166%" height="15" fill="rgb(224,165,40)" fg:x="23388476310" fg:w="60702537"/><text x="83.6964%" y="543.50"></text></g><g><title>_rjem_sdallocx (5,597,017 samples, 0.02%)</title><rect x="83.6629%" y="613" width="0.0200%" height="15" fill="rgb(246,100,4)" fg:x="23449178847" fg:w="5597017"/><text x="83.9129%" y="623.50"></text></g><g><title>free_fastpath (5,597,017 samples, 0.02%)</title><rect x="83.6629%" y="597" width="0.0200%" height="15" fill="rgb(222,103,0)" fg:x="23449178847" fg:w="5597017"/><text x="83.9129%" y="607.50"></text></g><g><title>cache_bin_dalloc_easy (11,241,535 samples, 0.04%)</title><rect x="83.9439%" y="405" width="0.0401%" height="15" fill="rgb(227,189,26)" fg:x="23527933895" fg:w="11241535"/><text x="84.1939%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (56,685,289 samples, 0.20%)</title><rect x="83.7953%" y="485" width="0.2022%" height="15" fill="rgb(214,202,17)" fg:x="23486284169" fg:w="56685289"/><text x="84.0453%" y="495.50"></text></g><g><title>__rust_dealloc (56,685,289 samples, 0.20%)</title><rect x="83.7953%" y="469" width="0.2022%" height="15" fill="rgb(229,111,3)" fg:x="23486284169" fg:w="56685289"/><text x="84.0453%" y="479.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (56,685,289 samples, 0.20%)</title><rect x="83.7953%" y="453" width="0.2022%" height="15" fill="rgb(229,172,15)" fg:x="23486284169" fg:w="56685289"/><text x="84.0453%" y="463.50"></text></g><g><title>_rjem_sdallocx (54,762,299 samples, 0.20%)</title><rect x="83.8022%" y="437" width="0.1954%" height="15" fill="rgb(230,224,35)" fg:x="23488207159" fg:w="54762299"/><text x="84.0522%" y="447.50"></text></g><g><title>free_fastpath (50,757,430 samples, 0.18%)</title><rect x="83.8165%" y="421" width="0.1811%" height="15" fill="rgb(251,141,6)" fg:x="23492212028" fg:w="50757430"/><text x="84.0665%" y="431.50"></text></g><g><title>core::mem::drop (64,027,051 samples, 0.23%)</title><rect x="83.7759%" y="549" width="0.2284%" height="15" fill="rgb(225,208,6)" fg:x="23480842928" fg:w="64027051"/><text x="84.0259%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (64,027,051 samples, 0.23%)</title><rect x="83.7759%" y="533" width="0.2284%" height="15" fill="rgb(246,181,16)" fg:x="23480842928" fg:w="64027051"/><text x="84.0259%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (58,585,810 samples, 0.21%)</title><rect x="83.7953%" y="517" width="0.2090%" height="15" fill="rgb(227,129,36)" fg:x="23486284169" fg:w="58585810"/><text x="84.0453%" y="527.50"></text></g><g><title>&lt;bytes::bytes::Shared as core::ops::drop::Drop&gt;::drop (58,585,810 samples, 0.21%)</title><rect x="83.7953%" y="501" width="0.2090%" height="15" fill="rgb(248,117,24)" fg:x="23486284169" fg:w="58585810"/><text x="84.0453%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::messages::Message&gt; (97,531,333 samples, 0.35%)</title><rect x="83.6629%" y="661" width="0.3480%" height="15" fill="rgb(214,185,35)" fg:x="23449178847" fg:w="97531333"/><text x="83.9129%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (97,531,333 samples, 0.35%)</title><rect x="83.6629%" y="645" width="0.3480%" height="15" fill="rgb(236,150,34)" fg:x="23449178847" fg:w="97531333"/><text x="83.9129%" y="655.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (97,531,333 samples, 0.35%)</title><rect x="83.6629%" y="629" width="0.3480%" height="15" fill="rgb(243,228,27)" fg:x="23449178847" fg:w="97531333"/><text x="83.9129%" y="639.50"></text></g><g><title>bytes::bytes::promotable_even_drop (91,934,316 samples, 0.33%)</title><rect x="83.6829%" y="613" width="0.3280%" height="15" fill="rgb(245,77,44)" fg:x="23454775864" fg:w="91934316"/><text x="83.9329%" y="623.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (91,934,316 samples, 0.33%)</title><rect x="83.6829%" y="597" width="0.3280%" height="15" fill="rgb(235,214,42)" fg:x="23454775864" fg:w="91934316"/><text x="83.9329%" y="607.50"></text></g><g><title>bytes::bytes::promotable_even_drop::_{{closure}} (77,472,659 samples, 0.28%)</title><rect x="83.7345%" y="581" width="0.2764%" height="15" fill="rgb(221,74,3)" fg:x="23469237521" fg:w="77472659"/><text x="83.9845%" y="591.50"></text></g><g><title>bytes::bytes::release_shared (77,472,659 samples, 0.28%)</title><rect x="83.7345%" y="565" width="0.2764%" height="15" fill="rgb(206,121,29)" fg:x="23469237521" fg:w="77472659"/><text x="83.9845%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (8,215,673 samples, 0.03%)</title><rect x="84.0109%" y="565" width="0.0293%" height="15" fill="rgb(249,131,53)" fg:x="23546710180" fg:w="8215673"/><text x="84.2609%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8,215,673 samples, 0.03%)</title><rect x="84.0109%" y="549" width="0.0293%" height="15" fill="rgb(236,170,29)" fg:x="23546710180" fg:w="8215673"/><text x="84.2609%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (8,215,673 samples, 0.03%)</title><rect x="84.0109%" y="533" width="0.0293%" height="15" fill="rgb(247,96,15)" fg:x="23546710180" fg:w="8215673"/><text x="84.2609%" y="543.50"></text></g><g><title>__rust_dealloc (8,215,673 samples, 0.03%)</title><rect x="84.0109%" y="517" width="0.0293%" height="15" fill="rgb(211,210,7)" fg:x="23546710180" fg:w="8215673"/><text x="84.2609%" y="527.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (8,215,673 samples, 0.03%)</title><rect x="84.0109%" y="501" width="0.0293%" height="15" fill="rgb(240,88,50)" fg:x="23546710180" fg:w="8215673"/><text x="84.2609%" y="511.50"></text></g><g><title>_rjem_sdallocx (5,827,201 samples, 0.02%)</title><rect x="84.0194%" y="485" width="0.0208%" height="15" fill="rgb(209,229,26)" fg:x="23549098652" fg:w="5827201"/><text x="84.2694%" y="495.50"></text></g><g><title>free_fastpath (3,857,385 samples, 0.01%)</title><rect x="84.0265%" y="469" width="0.0138%" height="15" fill="rgb(210,68,23)" fg:x="23551068468" fg:w="3857385"/><text x="84.2765%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::parameter::Parameters&gt; (10,111,566 samples, 0.04%)</title><rect x="84.0109%" y="661" width="0.0361%" height="15" fill="rgb(229,180,13)" fg:x="23546710180" fg:w="10111566"/><text x="84.2609%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,alloc::string::String&gt;&gt; (10,111,566 samples, 0.04%)</title><rect x="84.0109%" y="645" width="0.0361%" height="15" fill="rgb(236,53,44)" fg:x="23546710180" fg:w="10111566"/><text x="84.2609%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,alloc::string::String,std::hash::random::RandomState&gt;&gt; (10,111,566 samples, 0.04%)</title><rect x="84.0109%" y="629" width="0.0361%" height="15" fill="rgb(244,214,29)" fg:x="23546710180" fg:w="10111566"/><text x="84.2609%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (10,111,566 samples, 0.04%)</title><rect x="84.0109%" y="613" width="0.0361%" height="15" fill="rgb(220,75,29)" fg:x="23546710180" fg:w="10111566"/><text x="84.2609%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,111,566 samples, 0.04%)</title><rect x="84.0109%" y="597" width="0.0361%" height="15" fill="rgb(214,183,37)" fg:x="23546710180" fg:w="10111566"/><text x="84.2609%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (10,111,566 samples, 0.04%)</title><rect x="84.0109%" y="581" width="0.0361%" height="15" fill="rgb(239,117,29)" fg:x="23546710180" fg:w="10111566"/><text x="84.2609%" y="591.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::done (27,643,812 samples, 0.10%)</title><rect x="84.0470%" y="661" width="0.0986%" height="15" fill="rgb(237,171,35)" fg:x="23556821747" fg:w="27643812"/><text x="84.2970%" y="671.50"></text></g><g><title>pgdog::backend::pool::connection::binding::Binding::done (27,643,812 samples, 0.10%)</title><rect x="84.0470%" y="645" width="0.0986%" height="15" fill="rgb(229,178,53)" fg:x="23556821747" fg:w="27643812"/><text x="84.2970%" y="655.50"></text></g><g><title>pgdog::frontend::client::inner::Inner::reset_router (3,909,942 samples, 0.01%)</title><rect x="84.1456%" y="661" width="0.0140%" height="15" fill="rgb(210,102,19)" fg:x="23584465562" fg:w="3909942"/><text x="84.3956%" y="671.50"></text></g><g><title>pgdog::frontend::router::Router::reset (3,909,942 samples, 0.01%)</title><rect x="84.1456%" y="645" width="0.0140%" height="15" fill="rgb(235,127,22)" fg:x="23584465562" fg:w="3909942"/><text x="84.3956%" y="655.50"></text></g><g><title>pgdog::frontend::router::parser::query::QueryParser::reset (3,909,942 samples, 0.01%)</title><rect x="84.1456%" y="629" width="0.0140%" height="15" fill="rgb(244,31,31)" fg:x="23584465562" fg:w="3909942"/><text x="84.3956%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::router::parser::command::Command&gt; (3,909,942 samples, 0.01%)</title><rect x="84.1456%" y="613" width="0.0140%" height="15" fill="rgb(231,43,21)" fg:x="23584465562" fg:w="3909942"/><text x="84.3956%" y="623.50"></text></g><g><title>pgdog::frontend::stats::Stats::idle (13,251,932 samples, 0.05%)</title><rect x="84.1596%" y="661" width="0.0473%" height="15" fill="rgb(217,131,35)" fg:x="23588375504" fg:w="13251932"/><text x="84.4096%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (10,906,994 samples, 0.04%)</title><rect x="84.2269%" y="597" width="0.0389%" height="15" fill="rgb(221,149,4)" fg:x="23607233346" fg:w="10906994"/><text x="84.4769%" y="607.50"></text></g><g><title>std::time::Instant::duration_since (14,560,088 samples, 0.05%)</title><rect x="84.2269%" y="645" width="0.0519%" height="15" fill="rgb(232,170,28)" fg:x="23607233346" fg:w="14560088"/><text x="84.4769%" y="655.50"></text></g><g><title>std::time::Instant::checked_duration_since (14,560,088 samples, 0.05%)</title><rect x="84.2269%" y="629" width="0.0519%" height="15" fill="rgb(238,56,10)" fg:x="23607233346" fg:w="14560088"/><text x="84.4769%" y="639.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (14,560,088 samples, 0.05%)</title><rect x="84.2269%" y="613" width="0.0519%" height="15" fill="rgb(235,196,14)" fg:x="23607233346" fg:w="14560088"/><text x="84.4769%" y="623.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (3,653,094 samples, 0.01%)</title><rect x="84.2658%" y="597" width="0.0130%" height="15" fill="rgb(216,45,48)" fg:x="23618140340" fg:w="3653094"/><text x="84.5158%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (3,653,094 samples, 0.01%)</title><rect x="84.2658%" y="581" width="0.0130%" height="15" fill="rgb(238,213,17)" fg:x="23618140340" fg:w="3653094"/><text x="84.5158%" y="591.50"></text></g><g><title>core::cmp::PartialOrd::ge (3,653,094 samples, 0.01%)</title><rect x="84.2658%" y="565" width="0.0130%" height="15" fill="rgb(212,13,2)" fg:x="23618140340" fg:w="3653094"/><text x="84.5158%" y="575.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (3,653,094 samples, 0.01%)</title><rect x="84.2658%" y="549" width="0.0130%" height="15" fill="rgb(240,114,20)" fg:x="23618140340" fg:w="3653094"/><text x="84.5158%" y="559.50"></text></g><g><title>&lt;core::num::niche_types::Nanoseconds as core::cmp::PartialOrd&gt;::partial_cmp (3,653,094 samples, 0.01%)</title><rect x="84.2658%" y="533" width="0.0130%" height="15" fill="rgb(228,41,40)" fg:x="23618140340" fg:w="3653094"/><text x="84.5158%" y="543.50"></text></g><g><title>&lt;core::num::niche_types::Nanoseconds as core::cmp::Ord&gt;::cmp (3,653,094 samples, 0.01%)</title><rect x="84.2658%" y="517" width="0.0130%" height="15" fill="rgb(244,132,35)" fg:x="23618140340" fg:w="3653094"/><text x="84.5158%" y="527.50"></text></g><g><title>pgdog::frontend::stats::Stats::query (115,199,404 samples, 0.41%)</title><rect x="84.2069%" y="661" width="0.4110%" height="15" fill="rgb(253,189,4)" fg:x="23601627436" fg:w="115199404"/><text x="84.4569%" y="671.50"></text></g><g><title>std::time::Instant::now (95,033,406 samples, 0.34%)</title><rect x="84.2788%" y="645" width="0.3391%" height="15" fill="rgb(224,37,19)" fg:x="23621793434" fg:w="95033406"/><text x="84.5288%" y="655.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (95,033,406 samples, 0.34%)</title><rect x="84.2788%" y="629" width="0.3391%" height="15" fill="rgb(235,223,18)" fg:x="23621793434" fg:w="95033406"/><text x="84.5288%" y="639.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (95,033,406 samples, 0.34%)</title><rect x="84.2788%" y="613" width="0.3391%" height="15" fill="rgb(235,163,25)" fg:x="23621793434" fg:w="95033406"/><text x="84.5288%" y="623.50"></text></g><g><title>clock_gettime (91,387,451 samples, 0.33%)</title><rect x="84.2918%" y="597" width="0.3261%" height="15" fill="rgb(217,145,28)" fg:x="23625439389" fg:w="91387451"/><text x="84.5418%" y="607.50"></text></g><g><title>__vdso_clock_gettime (89,517,571 samples, 0.32%)</title><rect x="84.2985%" y="581" width="0.3194%" height="15" fill="rgb(223,223,32)" fg:x="23627309269" fg:w="89517571"/><text x="84.5485%" y="591.50"></text></g><g><title>pgdog::frontend::stats::Stats::transaction (3,763,756 samples, 0.01%)</title><rect x="84.6179%" y="661" width="0.0134%" height="15" fill="rgb(227,189,39)" fg:x="23716826840" fg:w="3763756"/><text x="84.8679%" y="671.50"></text></g><g><title>std::time::Instant::elapsed (3,763,613 samples, 0.01%)</title><rect x="84.6179%" y="645" width="0.0134%" height="15" fill="rgb(248,10,22)" fg:x="23716826983" fg:w="3763613"/><text x="84.8679%" y="655.50"></text></g><g><title>std::time::Instant::now (3,763,613 samples, 0.01%)</title><rect x="84.6179%" y="629" width="0.0134%" height="15" fill="rgb(248,46,39)" fg:x="23716826983" fg:w="3763613"/><text x="84.8679%" y="639.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (3,763,613 samples, 0.01%)</title><rect x="84.6179%" y="613" width="0.0134%" height="15" fill="rgb(248,113,48)" fg:x="23716826983" fg:w="3763613"/><text x="84.8679%" y="623.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (3,763,613 samples, 0.01%)</title><rect x="84.6179%" y="597" width="0.0134%" height="15" fill="rgb(245,16,25)" fg:x="23716826983" fg:w="3763613"/><text x="84.8679%" y="607.50"></text></g><g><title>clock_gettime (3,763,613 samples, 0.01%)</title><rect x="84.6179%" y="581" width="0.0134%" height="15" fill="rgb(249,152,16)" fg:x="23716826983" fg:w="3763613"/><text x="84.8679%" y="591.50"></text></g><g><title>__vdso_clock_gettime (3,763,613 samples, 0.01%)</title><rect x="84.6179%" y="565" width="0.0134%" height="15" fill="rgb(250,16,1)" fg:x="23716826983" fg:w="3763613"/><text x="84.8679%" y="575.50"></text></g><g><title>pgdog::net::messages::Message::backend (5,576,994 samples, 0.02%)</title><rect x="84.6313%" y="661" width="0.0199%" height="15" fill="rgb(249,138,3)" fg:x="23720590596" fg:w="5576994"/><text x="84.8813%" y="671.50"></text></g><g><title>pgdog::net::messages::Message::in_transaction (3,961,914 samples, 0.01%)</title><rect x="84.6512%" y="661" width="0.0141%" height="15" fill="rgb(227,71,41)" fg:x="23726167590" fg:w="3961914"/><text x="84.9012%" y="671.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (68,587,252 samples, 0.24%)</title><rect x="84.9952%" y="645" width="0.2447%" height="15" fill="rgb(209,184,23)" fg:x="23822572626" fg:w="68587252"/><text x="85.2452%" y="655.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (5,691,158 samples, 0.02%)</title><rect x="85.3076%" y="597" width="0.0203%" height="15" fill="rgb(223,215,31)" fg:x="23910146416" fg:w="5691158"/><text x="85.5576%" y="607.50"></text></g><g><title>&lt;pgdog::net::messages::Message as pgdog::net::messages::ToBytes&gt;::to_bytes (47,106,212 samples, 0.17%)</title><rect x="85.2399%" y="645" width="0.1681%" height="15" fill="rgb(210,146,28)" fg:x="23891159878" fg:w="47106212"/><text x="85.4899%" y="655.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (47,106,212 samples, 0.17%)</title><rect x="85.2399%" y="629" width="0.1681%" height="15" fill="rgb(209,183,41)" fg:x="23891159878" fg:w="47106212"/><text x="85.4899%" y="639.50"></text></g><g><title>bytes::bytes::promotable_even_clone (39,762,092 samples, 0.14%)</title><rect x="85.2661%" y="613" width="0.1419%" height="15" fill="rgb(209,224,45)" fg:x="23898503998" fg:w="39762092"/><text x="85.5161%" y="623.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (22,428,516 samples, 0.08%)</title><rect x="85.3279%" y="597" width="0.0800%" height="15" fill="rgb(224,209,51)" fg:x="23915837574" fg:w="22428516"/><text x="85.5779%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (9,183,881 samples, 0.03%)</title><rect x="85.3752%" y="581" width="0.0328%" height="15" fill="rgb(223,17,39)" fg:x="23929082209" fg:w="9183881"/><text x="85.6252%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (7,310,045 samples, 0.03%)</title><rect x="85.3819%" y="565" width="0.0261%" height="15" fill="rgb(234,204,37)" fg:x="23930956045" fg:w="7310045"/><text x="85.6319%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7,310,045 samples, 0.03%)</title><rect x="85.3819%" y="549" width="0.0261%" height="15" fill="rgb(236,120,5)" fg:x="23930956045" fg:w="7310045"/><text x="85.6319%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,310,045 samples, 0.03%)</title><rect x="85.3819%" y="533" width="0.0261%" height="15" fill="rgb(248,97,27)" fg:x="23930956045" fg:w="7310045"/><text x="85.6319%" y="543.50"></text></g><g><title>alloc::alloc::alloc (7,310,045 samples, 0.03%)</title><rect x="85.3819%" y="517" width="0.0261%" height="15" fill="rgb(240,66,17)" fg:x="23930956045" fg:w="7310045"/><text x="85.6319%" y="527.50"></text></g><g><title>__rust_alloc (7,310,045 samples, 0.03%)</title><rect x="85.3819%" y="501" width="0.0261%" height="15" fill="rgb(210,79,3)" fg:x="23930956045" fg:w="7310045"/><text x="85.6319%" y="511.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (7,310,045 samples, 0.03%)</title><rect x="85.3819%" y="485" width="0.0261%" height="15" fill="rgb(214,176,27)" fg:x="23930956045" fg:w="7310045"/><text x="85.6319%" y="495.50"></text></g><g><title>_rjem_malloc (7,310,045 samples, 0.03%)</title><rect x="85.3819%" y="469" width="0.0261%" height="15" fill="rgb(235,185,3)" fg:x="23930956045" fg:w="7310045"/><text x="85.6319%" y="479.50"></text></g><g><title>imalloc_fastpath (7,310,045 samples, 0.03%)</title><rect x="85.3819%" y="453" width="0.0261%" height="15" fill="rgb(227,24,12)" fg:x="23930956045" fg:w="7310045"/><text x="85.6319%" y="463.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (27,837,000 samples, 0.10%)</title><rect x="85.5028%" y="629" width="0.0993%" height="15" fill="rgb(252,169,48)" fg:x="23964863031" fg:w="27837000"/><text x="85.7528%" y="639.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (27,837,000 samples, 0.10%)</title><rect x="85.5028%" y="613" width="0.0993%" height="15" fill="rgb(212,65,1)" fg:x="23964863031" fg:w="27837000"/><text x="85.7528%" y="623.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (27,837,000 samples, 0.10%)</title><rect x="85.5028%" y="597" width="0.0993%" height="15" fill="rgb(242,39,24)" fg:x="23964863031" fg:w="27837000"/><text x="85.7528%" y="607.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (27,837,000 samples, 0.10%)</title><rect x="85.5028%" y="581" width="0.0993%" height="15" fill="rgb(249,32,23)" fg:x="23964863031" fg:w="27837000"/><text x="85.7528%" y="591.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write (26,096,931 samples, 0.09%)</title><rect x="85.5090%" y="565" width="0.0931%" height="15" fill="rgb(251,195,23)" fg:x="23966603100" fg:w="26096931"/><text x="85.7590%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (26,096,931 samples, 0.09%)</title><rect x="85.5090%" y="549" width="0.0931%" height="15" fill="rgb(236,174,8)" fg:x="23966603100" fg:w="26096931"/><text x="85.7590%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (26,096,931 samples, 0.09%)</title><rect x="85.5090%" y="533" width="0.0931%" height="15" fill="rgb(220,197,8)" fg:x="23966603100" fg:w="26096931"/><text x="85.7590%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (26,096,931 samples, 0.09%)</title><rect x="85.5090%" y="517" width="0.0931%" height="15" fill="rgb(240,108,37)" fg:x="23966603100" fg:w="26096931"/><text x="85.7590%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (24,317,866 samples, 0.09%)</title><rect x="85.5154%" y="501" width="0.0868%" height="15" fill="rgb(232,176,24)" fg:x="23968382165" fg:w="24317866"/><text x="85.7654%" y="511.50"></text></g><g><title>[libc.so.6] (24,317,866 samples, 0.09%)</title><rect x="85.5154%" y="485" width="0.0868%" height="15" fill="rgb(243,35,29)" fg:x="23968382165" fg:w="24317866"/><text x="85.7654%" y="495.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (58,317,417 samples, 0.21%)</title><rect x="85.4079%" y="645" width="0.2081%" height="15" fill="rgb(210,37,18)" fg:x="23938266090" fg:w="58317417"/><text x="85.6579%" y="655.50"></text></g><g><title>core::mem::take (3,883,476 samples, 0.01%)</title><rect x="85.6021%" y="629" width="0.0139%" height="15" fill="rgb(224,184,40)" fg:x="23992700031" fg:w="3883476"/><text x="85.8521%" y="639.50"></text></g><g><title>core::mem::replace (3,883,476 samples, 0.01%)</title><rect x="85.6021%" y="613" width="0.0139%" height="15" fill="rgb(236,39,29)" fg:x="23992700031" fg:w="3883476"/><text x="85.8521%" y="623.50"></text></g><g><title>core::ptr::write (3,883,476 samples, 0.01%)</title><rect x="85.6021%" y="597" width="0.0139%" height="15" fill="rgb(232,48,39)" fg:x="23992700031" fg:w="3883476"/><text x="85.8521%" y="607.50"></text></g><g><title>pgdog::net::stream::Stream::send::_{{closure}} (290,338,418 samples, 1.04%)</title><rect x="84.6653%" y="661" width="1.0359%" height="15" fill="rgb(236,34,42)" fg:x="23730129504" fg:w="290338418"/><text x="84.9153%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (23,884,415 samples, 0.09%)</title><rect x="85.6160%" y="645" width="0.0852%" height="15" fill="rgb(243,106,37)" fg:x="23996583507" fg:w="23884415"/><text x="85.8660%" y="655.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (23,884,415 samples, 0.09%)</title><rect x="85.6160%" y="629" width="0.0852%" height="15" fill="rgb(218,96,6)" fg:x="23996583507" fg:w="23884415"/><text x="85.8660%" y="639.50"></text></g><g><title>bytes::bytes::shared_drop (22,115,143 samples, 0.08%)</title><rect x="85.6223%" y="613" width="0.0789%" height="15" fill="rgb(235,130,12)" fg:x="23998352779" fg:w="22115143"/><text x="85.8723%" y="623.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (22,115,143 samples, 0.08%)</title><rect x="85.6223%" y="597" width="0.0789%" height="15" fill="rgb(231,95,0)" fg:x="23998352779" fg:w="22115143"/><text x="85.8723%" y="607.50"></text></g><g><title>bytes::bytes::shared_drop::_{{closure}} (22,115,143 samples, 0.08%)</title><rect x="85.6223%" y="581" width="0.0789%" height="15" fill="rgb(228,12,23)" fg:x="23998352779" fg:w="22115143"/><text x="85.8723%" y="591.50"></text></g><g><title>bytes::bytes::release_shared (16,584,247 samples, 0.06%)</title><rect x="85.6420%" y="565" width="0.0592%" height="15" fill="rgb(216,12,1)" fg:x="24003883675" fg:w="16584247"/><text x="85.8920%" y="575.50"></text></g><g><title>&lt;tokio::io::util::flush::Flush&lt;A&gt; as core::future::future::Future&gt;::poll (3,789,362 samples, 0.01%)</title><rect x="85.7409%" y="645" width="0.0135%" height="15" fill="rgb(219,59,3)" fg:x="24031591329" fg:w="3789362"/><text x="85.9909%" y="655.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="645" width="0.3825%" height="15" fill="rgb(215,208,46)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="655.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::read::_{{closure}} (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="629" width="0.3825%" height="15" fill="rgb(254,224,29)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="639.50"></text></g><g><title>pgdog::backend::server::Server::read::_{{closure}} (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="613" width="0.3825%" height="15" fill="rgb(232,14,29)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="623.50"></text></g><g><title>pgdog::backend::stats::Stats::transaction (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="597" width="0.3825%" height="15" fill="rgb(208,45,52)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="607.50"></text></g><g><title>pgdog::net::stream::Stream::read::_{{closure}} (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="581" width="0.3825%" height="15" fill="rgb(234,191,28)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="591.50"></text></g><g><title>&lt;tokio::io::util::read_exact::ReadExact&lt;A&gt; as core::future::future::Future&gt;::poll (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="565" width="0.3825%" height="15" fill="rgb(244,67,43)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="575.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="549" width="0.3825%" height="15" fill="rgb(236,189,24)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="559.50"></text></g><g><title>&lt;pgdog::net::stream::Stream as tokio::io::async_read::AsyncRead&gt;::poll_read (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="533" width="0.3825%" height="15" fill="rgb(239,214,33)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="543.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="517" width="0.3825%" height="15" fill="rgb(226,176,41)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="527.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="501" width="0.3825%" height="15" fill="rgb(248,47,8)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="511.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="485" width="0.3825%" height="15" fill="rgb(218,81,44)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="469" width="0.3825%" height="15" fill="rgb(213,98,6)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="453" width="0.3825%" height="15" fill="rgb(222,85,22)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="463.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="437" width="0.3825%" height="15" fill="rgb(239,46,39)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="447.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="421" width="0.3825%" height="15" fill="rgb(237,12,29)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="431.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="405" width="0.3825%" height="15" fill="rgb(214,77,8)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="415.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="389" width="0.3825%" height="15" fill="rgb(217,168,37)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="399.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="373" width="0.3825%" height="15" fill="rgb(221,217,23)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="383.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="357" width="0.3825%" height="15" fill="rgb(243,229,36)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="367.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="341" width="0.3825%" height="15" fill="rgb(251,163,40)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="351.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="325" width="0.3825%" height="15" fill="rgb(237,222,12)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="335.50"></text></g><g><title>std::sys::net::connection::socket::TcpStream::read (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="309" width="0.3825%" height="15" fill="rgb(248,132,6)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="319.50"></text></g><g><title>std::sys::net::connection::socket::unix::Socket::read (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="293" width="0.3825%" height="15" fill="rgb(227,167,50)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="303.50"></text></g><g><title>std::sys::net::connection::socket::unix::Socket::recv_with_flags (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="277" width="0.3825%" height="15" fill="rgb(242,84,37)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="287.50"></text></g><g><title>recv (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="261" width="0.3825%" height="15" fill="rgb(212,4,50)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="271.50"></text></g><g><title>[libc.so.6] (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="245" width="0.3825%" height="15" fill="rgb(230,228,32)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="255.50"></text></g><g><title>[libc.so.6] (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="229" width="0.3825%" height="15" fill="rgb(248,217,23)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="239.50"></text></g><g><title>[unknown] (107,195,380 samples, 0.38%)</title><rect x="85.7544%" y="213" width="0.3825%" height="15" fill="rgb(238,197,32)" fg:x="24035380691" fg:w="107195380"/><text x="86.0044%" y="223.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12,783,018 samples, 0.05%)</title><rect x="86.2363%" y="629" width="0.0456%" height="15" fill="rgb(236,106,1)" fg:x="24170455251" fg:w="12783018"/><text x="86.4863%" y="639.50"></text></g><g><title>&lt;pgdog::net::messages::Message as pgdog::net::messages::ToBytes&gt;::to_bytes (11,197,345 samples, 0.04%)</title><rect x="86.2820%" y="629" width="0.0400%" height="15" fill="rgb(219,228,13)" fg:x="24183238269" fg:w="11197345"/><text x="86.5320%" y="639.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (11,197,345 samples, 0.04%)</title><rect x="86.2820%" y="613" width="0.0400%" height="15" fill="rgb(238,30,35)" fg:x="24183238269" fg:w="11197345"/><text x="86.5320%" y="623.50"></text></g><g><title>bytes::bytes::promotable_even_clone (9,417,957 samples, 0.03%)</title><rect x="86.2883%" y="597" width="0.0336%" height="15" fill="rgb(236,70,23)" fg:x="24185017657" fg:w="9417957"/><text x="86.5383%" y="607.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (7,434,488 samples, 0.03%)</title><rect x="86.2954%" y="581" width="0.0265%" height="15" fill="rgb(249,104,48)" fg:x="24187001126" fg:w="7434488"/><text x="86.5454%" y="591.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (22,038,230 samples, 0.08%)</title><rect x="86.3219%" y="629" width="0.0786%" height="15" fill="rgb(254,117,50)" fg:x="24194435614" fg:w="22038230"/><text x="86.5719%" y="639.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (5,455,206 samples, 0.02%)</title><rect x="86.3811%" y="613" width="0.0195%" height="15" fill="rgb(223,152,4)" fg:x="24211018638" fg:w="5455206"/><text x="86.6311%" y="623.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (5,455,206 samples, 0.02%)</title><rect x="86.3811%" y="597" width="0.0195%" height="15" fill="rgb(245,6,2)" fg:x="24211018638" fg:w="5455206"/><text x="86.6311%" y="607.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (5,455,206 samples, 0.02%)</title><rect x="86.3811%" y="581" width="0.0195%" height="15" fill="rgb(249,150,24)" fg:x="24211018638" fg:w="5455206"/><text x="86.6311%" y="591.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (5,455,206 samples, 0.02%)</title><rect x="86.3811%" y="565" width="0.0195%" height="15" fill="rgb(228,185,42)" fg:x="24211018638" fg:w="5455206"/><text x="86.6311%" y="575.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write (5,455,206 samples, 0.02%)</title><rect x="86.3811%" y="549" width="0.0195%" height="15" fill="rgb(226,39,33)" fg:x="24211018638" fg:w="5455206"/><text x="86.6311%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5,455,206 samples, 0.02%)</title><rect x="86.3811%" y="533" width="0.0195%" height="15" fill="rgb(221,166,19)" fg:x="24211018638" fg:w="5455206"/><text x="86.6311%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5,455,206 samples, 0.02%)</title><rect x="86.3811%" y="517" width="0.0195%" height="15" fill="rgb(209,109,2)" fg:x="24211018638" fg:w="5455206"/><text x="86.6311%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5,455,206 samples, 0.02%)</title><rect x="86.3811%" y="501" width="0.0195%" height="15" fill="rgb(252,216,26)" fg:x="24211018638" fg:w="5455206"/><text x="86.6311%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,661,690 samples, 0.01%)</title><rect x="86.3875%" y="485" width="0.0131%" height="15" fill="rgb(227,173,36)" fg:x="24212812154" fg:w="3661690"/><text x="86.6375%" y="495.50"></text></g><g><title>[libc.so.6] (3,661,690 samples, 0.01%)</title><rect x="86.3875%" y="469" width="0.0131%" height="15" fill="rgb(209,90,7)" fg:x="24212812154" fg:w="3661690"/><text x="86.6375%" y="479.50"></text></g><g><title>pgdog::net::stream::Stream::send::_{{closure}} (85,085,409 samples, 0.30%)</title><rect x="86.1369%" y="645" width="0.3036%" height="15" fill="rgb(250,194,11)" fg:x="24142576071" fg:w="85085409"/><text x="86.3869%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (11,187,636 samples, 0.04%)</title><rect x="86.4005%" y="629" width="0.0399%" height="15" fill="rgb(220,72,50)" fg:x="24216473844" fg:w="11187636"/><text x="86.6505%" y="639.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (11,187,636 samples, 0.04%)</title><rect x="86.4005%" y="613" width="0.0399%" height="15" fill="rgb(222,106,48)" fg:x="24216473844" fg:w="11187636"/><text x="86.6505%" y="623.50"></text></g><g><title>bytes::bytes::shared_drop (9,414,552 samples, 0.03%)</title><rect x="86.4069%" y="597" width="0.0336%" height="15" fill="rgb(216,220,45)" fg:x="24218246928" fg:w="9414552"/><text x="86.6569%" y="607.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (3,203,065,044 samples, 11.43%)</title><rect x="86.4798%" y="581" width="11.4280%" height="15" fill="rgb(234,112,18)" fg:x="24238697715" fg:w="3203065044"/><text x="86.7298%" y="591.50">&lt;&amp;mio::net::tcp::..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (3,203,065,044 samples, 11.43%)</title><rect x="86.4798%" y="565" width="11.4280%" height="15" fill="rgb(206,179,9)" fg:x="24238697715" fg:w="3203065044"/><text x="86.7298%" y="575.50">mio::io_source::I..</text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (3,203,065,044 samples, 11.43%)</title><rect x="86.4798%" y="549" width="11.4280%" height="15" fill="rgb(215,115,40)" fg:x="24238697715" fg:w="3203065044"/><text x="86.7298%" y="559.50">mio::sys::unix::s..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (3,203,065,044 samples, 11.43%)</title><rect x="86.4798%" y="533" width="11.4280%" height="15" fill="rgb(222,69,34)" fg:x="24238697715" fg:w="3203065044"/><text x="86.7298%" y="543.50">&lt;&amp;mio::net::tcp::..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (3,203,065,044 samples, 11.43%)</title><rect x="86.4798%" y="517" width="11.4280%" height="15" fill="rgb(209,161,10)" fg:x="24238697715" fg:w="3203065044"/><text x="86.7298%" y="527.50">&lt;&amp;std::net::tcp::..</text></g><g><title>std::sys::net::connection::socket::TcpStream::write (3,203,065,044 samples, 11.43%)</title><rect x="86.4798%" y="501" width="11.4280%" height="15" fill="rgb(217,6,38)" fg:x="24238697715" fg:w="3203065044"/><text x="86.7298%" y="511.50">std::sys::net::co..</text></g><g><title>__send (3,203,065,044 samples, 11.43%)</title><rect x="86.4798%" y="485" width="11.4280%" height="15" fill="rgb(229,229,48)" fg:x="24238697715" fg:w="3203065044"/><text x="86.7298%" y="495.50">__send</text></g><g><title>[libc.so.6] (3,177,565,954 samples, 11.34%)</title><rect x="86.5708%" y="469" width="11.3371%" height="15" fill="rgb(225,21,28)" fg:x="24264196805" fg:w="3177565954"/><text x="86.8208%" y="479.50">[libc.so.6]</text></g><g><title>[libc.so.6] (3,171,773,088 samples, 11.32%)</title><rect x="86.5915%" y="453" width="11.3164%" height="15" fill="rgb(206,33,13)" fg:x="24269989671" fg:w="3171773088"/><text x="86.8415%" y="463.50">[libc.so.6]</text></g><g><title>[unknown] (3,170,103,953 samples, 11.31%)</title><rect x="86.5974%" y="437" width="11.3104%" height="15" fill="rgb(242,178,17)" fg:x="24271658806" fg:w="3170103953"/><text x="86.8474%" y="447.50">[unknown]</text></g><g><title>[unknown] (3,140,500,422 samples, 11.20%)</title><rect x="86.7030%" y="421" width="11.2048%" height="15" fill="rgb(220,162,5)" fg:x="24301262337" fg:w="3140500422"/><text x="86.9530%" y="431.50">[unknown]</text></g><g><title>[unknown] (3,098,983,404 samples, 11.06%)</title><rect x="86.8512%" y="405" width="11.0567%" height="15" fill="rgb(210,33,43)" fg:x="24342779355" fg:w="3098983404"/><text x="87.1012%" y="415.50">[unknown]</text></g><g><title>[unknown] (3,063,661,332 samples, 10.93%)</title><rect x="86.9772%" y="389" width="10.9307%" height="15" fill="rgb(216,116,54)" fg:x="24378101427" fg:w="3063661332"/><text x="87.2272%" y="399.50">[unknown]</text></g><g><title>[unknown] (2,895,987,475 samples, 10.33%)</title><rect x="87.5754%" y="373" width="10.3324%" height="15" fill="rgb(249,92,24)" fg:x="24545775284" fg:w="2895987475"/><text x="87.8254%" y="383.50">[unknown]</text></g><g><title>[unknown] (2,718,601,755 samples, 9.70%)</title><rect x="88.2083%" y="357" width="9.6995%" height="15" fill="rgb(231,189,14)" fg:x="24723161004" fg:w="2718601755"/><text x="88.4583%" y="367.50">[unknown]</text></g><g><title>[unknown] (2,267,583,026 samples, 8.09%)</title><rect x="89.8175%" y="341" width="8.0904%" height="15" fill="rgb(230,8,41)" fg:x="25174179733" fg:w="2267583026"/><text x="90.0675%" y="351.50">[unknown]</text></g><g><title>[unknown] (1,751,532,626 samples, 6.25%)</title><rect x="91.6587%" y="325" width="6.2492%" height="15" fill="rgb(249,7,27)" fg:x="25690230133" fg:w="1751532626"/><text x="91.9087%" y="335.50">[unknown]</text></g><g><title>[unknown] (1,155,966,230 samples, 4.12%)</title><rect x="93.7835%" y="309" width="4.1243%" height="15" fill="rgb(232,86,5)" fg:x="26285796529" fg:w="1155966230"/><text x="94.0335%" y="319.50">[unk..</text></g><g><title>[unknown] (547,353,471 samples, 1.95%)</title><rect x="95.9550%" y="293" width="1.9529%" height="15" fill="rgb(224,175,18)" fg:x="26894409288" fg:w="547353471"/><text x="96.2050%" y="303.50">[..</text></g><g><title>[unknown] (88,364,537 samples, 0.32%)</title><rect x="97.5926%" y="277" width="0.3153%" height="15" fill="rgb(220,129,12)" fg:x="27353398222" fg:w="88364537"/><text x="97.8426%" y="287.50"></text></g><g><title>[unknown] (5,704,220 samples, 0.02%)</title><rect x="97.8875%" y="261" width="0.0204%" height="15" fill="rgb(210,19,36)" fg:x="27436058539" fg:w="5704220"/><text x="98.1375%" y="271.50"></text></g><g><title>[unknown] (5,704,220 samples, 0.02%)</title><rect x="97.8875%" y="245" width="0.0204%" height="15" fill="rgb(219,96,14)" fg:x="27436058539" fg:w="5704220"/><text x="98.1375%" y="255.50"></text></g><g><title>[unknown] (5,704,220 samples, 0.02%)</title><rect x="97.8875%" y="229" width="0.0204%" height="15" fill="rgb(249,106,1)" fg:x="27436058539" fg:w="5704220"/><text x="98.1375%" y="239.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (3,723,086 samples, 0.01%)</title><rect x="97.9271%" y="549" width="0.0133%" height="15" fill="rgb(249,155,20)" fg:x="27447143373" fg:w="3723086"/><text x="98.1771%" y="559.50"></text></g><g><title>pgdog::frontend::client::Client::server_message::_{{closure}} (4,361,895,742 samples, 15.56%)</title><rect x="82.3842%" y="677" width="15.5626%" height="15" fill="rgb(244,168,9)" fg:x="23090781767" fg:w="4361895742"/><text x="82.6342%" y="687.50">pgdog::frontend::client:..</text></g><g><title>pgdog::net::stream::Stream::send_flush::_{{closure}} (3,432,209,587 samples, 12.25%)</title><rect x="85.7012%" y="661" width="12.2456%" height="15" fill="rgb(216,23,50)" fg:x="24020467922" fg:w="3432209587"/><text x="85.9512%" y="671.50">pgdog::net::stream..</text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (3,225,016,029 samples, 11.51%)</title><rect x="86.4405%" y="645" width="11.5063%" height="15" fill="rgb(224,219,20)" fg:x="24227661480" fg:w="3225016029"/><text x="86.6905%" y="655.50">tokio::io::util::..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (3,219,505,565 samples, 11.49%)</title><rect x="86.4601%" y="629" width="11.4867%" height="15" fill="rgb(222,156,15)" fg:x="24233171944" fg:w="3219505565"/><text x="86.7101%" y="639.50">&lt;tokio::net::tcp:..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (3,217,680,048 samples, 11.48%)</title><rect x="86.4666%" y="613" width="11.4802%" height="15" fill="rgb(231,97,17)" fg:x="24234997461" fg:w="3217680048"/><text x="86.7166%" y="623.50">tokio::net::tcp::..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (3,217,680,048 samples, 11.48%)</title><rect x="86.4666%" y="597" width="11.4802%" height="15" fill="rgb(218,70,48)" fg:x="24234997461" fg:w="3217680048"/><text x="86.7166%" y="607.50">tokio::io::poll_e..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (10,914,750 samples, 0.04%)</title><rect x="97.9079%" y="581" width="0.0389%" height="15" fill="rgb(212,196,52)" fg:x="27441762759" fg:w="10914750"/><text x="98.1579%" y="591.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (10,914,750 samples, 0.04%)</title><rect x="97.9079%" y="565" width="0.0389%" height="15" fill="rgb(243,203,18)" fg:x="27441762759" fg:w="10914750"/><text x="98.1579%" y="575.50"></text></g><g><title>pgdog::net::stream::Stream::read::_{{closure}} (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="677" width="0.3689%" height="15" fill="rgb(252,125,41)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="687.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="661" width="0.3689%" height="15" fill="rgb(223,180,33)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="645" width="0.3689%" height="15" fill="rgb(254,159,46)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="629" width="0.3689%" height="15" fill="rgb(254,38,10)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="613" width="0.3689%" height="15" fill="rgb(208,217,32)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="597" width="0.3689%" height="15" fill="rgb(221,120,13)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="581" width="0.3689%" height="15" fill="rgb(246,54,52)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="565" width="0.3689%" height="15" fill="rgb(242,34,25)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="549" width="0.3689%" height="15" fill="rgb(247,209,9)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="559.50"></text></g><g><title>alloc::alloc::alloc (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="533" width="0.3689%" height="15" fill="rgb(228,71,26)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="543.50"></text></g><g><title>__rust_alloc (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="517" width="0.3689%" height="15" fill="rgb(222,145,49)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="527.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="501" width="0.3689%" height="15" fill="rgb(218,121,17)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="511.50"></text></g><g><title>&lt;pgdog::net::stream::Stream as tokio::io::async_read::AsyncRead&gt;::poll_read (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="485" width="0.3689%" height="15" fill="rgb(244,50,7)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="495.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="469" width="0.3689%" height="15" fill="rgb(246,229,37)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="479.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="453" width="0.3689%" height="15" fill="rgb(225,18,5)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="463.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="437" width="0.3689%" height="15" fill="rgb(213,204,8)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="421" width="0.3689%" height="15" fill="rgb(238,103,6)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="405" width="0.3689%" height="15" fill="rgb(222,25,35)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="415.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="389" width="0.3689%" height="15" fill="rgb(213,203,35)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="399.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="373" width="0.3689%" height="15" fill="rgb(221,79,53)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="383.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="357" width="0.3689%" height="15" fill="rgb(243,200,35)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="367.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="341" width="0.3689%" height="15" fill="rgb(248,60,25)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="351.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="325" width="0.3689%" height="15" fill="rgb(227,53,46)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="335.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="309" width="0.3689%" height="15" fill="rgb(216,120,32)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="319.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="293" width="0.3689%" height="15" fill="rgb(220,134,1)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="303.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="277" width="0.3689%" height="15" fill="rgb(237,168,5)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="287.50"></text></g><g><title>std::sys::net::connection::socket::TcpStream::read (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="261" width="0.3689%" height="15" fill="rgb(231,100,33)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="271.50"></text></g><g><title>std::sys::net::connection::socket::unix::Socket::read (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="245" width="0.3689%" height="15" fill="rgb(236,177,47)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="255.50"></text></g><g><title>std::sys::net::connection::socket::unix::Socket::recv_with_flags (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="229" width="0.3689%" height="15" fill="rgb(235,7,49)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="239.50"></text></g><g><title>recv (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="213" width="0.3689%" height="15" fill="rgb(232,119,22)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="223.50"></text></g><g><title>[libc.so.6] (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="197" width="0.3689%" height="15" fill="rgb(254,73,53)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="207.50"></text></g><g><title>[libc.so.6] (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="181" width="0.3689%" height="15" fill="rgb(251,35,20)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="191.50"></text></g><g><title>[unknown] (103,385,255 samples, 0.37%)</title><rect x="97.9468%" y="165" width="0.3689%" height="15" fill="rgb(241,119,20)" fg:x="27452677509" fg:w="103385255"/><text x="98.1968%" y="175.50"></text></g><g><title>tokio::sync::notify::Notify::notified (54,621,609 samples, 0.19%)</title><rect x="98.3157%" y="677" width="0.1949%" height="15" fill="rgb(207,102,14)" fg:x="27556062764" fg:w="54621609"/><text x="98.5657%" y="687.50"></text></g><g><title>clock_gettime (276,039,828 samples, 0.98%)</title><rect x="98.7847%" y="581" width="0.9849%" height="15" fill="rgb(248,201,50)" fg:x="27687532565" fg:w="276039828"/><text x="99.0347%" y="591.50"></text></g><g><title>__vdso_clock_gettime (266,741,955 samples, 0.95%)</title><rect x="98.8179%" y="565" width="0.9517%" height="15" fill="rgb(222,185,44)" fg:x="27696830438" fg:w="266741955"/><text x="99.0679%" y="575.50"></text></g><g><title>tokio::time::instant::Instant::now (285,202,940 samples, 1.02%)</title><rect x="98.7781%" y="661" width="1.0176%" height="15" fill="rgb(218,107,18)" fg:x="27685676165" fg:w="285202940"/><text x="99.0281%" y="671.50"></text></g><g><title>tokio::time::instant::variant::now (285,202,940 samples, 1.02%)</title><rect x="98.7781%" y="645" width="1.0176%" height="15" fill="rgb(237,177,39)" fg:x="27685676165" fg:w="285202940"/><text x="99.0281%" y="655.50"></text></g><g><title>std::time::Instant::now (285,202,940 samples, 1.02%)</title><rect x="98.7781%" y="629" width="1.0176%" height="15" fill="rgb(246,69,6)" fg:x="27685676165" fg:w="285202940"/><text x="99.0281%" y="639.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (285,202,940 samples, 1.02%)</title><rect x="98.7781%" y="613" width="1.0176%" height="15" fill="rgb(234,208,37)" fg:x="27685676165" fg:w="285202940"/><text x="99.0281%" y="623.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (285,202,940 samples, 1.02%)</title><rect x="98.7781%" y="597" width="1.0176%" height="15" fill="rgb(225,4,6)" fg:x="27685676165" fg:w="285202940"/><text x="99.0281%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (7,306,712 samples, 0.03%)</title><rect x="99.7696%" y="581" width="0.0261%" height="15" fill="rgb(233,45,0)" fg:x="27963572393" fg:w="7306712"/><text x="100.0196%" y="591.50"></text></g><g><title>tokio::time::sleep::Sleep::far_future (3,812,642 samples, 0.01%)</title><rect x="99.7957%" y="661" width="0.0136%" height="15" fill="rgb(226,136,5)" fg:x="27970879105" fg:w="3812642"/><text x="100.0457%" y="671.50"></text></g><g><title>tokio::time::instant::Instant::far_future (3,812,642 samples, 0.01%)</title><rect x="99.7957%" y="645" width="0.0136%" height="15" fill="rgb(211,91,47)" fg:x="27970879105" fg:w="3812642"/><text x="100.0457%" y="655.50"></text></g><g><title>tokio::time::instant::Instant::now (3,812,642 samples, 0.01%)</title><rect x="99.7957%" y="629" width="0.0136%" height="15" fill="rgb(242,88,51)" fg:x="27970879105" fg:w="3812642"/><text x="100.0457%" y="639.50"></text></g><g><title>tokio::time::instant::variant::now (3,812,642 samples, 0.01%)</title><rect x="99.7957%" y="613" width="0.0136%" height="15" fill="rgb(230,91,28)" fg:x="27970879105" fg:w="3812642"/><text x="100.0457%" y="623.50"></text></g><g><title>std::time::Instant::now (3,812,642 samples, 0.01%)</title><rect x="99.7957%" y="597" width="0.0136%" height="15" fill="rgb(254,186,29)" fg:x="27970879105" fg:w="3812642"/><text x="100.0457%" y="607.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (3,812,642 samples, 0.01%)</title><rect x="99.7957%" y="581" width="0.0136%" height="15" fill="rgb(238,6,4)" fg:x="27970879105" fg:w="3812642"/><text x="100.0457%" y="591.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (3,812,642 samples, 0.01%)</title><rect x="99.7957%" y="565" width="0.0136%" height="15" fill="rgb(221,151,16)" fg:x="27970879105" fg:w="3812642"/><text x="100.0457%" y="575.50"></text></g><g><title>clock_gettime (3,812,642 samples, 0.01%)</title><rect x="99.7957%" y="549" width="0.0136%" height="15" fill="rgb(251,143,52)" fg:x="27970879105" fg:w="3812642"/><text x="100.0457%" y="559.50"></text></g><g><title>__vdso_clock_gettime (3,812,642 samples, 0.01%)</title><rect x="99.7957%" y="533" width="0.0136%" height="15" fill="rgb(206,90,15)" fg:x="27970879105" fg:w="3812642"/><text x="100.0457%" y="543.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (3,610,954 samples, 0.01%)</title><rect x="99.8494%" y="581" width="0.0129%" height="15" fill="rgb(218,35,8)" fg:x="27985931189" fg:w="3610954"/><text x="100.0994%" y="591.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (3,610,954 samples, 0.01%)</title><rect x="99.8494%" y="565" width="0.0129%" height="15" fill="rgb(239,215,6)" fg:x="27985931189" fg:w="3610954"/><text x="100.0994%" y="575.50"></text></g><g><title>core::cell::BorrowRef::new (3,610,954 samples, 0.01%)</title><rect x="99.8494%" y="549" width="0.0129%" height="15" fill="rgb(245,116,39)" fg:x="27985931189" fg:w="3610954"/><text x="100.0994%" y="559.50"></text></g><g><title>core::cell::is_reading (3,610,954 samples, 0.01%)</title><rect x="99.8494%" y="533" width="0.0129%" height="15" fill="rgb(242,65,28)" fg:x="27985931189" fg:w="3610954"/><text x="100.0994%" y="543.50"></text></g><g><title>tokio::runtime::scheduler::Handle::current (33,407,147 samples, 0.12%)</title><rect x="99.8428%" y="645" width="0.1192%" height="15" fill="rgb(252,132,53)" fg:x="27984079746" fg:w="33407147"/><text x="100.0928%" y="655.50"></text></g><g><title>tokio::runtime::context::current::with_current (33,407,147 samples, 0.12%)</title><rect x="99.8428%" y="629" width="0.1192%" height="15" fill="rgb(224,159,50)" fg:x="27984079746" fg:w="33407147"/><text x="100.0928%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (33,407,147 samples, 0.12%)</title><rect x="99.8428%" y="613" width="0.1192%" height="15" fill="rgb(224,93,4)" fg:x="27984079746" fg:w="33407147"/><text x="100.0928%" y="623.50"></text></g><g><title>tokio::runtime::context::current::with_current::_{{closure}} (31,555,704 samples, 0.11%)</title><rect x="99.8494%" y="597" width="0.1126%" height="15" fill="rgb(208,81,34)" fg:x="27985931189" fg:w="31555704"/><text x="100.0994%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (27,944,750 samples, 0.10%)</title><rect x="99.8622%" y="581" width="0.0997%" height="15" fill="rgb(233,92,54)" fg:x="27989542143" fg:w="27944750"/><text x="100.1122%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (27,944,750 samples, 0.10%)</title><rect x="99.8622%" y="565" width="0.0997%" height="15" fill="rgb(237,21,14)" fg:x="27989542143" fg:w="27944750"/><text x="100.1122%" y="575.50"></text></g><g><title>&lt;tokio::runtime::scheduler::Handle as core::clone::Clone&gt;::clone (27,944,750 samples, 0.10%)</title><rect x="99.8622%" y="549" width="0.0997%" height="15" fill="rgb(249,128,51)" fg:x="27989542143" fg:w="27944750"/><text x="100.1122%" y="559.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (14,530,481,260 samples, 51.84%)</title><rect x="48.1330%" y="789" width="51.8425%" height="15" fill="rgb(223,129,24)" fg:x="13490779160" fg:w="14530481260"/><text x="48.3830%" y="799.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;tokio_util::task::task_tracker::TrackedFuture&lt;F&gt; as core::future::future::Future&gt;::poll (14,530,481,260 samples, 51.84%)</title><rect x="48.1330%" y="773" width="51.8425%" height="15" fill="rgb(231,168,25)" fg:x="13490779160" fg:w="14530481260"/><text x="48.3830%" y="783.50">&lt;tokio_util::task::task_tracker::TrackedFuture&lt;F&gt; as core::future::future::Future&gt;::p..</text></g><g><title>pgdog::frontend::listener::Listener::listen::_{{closure}}::_{{closure}} (14,530,481,260 samples, 51.84%)</title><rect x="48.1330%" y="757" width="51.8425%" height="15" fill="rgb(224,39,20)" fg:x="13490779160" fg:w="14530481260"/><text x="48.3830%" y="767.50">pgdog::frontend::listener::Listener::listen::_{{closure}}::_{{closure}}</text></g><g><title>pgdog::frontend::listener::Listener::handle_client::_{{closure}} (14,530,481,260 samples, 51.84%)</title><rect x="48.1330%" y="741" width="51.8425%" height="15" fill="rgb(225,152,53)" fg:x="13490779160" fg:w="14530481260"/><text x="48.3830%" y="751.50">pgdog::frontend::listener::Listener::handle_client::_{{closure}}</text></g><g><title>pgdog::frontend::client::Client::spawn::_{{closure}} (14,530,481,260 samples, 51.84%)</title><rect x="48.1330%" y="725" width="51.8425%" height="15" fill="rgb(252,17,24)" fg:x="13490779160" fg:w="14530481260"/><text x="48.3830%" y="735.50">pgdog::frontend::client::Client::spawn::_{{closure}}</text></g><g><title>pgdog::frontend::client::Client::spawn_internal::_{{closure}} (14,530,481,260 samples, 51.84%)</title><rect x="48.1330%" y="709" width="51.8425%" height="15" fill="rgb(250,114,30)" fg:x="13490779160" fg:w="14530481260"/><text x="48.3830%" y="719.50">pgdog::frontend::client::Client::spawn_internal::_{{closure}}</text></g><g><title>pgdog::frontend::client::Client::run::_{{closure}} (14,530,481,260 samples, 51.84%)</title><rect x="48.1330%" y="693" width="51.8425%" height="15" fill="rgb(229,5,4)" fg:x="13490779160" fg:w="14530481260"/><text x="48.3830%" y="703.50">pgdog::frontend::client::Client::run::_{{closure}}</text></g><g><title>tokio::time::timeout::timeout (410,576,047 samples, 1.46%)</title><rect x="98.5105%" y="677" width="1.4649%" height="15" fill="rgb(225,176,49)" fg:x="27610684373" fg:w="410576047"/><text x="98.7605%" y="687.50"></text></g><g><title>tokio::time::sleep::Sleep::new_timeout (46,568,673 samples, 0.17%)</title><rect x="99.8093%" y="661" width="0.1661%" height="15" fill="rgb(224,221,49)" fg:x="27974691747" fg:w="46568673"/><text x="100.0593%" y="671.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::new (3,773,527 samples, 0.01%)</title><rect x="99.9619%" y="645" width="0.0135%" height="15" fill="rgb(253,169,27)" fg:x="28017486893" fg:w="3773527"/><text x="100.2119%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::Handle::driver (3,773,527 samples, 0.01%)</title><rect x="99.9619%" y="629" width="0.0135%" height="15" fill="rgb(211,206,16)" fg:x="28017486893" fg:w="3773527"/><text x="100.2119%" y="639.50"></text></g><g><title>pgdog::main (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1349" width="51.8543%" height="15" fill="rgb(244,87,35)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1359.50">pgdog::main</text></g><g><title>tokio::runtime::runtime::Runtime::block_on (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1333" width="51.8543%" height="15" fill="rgb(246,28,10)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1343.50">tokio::runtime::runtime::Runtime::block_on</text></g><g><title>tokio::runtime::runtime::Runtime::block_on_inner (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1317" width="51.8543%" height="15" fill="rgb(229,12,44)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1327.50">tokio::runtime::runtime::Runtime::block_on_inner</text></g><g><title>tokio::runtime::scheduler::current_thread::CurrentThread::block_on (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1301" width="51.8543%" height="15" fill="rgb(210,145,37)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1311.50">tokio::runtime::scheduler::current_thread::CurrentThread::block_on</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1285" width="51.8543%" height="15" fill="rgb(227,112,52)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1295.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::current_thread::CurrentThread::block_on::_{{closure}} (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1269" width="51.8543%" height="15" fill="rgb(238,155,34)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1279.50">tokio::runtime::scheduler::current_thread::CurrentThread::block_on::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1253" width="51.8543%" height="15" fill="rgb(239,226,36)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1263.50">tokio::runtime::scheduler::current_thread::CoreGuard::block_on</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::enter (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1237" width="51.8543%" height="15" fill="rgb(230,16,23)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1247.50">tokio::runtime::scheduler::current_thread::CoreGuard::enter</text></g><g><title>tokio::runtime::context::set_scheduler (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1221" width="51.8543%" height="15" fill="rgb(236,171,36)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1231.50">tokio::runtime::context::set_scheduler</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1205" width="51.8543%" height="15" fill="rgb(221,22,14)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1215.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1189" width="51.8543%" height="15" fill="rgb(242,43,11)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1199.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1173" width="51.8543%" height="15" fill="rgb(232,69,23)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1183.50">tokio::runtime::context::set_scheduler::_{{closure}}</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1157" width="51.8543%" height="15" fill="rgb(216,180,54)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1167.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::enter::_{{closure}} (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1141" width="51.8543%" height="15" fill="rgb(216,5,24)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1151.50">tokio::runtime::scheduler::current_thread::CoreGuard::enter::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::_{{closure}} (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1125" width="51.8543%" height="15" fill="rgb(225,89,9)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1135.50">tokio::runtime::scheduler::current_thread::CoreGuard::block_on::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1109" width="51.8543%" height="15" fill="rgb(243,75,33)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1119.50">tokio::runtime::scheduler::current_thread::Context::run_task</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::enter (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1093" width="51.8543%" height="15" fill="rgb(247,141,45)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1103.50">tokio::runtime::scheduler::current_thread::Context::enter</text></g><g><title>tokio::runtime::scheduler::current_thread::Context::run_task::_{{closure}} (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1077" width="51.8543%" height="15" fill="rgb(232,177,36)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1087.50">tokio::runtime::scheduler::current_thread::Context::run_task::_{{closure}}</text></g><g><title>tokio::runtime::coop::budget (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1061" width="51.8543%" height="15" fill="rgb(219,125,36)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1071.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1045" width="51.8543%" height="15" fill="rgb(227,94,9)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1055.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::current_thread::CoreGuard::block_on::_{{closure}}::_{{closure}} (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1029" width="51.8543%" height="15" fill="rgb(240,34,52)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1039.50">tokio::runtime::scheduler::current_thread::CoreGuard::block_on::_{{closure}}::_{{clos..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="1013" width="51.8543%" height="15" fill="rgb(216,45,12)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1023.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="997" width="51.8543%" height="15" fill="rgb(246,21,19)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="1007.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="981" width="51.8543%" height="15" fill="rgb(213,98,42)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="991.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="965" width="51.8543%" height="15" fill="rgb(250,136,47)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="975.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="949" width="51.8543%" height="15" fill="rgb(251,124,27)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="959.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="933" width="51.8543%" height="15" fill="rgb(229,180,14)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="943.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="917" width="51.8543%" height="15" fill="rgb(245,216,25)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="927.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="901" width="51.8543%" height="15" fill="rgb(251,43,5)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="911.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="885" width="51.8543%" height="15" fill="rgb(250,128,24)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="895.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="869" width="51.8543%" height="15" fill="rgb(217,117,27)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="879.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::c..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="853" width="51.8543%" height="15" fill="rgb(245,147,4)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="863.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="837" width="51.8543%" height="15" fill="rgb(242,201,35)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="847.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="821" width="51.8543%" height="15" fill="rgb(218,181,1)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="831.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (14,533,790,983 samples, 51.85%)</title><rect x="48.1330%" y="805" width="51.8543%" height="15" fill="rgb(222,6,29)" fg:x="13490779160" fg:w="14533790983"/><text x="48.3830%" y="815.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>pgdog::backend::pool::monitor::Monitor::run::_{{closure}} (3,309,723 samples, 0.01%)</title><rect x="99.9754%" y="789" width="0.0118%" height="15" fill="rgb(208,186,3)" fg:x="28021260420" fg:w="3309723"/><text x="100.2254%" y="799.50"></text></g><g><title>pgdog::backend::pool::monitor::Monitor::spawn::_{{closure}} (3,309,723 samples, 0.01%)</title><rect x="99.9754%" y="773" width="0.0118%" height="15" fill="rgb(216,36,26)" fg:x="28021260420" fg:w="3309723"/><text x="100.2254%" y="783.50"></text></g><g><title>pgdog::backend::pool::monitor::Monitor::replenish::_{{closure}} (3,309,723 samples, 0.01%)</title><rect x="99.9754%" y="757" width="0.0118%" height="15" fill="rgb(248,201,23)" fg:x="28021260420" fg:w="3309723"/><text x="100.2254%" y="767.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (3,309,723 samples, 0.01%)</title><rect x="99.9754%" y="741" width="0.0118%" height="15" fill="rgb(251,170,31)" fg:x="28021260420" fg:w="3309723"/><text x="100.2254%" y="751.50"></text></g><g><title>all (28,028,152,838 samples, 100%)</title><rect x="0.0000%" y="1381" width="100.0000%" height="15" fill="rgb(207,110,25)" fg:x="0" fg:w="28028152838"/><text x="0.2500%" y="1391.50"></text></g><g><title>pgdog (28,028,152,838 samples, 100.00%)</title><rect x="0.0000%" y="1365" width="100.0000%" height="15" fill="rgb(250,54,15)" fg:x="0" fg:w="28028152838"/><text x="0.2500%" y="1375.50">pgdog</text></g><g><title>recv (3,582,695 samples, 0.01%)</title><rect x="99.9872%" y="1349" width="0.0128%" height="15" fill="rgb(227,68,33)" fg:x="28024570143" fg:w="3582695"/><text x="100.2372%" y="1359.50"></text></g><g><title>[libc.so.6] (3,582,695 samples, 0.01%)</title><rect x="99.9872%" y="1333" width="0.0128%" height="15" fill="rgb(238,34,41)" fg:x="28024570143" fg:w="3582695"/><text x="100.2372%" y="1343.50"></text></g></svg></svg>