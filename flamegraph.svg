<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1846" onload="init(evt)" viewBox="0 0 1200 1846" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1846" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1829.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1829.00"> </text><svg id="frames" x="10" width="1180" total_samples="4644745725"><g><title>[ld-linux-x86-64.so.2] (4,954,396 samples, 0.11%)</title><rect x="0.0000%" y="1701" width="0.1067%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4954396"/><text x="0.2500%" y="1711.50"></text></g><g><title>[ld-linux-x86-64.so.2] (4,954,396 samples, 0.11%)</title><rect x="0.0000%" y="1685" width="0.1067%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="4954396"/><text x="0.2500%" y="1695.50"></text></g><g><title>[unknown] (4,954,396 samples, 0.11%)</title><rect x="0.0000%" y="1669" width="0.1067%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="4954396"/><text x="0.2500%" y="1679.50"></text></g><g><title>[unknown] (4,954,396 samples, 0.11%)</title><rect x="0.0000%" y="1653" width="0.1067%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="4954396"/><text x="0.2500%" y="1663.50"></text></g><g><title>[unknown] (4,954,396 samples, 0.11%)</title><rect x="0.0000%" y="1637" width="0.1067%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="4954396"/><text x="0.2500%" y="1647.50"></text></g><g><title>[unknown] (4,954,396 samples, 0.11%)</title><rect x="0.0000%" y="1621" width="0.1067%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="4954396"/><text x="0.2500%" y="1631.50"></text></g><g><title>[unknown] (4,954,396 samples, 0.11%)</title><rect x="0.0000%" y="1605" width="0.1067%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="4954396"/><text x="0.2500%" y="1615.50"></text></g><g><title>[unknown] (4,954,396 samples, 0.11%)</title><rect x="0.0000%" y="1589" width="0.1067%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="4954396"/><text x="0.2500%" y="1599.50"></text></g><g><title>[unknown] (4,954,396 samples, 0.11%)</title><rect x="0.0000%" y="1573" width="0.1067%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="4954396"/><text x="0.2500%" y="1583.50"></text></g><g><title>[unknown] (4,954,396 samples, 0.11%)</title><rect x="0.0000%" y="1557" width="0.1067%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="4954396"/><text x="0.2500%" y="1567.50"></text></g><g><title>[unknown] (4,954,396 samples, 0.11%)</title><rect x="0.0000%" y="1541" width="0.1067%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="4954396"/><text x="0.2500%" y="1551.50"></text></g><g><title>[unknown] (4,954,396 samples, 0.11%)</title><rect x="0.0000%" y="1525" width="0.1067%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="4954396"/><text x="0.2500%" y="1535.50"></text></g><g><title>[unknown] (4,954,396 samples, 0.11%)</title><rect x="0.0000%" y="1509" width="0.1067%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="4954396"/><text x="0.2500%" y="1519.50"></text></g><g><title>[unknown] (4,954,396 samples, 0.11%)</title><rect x="0.0000%" y="1493" width="0.1067%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="4954396"/><text x="0.2500%" y="1503.50"></text></g><g><title>[unknown] (4,954,396 samples, 0.11%)</title><rect x="0.0000%" y="1477" width="0.1067%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="4954396"/><text x="0.2500%" y="1487.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5,587,367 samples, 0.12%)</title><rect x="0.0000%" y="1733" width="0.1203%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="5587367"/><text x="0.2500%" y="1743.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5,587,367 samples, 0.12%)</title><rect x="0.0000%" y="1717" width="0.1203%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="5587367"/><text x="0.2500%" y="1727.50"></text></g><g><title>[unknown] (632,971 samples, 0.01%)</title><rect x="0.1067%" y="1701" width="0.0136%" height="15" fill="rgb(210,31,41)" fg:x="4954396" fg:w="632971"/><text x="0.3567%" y="1711.50"></text></g><g><title>[unknown] (632,971 samples, 0.01%)</title><rect x="0.1067%" y="1685" width="0.0136%" height="15" fill="rgb(221,200,47)" fg:x="4954396" fg:w="632971"/><text x="0.3567%" y="1695.50"></text></g><g><title>[unknown] (632,971 samples, 0.01%)</title><rect x="0.1067%" y="1669" width="0.0136%" height="15" fill="rgb(226,26,5)" fg:x="4954396" fg:w="632971"/><text x="0.3567%" y="1679.50"></text></g><g><title>[unknown] (632,971 samples, 0.01%)</title><rect x="0.1067%" y="1653" width="0.0136%" height="15" fill="rgb(249,33,26)" fg:x="4954396" fg:w="632971"/><text x="0.3567%" y="1663.50"></text></g><g><title>[unknown] (632,971 samples, 0.01%)</title><rect x="0.1067%" y="1637" width="0.0136%" height="15" fill="rgb(235,183,28)" fg:x="4954396" fg:w="632971"/><text x="0.3567%" y="1647.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5,636,759 samples, 0.12%)</title><rect x="0.0000%" y="1749" width="0.1214%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="5636759"/><text x="0.2500%" y="1759.50"></text></g><g><title>[ld-linux-x86-64.so.2] (5,636,760 samples, 0.12%)</title><rect x="0.0000%" y="1765" width="0.1214%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="5636760"/><text x="0.2500%" y="1775.50"></text></g><g><title>pgdog::config::load (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1637" width="0.0993%" height="15" fill="rgb(241,131,45)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1647.50"></text></g><g><title>pgdog::config::ShardedTable::load_centroids (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1621" width="0.0993%" height="15" fill="rgb(249,31,29)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1631.50"></text></g><g><title>serde_json::de::from_str (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1605" width="0.0993%" height="15" fill="rgb(225,111,53)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1615.50"></text></g><g><title>serde_json::de::from_trait (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1589" width="0.0993%" height="15" fill="rgb(238,160,17)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1599.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1573" width="0.0993%" height="15" fill="rgb(214,148,48)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1583.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1557" width="0.0993%" height="15" fill="rgb(232,36,49)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1567.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1541" width="0.0993%" height="15" fill="rgb(209,103,24)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1551.50"></text></g><g><title>serde::de::SeqAccess::next_element (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1525" width="0.0993%" height="15" fill="rgb(229,88,8)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1535.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1509" width="0.0993%" height="15" fill="rgb(213,181,19)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1519.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1493" width="0.0993%" height="15" fill="rgb(254,191,54)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1503.50"></text></g><g><title>&lt;pgdog::net::messages::data_types::vector::Vector as serde::de::Deserialize&gt;::deserialize (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1477" width="0.0993%" height="15" fill="rgb(241,83,37)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1487.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1461" width="0.0993%" height="15" fill="rgb(233,36,39)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1471.50"></text></g><g><title>&lt;pgdog::net::messages::data_types::vector::VectorVisitor as serde::de::Visitor&gt;::visit_seq (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1445" width="0.0993%" height="15" fill="rgb(226,3,54)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1455.50"></text></g><g><title>serde::de::SeqAccess::next_element (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1429" width="0.0993%" height="15" fill="rgb(245,192,40)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1439.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1413" width="0.0993%" height="15" fill="rgb(238,167,29)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1423.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1397" width="0.0993%" height="15" fill="rgb(232,182,51)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1407.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for f64&gt;::deserialize (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1381" width="0.0993%" height="15" fill="rgb(231,60,39)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1391.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_f64 (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1365" width="0.0993%" height="15" fill="rgb(208,69,12)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1375.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::deserialize_number (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1349" width="0.0993%" height="15" fill="rgb(235,93,37)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1359.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_number (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1333" width="0.0993%" height="15" fill="rgb(213,116,39)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1343.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_decimal (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1317" width="0.0993%" height="15" fill="rgb(222,207,29)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1327.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::eat_char (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1301" width="0.0993%" height="15" fill="rgb(206,96,30)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1311.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::discard (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1285" width="0.0993%" height="15" fill="rgb(218,138,4)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1295.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (4,611,762 samples, 0.10%)</title><rect x="0.1222%" y="1269" width="0.0993%" height="15" fill="rgb(250,191,14)" fg:x="5674588" fg:w="4611762"/><text x="0.3722%" y="1279.50"></text></g><g><title>tokio::runtime::coop::budget (4,175,686 samples, 0.09%)</title><rect x="0.2215%" y="1525" width="0.0899%" height="15" fill="rgb(239,60,40)" fg:x="10286350" fg:w="4175686"/><text x="0.4715%" y="1535.50"></text></g><g><title>tokio::runtime::coop::with_budget (4,175,686 samples, 0.09%)</title><rect x="0.2215%" y="1509" width="0.0899%" height="15" fill="rgb(206,27,48)" fg:x="10286350" fg:w="4175686"/><text x="0.4715%" y="1519.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on::_{{closure}} (4,175,683 samples, 0.09%)</title><rect x="0.2215%" y="1493" width="0.0899%" height="15" fill="rgb(225,35,8)" fg:x="10286353" fg:w="4175683"/><text x="0.4715%" y="1503.50"></text></g><g><title>pgdog::main::_{{closure}} (4,175,683 samples, 0.09%)</title><rect x="0.2215%" y="1477" width="0.0899%" height="15" fill="rgb(250,213,24)" fg:x="10286353" fg:w="4175683"/><text x="0.4715%" y="1487.50"></text></g><g><title>pgdog::pgdog::_{{closure}} (4,175,683 samples, 0.09%)</title><rect x="0.2215%" y="1461" width="0.0899%" height="15" fill="rgb(247,123,22)" fg:x="10286353" fg:w="4175683"/><text x="0.4715%" y="1471.50"></text></g><g><title>pgdog::net::tls::load (3,905,360 samples, 0.08%)</title><rect x="0.2273%" y="1445" width="0.0841%" height="15" fill="rgb(231,138,38)" fg:x="10556676" fg:w="3905360"/><text x="0.4773%" y="1455.50"></text></g><g><title>pgdog::net::tls::connector (3,905,360 samples, 0.08%)</title><rect x="0.2273%" y="1429" width="0.0841%" height="15" fill="rgb(231,145,46)" fg:x="10556676" fg:w="3905360"/><text x="0.4773%" y="1439.50"></text></g><g><title>rustls_native_certs::load_native_certs (3,905,360 samples, 0.08%)</title><rect x="0.2273%" y="1413" width="0.0841%" height="15" fill="rgb(251,118,11)" fg:x="10556676" fg:w="3905360"/><text x="0.4773%" y="1423.50"></text></g><g><title>rustls_native_certs::CertPaths::load (3,905,360 samples, 0.08%)</title><rect x="0.2273%" y="1397" width="0.0841%" height="15" fill="rgb(217,147,25)" fg:x="10556676" fg:w="3905360"/><text x="0.4773%" y="1407.50"></text></g><g><title>rustls_native_certs::load_pem_certs_from_dir (3,905,360 samples, 0.08%)</title><rect x="0.2273%" y="1381" width="0.0841%" height="15" fill="rgb(247,81,37)" fg:x="10556676" fg:w="3905360"/><text x="0.4773%" y="1391.50"></text></g><g><title>rustls_native_certs::load_pem_certs (3,905,360 samples, 0.08%)</title><rect x="0.2273%" y="1365" width="0.0841%" height="15" fill="rgb(209,12,38)" fg:x="10556676" fg:w="3905360"/><text x="0.4773%" y="1375.50"></text></g><g><title>&lt;rustls_pki_types::pem::ReadIter&lt;R,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,905,360 samples, 0.08%)</title><rect x="0.2273%" y="1349" width="0.0841%" height="15" fill="rgb(227,1,9)" fg:x="10556676" fg:w="3905360"/><text x="0.4773%" y="1359.50"></text></g><g><title>rustls_pki_types::pem::from_buf (3,905,360 samples, 0.08%)</title><rect x="0.2273%" y="1333" width="0.0841%" height="15" fill="rgb(248,47,43)" fg:x="10556676" fg:w="3905360"/><text x="0.4773%" y="1343.50"></text></g><g><title>rustls_pki_types::pem::read (3,905,360 samples, 0.08%)</title><rect x="0.2273%" y="1317" width="0.0841%" height="15" fill="rgb(221,10,30)" fg:x="10556676" fg:w="3905360"/><text x="0.4773%" y="1327.50"></text></g><g><title>rustls_pki_types::base64::decode_public (3,905,360 samples, 0.08%)</title><rect x="0.2273%" y="1301" width="0.0841%" height="15" fill="rgb(210,229,1)" fg:x="10556676" fg:w="3905360"/><text x="0.4773%" y="1311.50"></text></g><g><title>rustls_pki_types::base64::decode (3,905,360 samples, 0.08%)</title><rect x="0.2273%" y="1285" width="0.0841%" height="15" fill="rgb(222,148,37)" fg:x="10556676" fg:w="3905360"/><text x="0.4773%" y="1295.50"></text></g><g><title>core::ops::function::Fn::call (3,905,360 samples, 0.08%)</title><rect x="0.2273%" y="1269" width="0.0841%" height="15" fill="rgb(234,67,33)" fg:x="10556676" fg:w="3905360"/><text x="0.4773%" y="1279.50"></text></g><g><title>rustls_pki_types::base64::CodePoint::decode_public (3,905,360 samples, 0.08%)</title><rect x="0.2273%" y="1253" width="0.0841%" height="15" fill="rgb(247,98,35)" fg:x="10556676" fg:w="3905360"/><text x="0.4773%" y="1263.50"></text></g><g><title>pgdog (14,462,047 samples, 0.31%)</title><rect x="0.0000%" y="1781" width="0.3114%" height="15" fill="rgb(247,138,52)" fg:x="0" fg:w="14462047"/><text x="0.2500%" y="1791.50"></text></g><g><title>_start (8,787,459 samples, 0.19%)</title><rect x="0.1222%" y="1765" width="0.1892%" height="15" fill="rgb(213,79,30)" fg:x="5674588" fg:w="8787459"/><text x="0.3722%" y="1775.50"></text></g><g><title>__libc_start_main (8,787,459 samples, 0.19%)</title><rect x="0.1222%" y="1749" width="0.1892%" height="15" fill="rgb(246,177,23)" fg:x="5674588" fg:w="8787459"/><text x="0.3722%" y="1759.50"></text></g><g><title>[libc.so.6] (8,787,459 samples, 0.19%)</title><rect x="0.1222%" y="1733" width="0.1892%" height="15" fill="rgb(230,62,27)" fg:x="5674588" fg:w="8787459"/><text x="0.3722%" y="1743.50"></text></g><g><title>main (8,787,459 samples, 0.19%)</title><rect x="0.1222%" y="1717" width="0.1892%" height="15" fill="rgb(216,154,8)" fg:x="5674588" fg:w="8787459"/><text x="0.3722%" y="1727.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (8,787,459 samples, 0.19%)</title><rect x="0.1222%" y="1701" width="0.1892%" height="15" fill="rgb(244,35,45)" fg:x="5674588" fg:w="8787459"/><text x="0.3722%" y="1711.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (8,787,459 samples, 0.19%)</title><rect x="0.1222%" y="1685" width="0.1892%" height="15" fill="rgb(251,115,12)" fg:x="5674588" fg:w="8787459"/><text x="0.3722%" y="1695.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8,787,459 samples, 0.19%)</title><rect x="0.1222%" y="1669" width="0.1892%" height="15" fill="rgb(240,54,50)" fg:x="5674588" fg:w="8787459"/><text x="0.3722%" y="1679.50"></text></g><g><title>pgdog::main (8,787,459 samples, 0.19%)</title><rect x="0.1222%" y="1653" width="0.1892%" height="15" fill="rgb(233,84,52)" fg:x="5674588" fg:w="8787459"/><text x="0.3722%" y="1663.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (4,175,697 samples, 0.09%)</title><rect x="0.2215%" y="1637" width="0.0899%" height="15" fill="rgb(207,117,47)" fg:x="10286350" fg:w="4175697"/><text x="0.4715%" y="1647.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on_inner (4,175,697 samples, 0.09%)</title><rect x="0.2215%" y="1621" width="0.0899%" height="15" fill="rgb(249,43,39)" fg:x="10286350" fg:w="4175697"/><text x="0.4715%" y="1631.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (4,175,697 samples, 0.09%)</title><rect x="0.2215%" y="1605" width="0.0899%" height="15" fill="rgb(209,38,44)" fg:x="10286350" fg:w="4175697"/><text x="0.4715%" y="1615.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (4,175,697 samples, 0.09%)</title><rect x="0.2215%" y="1589" width="0.0899%" height="15" fill="rgb(236,212,23)" fg:x="10286350" fg:w="4175697"/><text x="0.4715%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (4,175,697 samples, 0.09%)</title><rect x="0.2215%" y="1573" width="0.0899%" height="15" fill="rgb(242,79,21)" fg:x="10286350" fg:w="4175697"/><text x="0.4715%" y="1583.50"></text></g><g><title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (4,175,697 samples, 0.09%)</title><rect x="0.2215%" y="1557" width="0.0899%" height="15" fill="rgb(211,96,35)" fg:x="10286350" fg:w="4175697"/><text x="0.4715%" y="1567.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (4,175,697 samples, 0.09%)</title><rect x="0.2215%" y="1541" width="0.0899%" height="15" fill="rgb(253,215,40)" fg:x="10286350" fg:w="4175697"/><text x="0.4715%" y="1551.50"></text></g><g><title>[libc.so.6] (1,044,049 samples, 0.02%)</title><rect x="0.3114%" y="1733" width="0.0225%" height="15" fill="rgb(211,81,21)" fg:x="14462047" fg:w="1044049"/><text x="0.5614%" y="1743.50"></text></g><g><title>[unknown] (1,044,049 samples, 0.02%)</title><rect x="0.3114%" y="1717" width="0.0225%" height="15" fill="rgb(208,190,38)" fg:x="14462047" fg:w="1044049"/><text x="0.5614%" y="1727.50"></text></g><g><title>[unknown] (2,553,598 samples, 0.05%)</title><rect x="0.3338%" y="1733" width="0.0550%" height="15" fill="rgb(235,213,38)" fg:x="15506096" fg:w="2553598"/><text x="0.5838%" y="1743.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11,045,287 samples, 0.24%)</title><rect x="0.4338%" y="1093" width="0.2378%" height="15" fill="rgb(237,122,38)" fg:x="20148096" fg:w="11045287"/><text x="0.6838%" y="1103.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (2,084,438 samples, 0.04%)</title><rect x="0.8179%" y="1077" width="0.0449%" height="15" fill="rgb(244,218,35)" fg:x="37988459" fg:w="2084438"/><text x="1.0679%" y="1087.50"></text></g><g><title>std::time::Instant::duration_since (2,084,438 samples, 0.04%)</title><rect x="0.8179%" y="1061" width="0.0449%" height="15" fill="rgb(240,68,47)" fg:x="37988459" fg:w="2084438"/><text x="1.0679%" y="1071.50"></text></g><g><title>std::time::Instant::checked_duration_since (2,084,438 samples, 0.04%)</title><rect x="0.8179%" y="1045" width="0.0449%" height="15" fill="rgb(210,16,53)" fg:x="37988459" fg:w="2084438"/><text x="1.0679%" y="1055.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (2,084,438 samples, 0.04%)</title><rect x="0.8179%" y="1029" width="0.0449%" height="15" fill="rgb(235,124,12)" fg:x="37988459" fg:w="2084438"/><text x="1.0679%" y="1039.50"></text></g><g><title>&lt;f64 as compiler_builtins::float::Float&gt;::from_bits (2,241,935 samples, 0.05%)</title><rect x="0.9151%" y="1029" width="0.0483%" height="15" fill="rgb(224,169,11)" fg:x="42506136" fg:w="2241935"/><text x="1.1651%" y="1039.50"></text></g><g><title>core::f64::&lt;impl f64&gt;::from_bits (2,241,935 samples, 0.05%)</title><rect x="0.9151%" y="1013" width="0.0483%" height="15" fill="rgb(250,166,2)" fg:x="42506136" fg:w="2241935"/><text x="1.1651%" y="1023.50"></text></g><g><title>&lt;i128 as compiler_builtins::int::Int&gt;::unsigned_abs (2,054,133 samples, 0.04%)</title><rect x="0.9634%" y="1029" width="0.0442%" height="15" fill="rgb(242,216,29)" fg:x="44748071" fg:w="2054133"/><text x="1.2134%" y="1039.50"></text></g><g><title>core::num::&lt;impl i128&gt;::unsigned_abs (2,054,133 samples, 0.04%)</title><rect x="0.9634%" y="1013" width="0.0442%" height="15" fill="rgb(230,116,27)" fg:x="44748071" fg:w="2054133"/><text x="1.2134%" y="1023.50"></text></g><g><title>core::num::&lt;impl i128&gt;::wrapping_abs (2,054,133 samples, 0.04%)</title><rect x="0.9634%" y="997" width="0.0442%" height="15" fill="rgb(228,99,48)" fg:x="44748071" fg:w="2054133"/><text x="1.2134%" y="1007.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::m_adj (1,063,665 samples, 0.02%)</title><rect x="1.0076%" y="997" width="0.0229%" height="15" fill="rgb(253,11,6)" fg:x="46802204" fg:w="1063665"/><text x="1.2576%" y="1007.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;u32&gt;&gt;::shr (1,063,665 samples, 0.02%)</title><rect x="1.0076%" y="981" width="0.0229%" height="15" fill="rgb(247,143,39)" fg:x="46802204" fg:w="1063665"/><text x="1.2576%" y="991.50"></text></g><g><title>__floattidf (9,371,502 samples, 0.20%)</title><rect x="0.8628%" y="1077" width="0.2018%" height="15" fill="rgb(236,97,10)" fg:x="40072897" fg:w="9371502"/><text x="1.1128%" y="1087.50"></text></g><g><title>compiler_builtins::float::conv::__floattidf (6,938,263 samples, 0.15%)</title><rect x="0.9151%" y="1061" width="0.1494%" height="15" fill="rgb(233,208,19)" fg:x="42506136" fg:w="6938263"/><text x="1.1651%" y="1071.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::signed (6,938,263 samples, 0.15%)</title><rect x="0.9151%" y="1045" width="0.1494%" height="15" fill="rgb(216,164,2)" fg:x="42506136" fg:w="6938263"/><text x="1.1651%" y="1055.50"></text></g><g><title>core::ops::function::Fn::call (2,642,195 samples, 0.06%)</title><rect x="1.0076%" y="1029" width="0.0569%" height="15" fill="rgb(220,129,5)" fg:x="46802204" fg:w="2642195"/><text x="1.2576%" y="1039.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::u128_to_f64_bits (2,642,195 samples, 0.06%)</title><rect x="1.0076%" y="1013" width="0.0569%" height="15" fill="rgb(242,17,10)" fg:x="46802204" fg:w="2642195"/><text x="1.2576%" y="1023.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (1,578,530 samples, 0.03%)</title><rect x="1.0305%" y="997" width="0.0340%" height="15" fill="rgb(242,107,0)" fg:x="47865869" fg:w="1578530"/><text x="1.2805%" y="1007.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (37,841,551 samples, 0.81%)</title><rect x="1.0645%" y="1077" width="0.8147%" height="15" fill="rgb(251,28,31)" fg:x="49444399" fg:w="37841551"/><text x="1.3145%" y="1087.50"></text></g><g><title>pow (37,841,551 samples, 0.81%)</title><rect x="1.0645%" y="1061" width="0.8147%" height="15" fill="rgb(233,223,10)" fg:x="49444399" fg:w="37841551"/><text x="1.3145%" y="1071.50"></text></g><g><title>[libm.so.6] (30,835,478 samples, 0.66%)</title><rect x="1.2154%" y="1045" width="0.6639%" height="15" fill="rgb(215,21,27)" fg:x="56450472" fg:w="30835478"/><text x="1.4654%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (67,825,536 samples, 1.46%)</title><rect x="0.6716%" y="1093" width="1.4603%" height="15" fill="rgb(232,23,21)" fg:x="31193383" fg:w="67825536"/><text x="0.9216%" y="1103.50"></text></g><g><title>std::time::Instant::now (11,732,969 samples, 0.25%)</title><rect x="1.8792%" y="1077" width="0.2526%" height="15" fill="rgb(244,5,23)" fg:x="87285950" fg:w="11732969"/><text x="2.1292%" y="1087.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (11,732,969 samples, 0.25%)</title><rect x="1.8792%" y="1061" width="0.2526%" height="15" fill="rgb(226,81,46)" fg:x="87285950" fg:w="11732969"/><text x="2.1292%" y="1071.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (11,732,969 samples, 0.25%)</title><rect x="1.8792%" y="1045" width="0.2526%" height="15" fill="rgb(247,70,30)" fg:x="87285950" fg:w="11732969"/><text x="2.1292%" y="1055.50"></text></g><g><title>clock_gettime (11,732,969 samples, 0.25%)</title><rect x="1.8792%" y="1029" width="0.2526%" height="15" fill="rgb(212,68,19)" fg:x="87285950" fg:w="11732969"/><text x="2.1292%" y="1039.50"></text></g><g><title>__vdso_clock_gettime (10,773,885 samples, 0.23%)</title><rect x="1.8999%" y="1013" width="0.2320%" height="15" fill="rgb(240,187,13)" fg:x="88245034" fg:w="10773885"/><text x="2.1499%" y="1023.50"></text></g><g><title>__floattidf (1,016,141 samples, 0.02%)</title><rect x="2.1576%" y="1061" width="0.0219%" height="15" fill="rgb(223,113,26)" fg:x="100215091" fg:w="1016141"/><text x="2.4076%" y="1071.50"></text></g><g><title>compiler_builtins::float::conv::__floattidf (1,016,141 samples, 0.02%)</title><rect x="2.1576%" y="1045" width="0.0219%" height="15" fill="rgb(206,192,2)" fg:x="100215091" fg:w="1016141"/><text x="2.4076%" y="1055.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::signed (1,016,141 samples, 0.02%)</title><rect x="2.1576%" y="1029" width="0.0219%" height="15" fill="rgb(241,108,4)" fg:x="100215091" fg:w="1016141"/><text x="2.4076%" y="1039.50"></text></g><g><title>core::ops::function::Fn::call (1,016,141 samples, 0.02%)</title><rect x="2.1576%" y="1013" width="0.0219%" height="15" fill="rgb(247,173,49)" fg:x="100215091" fg:w="1016141"/><text x="2.4076%" y="1023.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::u128_to_f64_bits (1,016,141 samples, 0.02%)</title><rect x="2.1576%" y="997" width="0.0219%" height="15" fill="rgb(224,114,35)" fg:x="100215091" fg:w="1016141"/><text x="2.4076%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (4,841,559 samples, 0.10%)</title><rect x="2.1576%" y="1077" width="0.1042%" height="15" fill="rgb(245,159,27)" fg:x="100215091" fg:w="4841559"/><text x="2.4076%" y="1087.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (3,825,418 samples, 0.08%)</title><rect x="2.1795%" y="1061" width="0.0824%" height="15" fill="rgb(245,172,44)" fg:x="101231232" fg:w="3825418"/><text x="2.4295%" y="1071.50"></text></g><g><title>pow (3,825,418 samples, 0.08%)</title><rect x="2.1795%" y="1045" width="0.0824%" height="15" fill="rgb(236,23,11)" fg:x="101231232" fg:w="3825418"/><text x="2.4295%" y="1055.50"></text></g><g><title>[libm.so.6] (3,825,418 samples, 0.08%)</title><rect x="2.1795%" y="1029" width="0.0824%" height="15" fill="rgb(205,117,38)" fg:x="101231232" fg:w="3825418"/><text x="2.4295%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (1,313,640 samples, 0.03%)</title><rect x="2.2618%" y="1029" width="0.0283%" height="15" fill="rgb(237,72,25)" fg:x="105056650" fg:w="1313640"/><text x="2.5118%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (1,313,640 samples, 0.03%)</title><rect x="2.2618%" y="1013" width="0.0283%" height="15" fill="rgb(244,70,9)" fg:x="105056650" fg:w="1313640"/><text x="2.5118%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1,313,640 samples, 0.03%)</title><rect x="2.2618%" y="997" width="0.0283%" height="15" fill="rgb(217,125,39)" fg:x="105056650" fg:w="1313640"/><text x="2.5118%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,313,640 samples, 0.03%)</title><rect x="2.2618%" y="981" width="0.0283%" height="15" fill="rgb(235,36,10)" fg:x="105056650" fg:w="1313640"/><text x="2.5118%" y="991.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (1,313,640 samples, 0.03%)</title><rect x="2.2618%" y="965" width="0.0283%" height="15" fill="rgb(251,123,47)" fg:x="105056650" fg:w="1313640"/><text x="2.5118%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,313,640 samples, 0.03%)</title><rect x="2.2618%" y="949" width="0.0283%" height="15" fill="rgb(221,13,13)" fg:x="105056650" fg:w="1313640"/><text x="2.5118%" y="959.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (1,313,640 samples, 0.03%)</title><rect x="2.2618%" y="933" width="0.0283%" height="15" fill="rgb(238,131,9)" fg:x="105056650" fg:w="1313640"/><text x="2.5118%" y="943.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (1,313,640 samples, 0.03%)</title><rect x="2.2618%" y="917" width="0.0283%" height="15" fill="rgb(211,50,8)" fg:x="105056650" fg:w="1313640"/><text x="2.5118%" y="927.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1,313,640 samples, 0.03%)</title><rect x="2.2618%" y="901" width="0.0283%" height="15" fill="rgb(245,182,24)" fg:x="105056650" fg:w="1313640"/><text x="2.5118%" y="911.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (1,313,640 samples, 0.03%)</title><rect x="2.2618%" y="885" width="0.0283%" height="15" fill="rgb(242,14,37)" fg:x="105056650" fg:w="1313640"/><text x="2.5118%" y="895.50"></text></g><g><title>tokio::process::imp::GlobalOrphanQueue::reap_orphans (1,849,787 samples, 0.04%)</title><rect x="2.2901%" y="1029" width="0.0398%" height="15" fill="rgb(246,228,12)" fg:x="106370290" fg:w="1849787"/><text x="2.5401%" y="1039.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (1,849,787 samples, 0.04%)</title><rect x="2.2901%" y="1013" width="0.0398%" height="15" fill="rgb(213,55,15)" fg:x="106370290" fg:w="1849787"/><text x="2.5401%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (1,849,787 samples, 0.04%)</title><rect x="2.2901%" y="997" width="0.0398%" height="15" fill="rgb(209,9,3)" fg:x="106370290" fg:w="1849787"/><text x="2.5401%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (1,849,787 samples, 0.04%)</title><rect x="2.2901%" y="981" width="0.0398%" height="15" fill="rgb(230,59,30)" fg:x="106370290" fg:w="1849787"/><text x="2.5401%" y="991.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1,849,787 samples, 0.04%)</title><rect x="2.2901%" y="965" width="0.0398%" height="15" fill="rgb(209,121,21)" fg:x="106370290" fg:w="1849787"/><text x="2.5401%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1,849,787 samples, 0.04%)</title><rect x="2.2901%" y="949" width="0.0398%" height="15" fill="rgb(220,109,13)" fg:x="106370290" fg:w="1849787"/><text x="2.5401%" y="959.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (10,485,643 samples, 0.23%)</title><rect x="2.1319%" y="1093" width="0.2258%" height="15" fill="rgb(232,18,1)" fg:x="99019925" fg:w="10485643"/><text x="2.3819%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (4,448,918 samples, 0.10%)</title><rect x="2.2618%" y="1077" width="0.0958%" height="15" fill="rgb(215,41,42)" fg:x="105056650" fg:w="4448918"/><text x="2.5118%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park_timeout (4,448,918 samples, 0.10%)</title><rect x="2.2618%" y="1061" width="0.0958%" height="15" fill="rgb(224,123,36)" fg:x="105056650" fg:w="4448918"/><text x="2.5118%" y="1071.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (4,448,918 samples, 0.10%)</title><rect x="2.2618%" y="1045" width="0.0958%" height="15" fill="rgb(240,125,3)" fg:x="105056650" fg:w="4448918"/><text x="2.5118%" y="1055.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (1,285,144 samples, 0.03%)</title><rect x="2.3300%" y="1029" width="0.0277%" height="15" fill="rgb(205,98,50)" fg:x="108220424" fg:w="1285144"/><text x="2.5800%" y="1039.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (1,285,144 samples, 0.03%)</title><rect x="2.3300%" y="1013" width="0.0277%" height="15" fill="rgb(205,185,37)" fg:x="108220424" fg:w="1285144"/><text x="2.5800%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (1,285,144 samples, 0.03%)</title><rect x="2.3300%" y="997" width="0.0277%" height="15" fill="rgb(238,207,15)" fg:x="108220424" fg:w="1285144"/><text x="2.5800%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (1,285,144 samples, 0.03%)</title><rect x="2.3300%" y="981" width="0.0277%" height="15" fill="rgb(213,199,42)" fg:x="108220424" fg:w="1285144"/><text x="2.5800%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1,285,144 samples, 0.03%)</title><rect x="2.3300%" y="965" width="0.0277%" height="15" fill="rgb(235,201,11)" fg:x="108220424" fg:w="1285144"/><text x="2.5800%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,285,144 samples, 0.03%)</title><rect x="2.3300%" y="949" width="0.0277%" height="15" fill="rgb(207,46,11)" fg:x="108220424" fg:w="1285144"/><text x="2.5800%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1,285,144 samples, 0.03%)</title><rect x="2.3300%" y="933" width="0.0277%" height="15" fill="rgb(241,35,35)" fg:x="108220424" fg:w="1285144"/><text x="2.5800%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,285,144 samples, 0.03%)</title><rect x="2.3300%" y="917" width="0.0277%" height="15" fill="rgb(243,32,47)" fg:x="108220424" fg:w="1285144"/><text x="2.5800%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (1,285,144 samples, 0.03%)</title><rect x="2.3300%" y="901" width="0.0277%" height="15" fill="rgb(247,202,23)" fg:x="108220424" fg:w="1285144"/><text x="2.5800%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,285,144 samples, 0.03%)</title><rect x="2.3300%" y="885" width="0.0277%" height="15" fill="rgb(219,102,11)" fg:x="108220424" fg:w="1285144"/><text x="2.5800%" y="895.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (1,285,144 samples, 0.03%)</title><rect x="2.3300%" y="869" width="0.0277%" height="15" fill="rgb(243,110,44)" fg:x="108220424" fg:w="1285144"/><text x="2.5800%" y="879.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (1,285,144 samples, 0.03%)</title><rect x="2.3300%" y="853" width="0.0277%" height="15" fill="rgb(222,74,54)" fg:x="108220424" fg:w="1285144"/><text x="2.5800%" y="863.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel (1,285,144 samples, 0.03%)</title><rect x="2.3300%" y="837" width="0.0277%" height="15" fill="rgb(216,99,12)" fg:x="108220424" fg:w="1285144"/><text x="2.5800%" y="847.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1,285,144 samples, 0.03%)</title><rect x="2.3300%" y="821" width="0.0277%" height="15" fill="rgb(226,22,26)" fg:x="108220424" fg:w="1285144"/><text x="2.5800%" y="831.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1,285,144 samples, 0.03%)</title><rect x="2.3300%" y="805" width="0.0277%" height="15" fill="rgb(217,163,10)" fg:x="108220424" fg:w="1285144"/><text x="2.5800%" y="815.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1,285,144 samples, 0.03%)</title><rect x="2.3300%" y="789" width="0.0277%" height="15" fill="rgb(213,25,53)" fg:x="108220424" fg:w="1285144"/><text x="2.5800%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,995,898 samples, 0.06%)</title><rect x="2.3811%" y="1077" width="0.0645%" height="15" fill="rgb(252,105,26)" fg:x="110594918" fg:w="2995898"/><text x="2.6311%" y="1087.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (2,995,898 samples, 0.06%)</title><rect x="2.3811%" y="1061" width="0.0645%" height="15" fill="rgb(220,39,43)" fg:x="110594918" fg:w="2995898"/><text x="2.6311%" y="1071.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2,995,898 samples, 0.06%)</title><rect x="2.3811%" y="1045" width="0.0645%" height="15" fill="rgb(229,68,48)" fg:x="110594918" fg:w="2995898"/><text x="2.6311%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (1,214,897 samples, 0.03%)</title><rect x="2.9341%" y="1013" width="0.0262%" height="15" fill="rgb(252,8,32)" fg:x="136279173" fg:w="1214897"/><text x="3.1841%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_swap (1,214,897 samples, 0.03%)</title><rect x="2.9341%" y="997" width="0.0262%" height="15" fill="rgb(223,20,43)" fg:x="136279173" fg:w="1214897"/><text x="3.1841%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (1,319,418 samples, 0.03%)</title><rect x="3.2182%" y="853" width="0.0284%" height="15" fill="rgb(229,81,49)" fg:x="149478096" fg:w="1319418"/><text x="3.4682%" y="863.50"></text></g><g><title>tokio::runtime::time::wheel::level::level_range (1,319,418 samples, 0.03%)</title><rect x="3.2182%" y="837" width="0.0284%" height="15" fill="rgb(236,28,36)" fg:x="149478096" fg:w="1319418"/><text x="3.4682%" y="847.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (1,319,418 samples, 0.03%)</title><rect x="3.2182%" y="821" width="0.0284%" height="15" fill="rgb(249,185,26)" fg:x="149478096" fg:w="1319418"/><text x="3.4682%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (1,319,418 samples, 0.03%)</title><rect x="3.2182%" y="805" width="0.0284%" height="15" fill="rgb(249,174,33)" fg:x="149478096" fg:w="1319418"/><text x="3.4682%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9,635,720 samples, 0.21%)</title><rect x="3.0645%" y="949" width="0.2075%" height="15" fill="rgb(233,201,37)" fg:x="142337122" fg:w="9635720"/><text x="3.3145%" y="959.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9,635,720 samples, 0.21%)</title><rect x="3.0645%" y="933" width="0.2075%" height="15" fill="rgb(221,78,26)" fg:x="142337122" fg:w="9635720"/><text x="3.3145%" y="943.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (9,635,720 samples, 0.21%)</title><rect x="3.0645%" y="917" width="0.2075%" height="15" fill="rgb(250,127,30)" fg:x="142337122" fg:w="9635720"/><text x="3.3145%" y="927.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (6,174,816 samples, 0.13%)</title><rect x="3.1390%" y="901" width="0.1329%" height="15" fill="rgb(230,49,44)" fg:x="145798026" fg:w="6174816"/><text x="3.3890%" y="911.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (6,174,816 samples, 0.13%)</title><rect x="3.1390%" y="885" width="0.1329%" height="15" fill="rgb(229,67,23)" fg:x="145798026" fg:w="6174816"/><text x="3.3890%" y="895.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (6,174,816 samples, 0.13%)</title><rect x="3.1390%" y="869" width="0.1329%" height="15" fill="rgb(249,83,47)" fg:x="145798026" fg:w="6174816"/><text x="3.3890%" y="879.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (1,175,328 samples, 0.03%)</title><rect x="3.2466%" y="853" width="0.0253%" height="15" fill="rgb(215,43,3)" fg:x="150797514" fg:w="1175328"/><text x="3.4966%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1,175,328 samples, 0.03%)</title><rect x="3.2466%" y="837" width="0.0253%" height="15" fill="rgb(238,154,13)" fg:x="150797514" fg:w="1175328"/><text x="3.4966%" y="847.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,155,961 samples, 0.02%)</title><rect x="3.2719%" y="917" width="0.0249%" height="15" fill="rgb(219,56,2)" fg:x="151972842" fg:w="1155961"/><text x="3.5219%" y="927.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,155,961 samples, 0.02%)</title><rect x="3.2719%" y="901" width="0.0249%" height="15" fill="rgb(233,0,4)" fg:x="151972842" fg:w="1155961"/><text x="3.5219%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (14,282,687 samples, 0.31%)</title><rect x="3.0645%" y="997" width="0.3075%" height="15" fill="rgb(235,30,7)" fg:x="142337122" fg:w="14282687"/><text x="3.3145%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (14,282,687 samples, 0.31%)</title><rect x="3.0645%" y="981" width="0.3075%" height="15" fill="rgb(250,79,13)" fg:x="142337122" fg:w="14282687"/><text x="3.3145%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (14,282,687 samples, 0.31%)</title><rect x="3.0645%" y="965" width="0.3075%" height="15" fill="rgb(211,146,34)" fg:x="142337122" fg:w="14282687"/><text x="3.3145%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,646,967 samples, 0.10%)</title><rect x="3.2719%" y="949" width="0.1000%" height="15" fill="rgb(228,22,38)" fg:x="151972842" fg:w="4646967"/><text x="3.5219%" y="959.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (4,646,967 samples, 0.10%)</title><rect x="3.2719%" y="933" width="0.1000%" height="15" fill="rgb(235,168,5)" fg:x="151972842" fg:w="4646967"/><text x="3.5219%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3,491,006 samples, 0.08%)</title><rect x="3.2968%" y="917" width="0.0752%" height="15" fill="rgb(221,155,16)" fg:x="153128803" fg:w="3491006"/><text x="3.5468%" y="927.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (3,491,006 samples, 0.08%)</title><rect x="3.2968%" y="901" width="0.0752%" height="15" fill="rgb(215,215,53)" fg:x="153128803" fg:w="3491006"/><text x="3.5468%" y="911.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (3,491,006 samples, 0.08%)</title><rect x="3.2968%" y="885" width="0.0752%" height="15" fill="rgb(223,4,10)" fg:x="153128803" fg:w="3491006"/><text x="3.5468%" y="895.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (3,491,006 samples, 0.08%)</title><rect x="3.2968%" y="869" width="0.0752%" height="15" fill="rgb(234,103,6)" fg:x="153128803" fg:w="3491006"/><text x="3.5468%" y="879.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (3,491,006 samples, 0.08%)</title><rect x="3.2968%" y="853" width="0.0752%" height="15" fill="rgb(227,97,0)" fg:x="153128803" fg:w="3491006"/><text x="3.5468%" y="863.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (2,370,384 samples, 0.05%)</title><rect x="3.3209%" y="837" width="0.0510%" height="15" fill="rgb(234,150,53)" fg:x="154249425" fg:w="2370384"/><text x="3.5709%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockWriteGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (1,524,437 samples, 0.03%)</title><rect x="3.3720%" y="997" width="0.0328%" height="15" fill="rgb(228,201,54)" fg:x="156619809" fg:w="1524437"/><text x="3.6220%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::time::ShardedWheel&gt;&gt; (1,524,437 samples, 0.03%)</title><rect x="3.3720%" y="981" width="0.0328%" height="15" fill="rgb(222,22,37)" fg:x="156619809" fg:w="1524437"/><text x="3.6220%" y="991.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1,524,437 samples, 0.03%)</title><rect x="3.3720%" y="965" width="0.0328%" height="15" fill="rgb(237,53,32)" fg:x="156619809" fg:w="1524437"/><text x="3.6220%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (1,524,437 samples, 0.03%)</title><rect x="3.3720%" y="949" width="0.0328%" height="15" fill="rgb(233,25,53)" fg:x="156619809" fg:w="1524437"/><text x="3.6220%" y="959.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::write (2,814,028 samples, 0.06%)</title><rect x="3.4048%" y="997" width="0.0606%" height="15" fill="rgb(210,40,34)" fg:x="158144246" fg:w="2814028"/><text x="3.6548%" y="1007.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (2,814,028 samples, 0.06%)</title><rect x="3.4048%" y="981" width="0.0606%" height="15" fill="rgb(241,220,44)" fg:x="158144246" fg:w="2814028"/><text x="3.6548%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (2,814,028 samples, 0.06%)</title><rect x="3.4048%" y="965" width="0.0606%" height="15" fill="rgb(235,28,35)" fg:x="158144246" fg:w="2814028"/><text x="3.6548%" y="975.50"></text></g><g><title>mio::poll::Poll::poll (609,206,515 samples, 13.12%)</title><rect x="3.4942%" y="981" width="13.1160%" height="15" fill="rgb(210,56,17)" fg:x="162296500" fg:w="609206515"/><text x="3.7442%" y="991.50">mio::poll::Poll::poll</text></g><g><title>mio::sys::unix::selector::Selector::select (607,532,953 samples, 13.08%)</title><rect x="3.5302%" y="965" width="13.0800%" height="15" fill="rgb(224,130,29)" fg:x="163970062" fg:w="607532953"/><text x="3.7802%" y="975.50">mio::sys::unix::sele..</text></g><g><title>epoll_wait (607,532,953 samples, 13.08%)</title><rect x="3.5302%" y="949" width="13.0800%" height="15" fill="rgb(235,212,8)" fg:x="163970062" fg:w="607532953"/><text x="3.7802%" y="959.50">epoll_wait</text></g><g><title>[libc.so.6] (606,438,091 samples, 13.06%)</title><rect x="3.5538%" y="933" width="13.0564%" height="15" fill="rgb(223,33,50)" fg:x="165064924" fg:w="606438091"/><text x="3.8038%" y="943.50">[libc.so.6]</text></g><g><title>[libc.so.6] (604,550,918 samples, 13.02%)</title><rect x="3.5944%" y="917" width="13.0158%" height="15" fill="rgb(219,149,13)" fg:x="166952097" fg:w="604550918"/><text x="3.8444%" y="927.50">[libc.so.6]</text></g><g><title>[libc.so.6] (604,550,918 samples, 13.02%)</title><rect x="3.5944%" y="901" width="13.0158%" height="15" fill="rgb(250,156,29)" fg:x="166952097" fg:w="604550918"/><text x="3.8444%" y="911.50">[libc.so.6]</text></g><g><title>[unknown] (604,550,918 samples, 13.02%)</title><rect x="3.5944%" y="885" width="13.0158%" height="15" fill="rgb(216,193,19)" fg:x="166952097" fg:w="604550918"/><text x="3.8444%" y="895.50">[unknown]</text></g><g><title>[unknown] (596,420,435 samples, 12.84%)</title><rect x="3.7695%" y="869" width="12.8408%" height="15" fill="rgb(216,135,14)" fg:x="175082580" fg:w="596420435"/><text x="4.0195%" y="879.50">[unknown]</text></g><g><title>[unknown] (586,327,771 samples, 12.62%)</title><rect x="3.9868%" y="853" width="12.6235%" height="15" fill="rgb(241,47,5)" fg:x="185175244" fg:w="586327771"/><text x="4.2368%" y="863.50">[unknown]</text></g><g><title>[unknown] (563,369,494 samples, 12.13%)</title><rect x="4.4811%" y="837" width="12.1292%" height="15" fill="rgb(233,42,35)" fg:x="208133521" fg:w="563369494"/><text x="4.7311%" y="847.50">[unknown]</text></g><g><title>[unknown] (485,141,283 samples, 10.44%)</title><rect x="6.1653%" y="821" width="10.4449%" height="15" fill="rgb(231,13,6)" fg:x="286361732" fg:w="485141283"/><text x="6.4153%" y="831.50">[unknown]</text></g><g><title>[unknown] (388,071,354 samples, 8.36%)</title><rect x="8.2552%" y="805" width="8.3551%" height="15" fill="rgb(207,181,40)" fg:x="383431661" fg:w="388071354"/><text x="8.5052%" y="815.50">[unknown]</text></g><g><title>[unknown] (288,681,922 samples, 6.22%)</title><rect x="10.3950%" y="789" width="6.2152%" height="15" fill="rgb(254,173,49)" fg:x="482821093" fg:w="288681922"/><text x="10.6450%" y="799.50">[unknown]</text></g><g><title>[unknown] (164,261,539 samples, 3.54%)</title><rect x="13.0737%" y="773" width="3.5365%" height="15" fill="rgb(221,1,38)" fg:x="607241476" fg:w="164261539"/><text x="13.3237%" y="783.50">[un..</text></g><g><title>[unknown] (84,162,966 samples, 1.81%)</title><rect x="14.7982%" y="757" width="1.8120%" height="15" fill="rgb(206,124,46)" fg:x="687340049" fg:w="84162966"/><text x="15.0482%" y="767.50">[..</text></g><g><title>[unknown] (60,235,161 samples, 1.30%)</title><rect x="15.3134%" y="741" width="1.2968%" height="15" fill="rgb(249,21,11)" fg:x="711267854" fg:w="60235161"/><text x="15.5634%" y="751.50"></text></g><g><title>[unknown] (57,908,741 samples, 1.25%)</title><rect x="15.3635%" y="725" width="1.2468%" height="15" fill="rgb(222,201,40)" fg:x="713594274" fg:w="57908741"/><text x="15.6135%" y="735.50"></text></g><g><title>[unknown] (17,089,282 samples, 0.37%)</title><rect x="16.2423%" y="709" width="0.3679%" height="15" fill="rgb(235,61,29)" fg:x="754413733" fg:w="17089282"/><text x="16.4923%" y="719.50"></text></g><g><title>[unknown] (1,613,379 samples, 0.03%)</title><rect x="16.5755%" y="693" width="0.0347%" height="15" fill="rgb(219,207,3)" fg:x="769889636" fg:w="1613379"/><text x="16.8255%" y="703.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (610,543,732 samples, 13.14%)</title><rect x="3.4654%" y="997" width="13.1448%" height="15" fill="rgb(222,56,46)" fg:x="160959285" fg:w="610543732"/><text x="3.7154%" y="1007.50">tokio::runtime::io::..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,107,470 samples, 0.02%)</title><rect x="16.6102%" y="917" width="0.0238%" height="15" fill="rgb(239,76,54)" fg:x="771503021" fg:w="1107470"/><text x="16.8602%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,107,470 samples, 0.02%)</title><rect x="16.6102%" y="901" width="0.0238%" height="15" fill="rgb(231,124,27)" fg:x="771503021" fg:w="1107470"/><text x="16.8602%" y="911.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (1,107,470 samples, 0.02%)</title><rect x="16.6102%" y="885" width="0.0238%" height="15" fill="rgb(249,195,6)" fg:x="771503021" fg:w="1107470"/><text x="16.8602%" y="895.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (1,107,470 samples, 0.02%)</title><rect x="16.6102%" y="869" width="0.0238%" height="15" fill="rgb(237,174,47)" fg:x="771503021" fg:w="1107470"/><text x="16.8602%" y="879.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (1,107,470 samples, 0.02%)</title><rect x="16.6102%" y="853" width="0.0238%" height="15" fill="rgb(206,201,31)" fg:x="771503021" fg:w="1107470"/><text x="16.8602%" y="863.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (1,107,470 samples, 0.02%)</title><rect x="16.6102%" y="837" width="0.0238%" height="15" fill="rgb(231,57,52)" fg:x="771503021" fg:w="1107470"/><text x="16.8602%" y="847.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::process_expiration (1,107,470 samples, 0.02%)</title><rect x="16.6102%" y="821" width="0.0238%" height="15" fill="rgb(248,177,22)" fg:x="771503021" fg:w="1107470"/><text x="16.8602%" y="831.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (1,107,470 samples, 0.02%)</title><rect x="16.6102%" y="805" width="0.0238%" height="15" fill="rgb(215,211,37)" fg:x="771503021" fg:w="1107470"/><text x="16.8602%" y="815.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (1,107,483 samples, 0.02%)</title><rect x="16.6102%" y="981" width="0.0238%" height="15" fill="rgb(241,128,51)" fg:x="771503021" fg:w="1107483"/><text x="16.8602%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (1,107,483 samples, 0.02%)</title><rect x="16.6102%" y="965" width="0.0238%" height="15" fill="rgb(227,165,31)" fg:x="771503021" fg:w="1107483"/><text x="16.8602%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (1,107,483 samples, 0.02%)</title><rect x="16.6102%" y="949" width="0.0238%" height="15" fill="rgb(228,167,24)" fg:x="771503021" fg:w="1107483"/><text x="16.8602%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1,107,483 samples, 0.02%)</title><rect x="16.6102%" y="933" width="0.0238%" height="15" fill="rgb(228,143,12)" fg:x="771503021" fg:w="1107483"/><text x="16.8602%" y="943.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (2,750,307 samples, 0.06%)</title><rect x="16.6102%" y="997" width="0.0592%" height="15" fill="rgb(249,149,8)" fg:x="771503019" fg:w="2750307"/><text x="16.8602%" y="1007.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (1,642,822 samples, 0.04%)</title><rect x="16.6341%" y="981" width="0.0354%" height="15" fill="rgb(243,35,44)" fg:x="772610504" fg:w="1642822"/><text x="16.8841%" y="991.50"></text></g><g><title>tokio::time::clock::Clock::now (1,642,822 samples, 0.04%)</title><rect x="16.6341%" y="965" width="0.0354%" height="15" fill="rgb(246,89,9)" fg:x="772610504" fg:w="1642822"/><text x="16.8841%" y="975.50"></text></g><g><title>tokio::time::clock::now (1,642,822 samples, 0.04%)</title><rect x="16.6341%" y="949" width="0.0354%" height="15" fill="rgb(233,213,13)" fg:x="772610504" fg:w="1642822"/><text x="16.8841%" y="959.50"></text></g><g><title>std::time::Instant::now (1,642,822 samples, 0.04%)</title><rect x="16.6341%" y="933" width="0.0354%" height="15" fill="rgb(233,141,41)" fg:x="772610504" fg:w="1642822"/><text x="16.8841%" y="943.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (1,642,822 samples, 0.04%)</title><rect x="16.6341%" y="917" width="0.0354%" height="15" fill="rgb(239,167,4)" fg:x="772610504" fg:w="1642822"/><text x="16.8841%" y="927.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1,642,822 samples, 0.04%)</title><rect x="16.6341%" y="901" width="0.0354%" height="15" fill="rgb(209,217,16)" fg:x="772610504" fg:w="1642822"/><text x="16.8841%" y="911.50"></text></g><g><title>clock_gettime (1,642,822 samples, 0.04%)</title><rect x="16.6341%" y="885" width="0.0354%" height="15" fill="rgb(219,88,35)" fg:x="772610504" fg:w="1642822"/><text x="16.8841%" y="895.50"></text></g><g><title>__vdso_clock_gettime (1,642,816 samples, 0.04%)</title><rect x="16.6341%" y="869" width="0.0354%" height="15" fill="rgb(220,193,23)" fg:x="772610510" fg:w="1642816"/><text x="16.8841%" y="879.50"></text></g><g><title>tokio::runtime::time::next_wake_time (719,138 samples, 0.02%)</title><rect x="16.6694%" y="997" width="0.0155%" height="15" fill="rgb(230,90,52)" fg:x="774253326" fg:w="719138"/><text x="16.9194%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (719,138 samples, 0.02%)</title><rect x="16.6694%" y="981" width="0.0155%" height="15" fill="rgb(252,106,19)" fg:x="774253326" fg:w="719138"/><text x="16.9194%" y="991.50"></text></g><g><title>tokio::runtime::time::next_wake_time::_{{closure}} (719,138 samples, 0.02%)</title><rect x="16.6694%" y="965" width="0.0155%" height="15" fill="rgb(206,74,20)" fg:x="774253326" fg:w="719138"/><text x="16.9194%" y="975.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1,839,620 samples, 0.04%)</title><rect x="16.6849%" y="965" width="0.0396%" height="15" fill="rgb(230,138,44)" fg:x="774972464" fg:w="1839620"/><text x="16.9349%" y="975.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::TryFrom&lt;u128&gt; for u64&gt;::try_from (1,839,620 samples, 0.04%)</title><rect x="16.6849%" y="949" width="0.0396%" height="15" fill="rgb(235,182,43)" fg:x="774972464" fg:w="1839620"/><text x="16.9349%" y="959.50"></text></g><g><title>core::time::Duration::as_millis (4,846,267 samples, 0.10%)</title><rect x="16.7245%" y="965" width="0.1043%" height="15" fill="rgb(242,16,51)" fg:x="776812084" fg:w="4846267"/><text x="16.9745%" y="975.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (9,278,726 samples, 0.20%)</title><rect x="16.6849%" y="981" width="0.1998%" height="15" fill="rgb(248,9,4)" fg:x="774972464" fg:w="9278726"/><text x="16.9349%" y="991.50"></text></g><g><title>tokio::time::instant::Instant::saturating_duration_since (2,592,839 samples, 0.06%)</title><rect x="16.8289%" y="965" width="0.0558%" height="15" fill="rgb(210,31,22)" fg:x="781658351" fg:w="2592839"/><text x="17.0789%" y="975.50"></text></g><g><title>std::time::Instant::duration_since (2,592,839 samples, 0.06%)</title><rect x="16.8289%" y="949" width="0.0558%" height="15" fill="rgb(239,54,39)" fg:x="781658351" fg:w="2592839"/><text x="17.0789%" y="959.50"></text></g><g><title>std::time::Instant::checked_duration_since (2,592,839 samples, 0.06%)</title><rect x="16.8289%" y="933" width="0.0558%" height="15" fill="rgb(230,99,41)" fg:x="781658351" fg:w="2592839"/><text x="17.0789%" y="943.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (2,592,839 samples, 0.06%)</title><rect x="16.8289%" y="917" width="0.0558%" height="15" fill="rgb(253,106,12)" fg:x="781658351" fg:w="2592839"/><text x="17.0789%" y="927.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (2,592,839 samples, 0.06%)</title><rect x="16.8289%" y="901" width="0.0558%" height="15" fill="rgb(213,46,41)" fg:x="781658351" fg:w="2592839"/><text x="17.0789%" y="911.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (31,517,815 samples, 0.68%)</title><rect x="16.6849%" y="997" width="0.6786%" height="15" fill="rgb(215,133,35)" fg:x="774972464" fg:w="31517815"/><text x="16.9349%" y="1007.50"></text></g><g><title>tokio::time::clock::Clock::now (22,239,089 samples, 0.48%)</title><rect x="16.8847%" y="981" width="0.4788%" height="15" fill="rgb(213,28,5)" fg:x="784251190" fg:w="22239089"/><text x="17.1347%" y="991.50"></text></g><g><title>tokio::time::clock::now (22,239,089 samples, 0.48%)</title><rect x="16.8847%" y="965" width="0.4788%" height="15" fill="rgb(215,77,49)" fg:x="784251190" fg:w="22239089"/><text x="17.1347%" y="975.50"></text></g><g><title>std::time::Instant::now (22,239,089 samples, 0.48%)</title><rect x="16.8847%" y="949" width="0.4788%" height="15" fill="rgb(248,100,22)" fg:x="784251190" fg:w="22239089"/><text x="17.1347%" y="959.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (22,239,089 samples, 0.48%)</title><rect x="16.8847%" y="933" width="0.4788%" height="15" fill="rgb(208,67,9)" fg:x="784251190" fg:w="22239089"/><text x="17.1347%" y="943.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (22,239,089 samples, 0.48%)</title><rect x="16.8847%" y="917" width="0.4788%" height="15" fill="rgb(219,133,21)" fg:x="784251190" fg:w="22239089"/><text x="17.1347%" y="927.50"></text></g><g><title>clock_gettime (22,239,089 samples, 0.48%)</title><rect x="16.8847%" y="901" width="0.4788%" height="15" fill="rgb(246,46,29)" fg:x="784251190" fg:w="22239089"/><text x="17.1347%" y="911.50"></text></g><g><title>__vdso_clock_gettime (19,868,088 samples, 0.43%)</title><rect x="16.9357%" y="885" width="0.4278%" height="15" fill="rgb(246,185,52)" fg:x="786622191" fg:w="19868088"/><text x="17.1857%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (692,071,904 samples, 14.90%)</title><rect x="2.5341%" y="1061" width="14.9001%" height="15" fill="rgb(252,136,11)" fg:x="117703854" fg:w="692071904"/><text x="2.7841%" y="1071.50">tokio::runtime::schedul..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (692,071,904 samples, 14.90%)</title><rect x="2.5341%" y="1045" width="14.9001%" height="15" fill="rgb(219,138,53)" fg:x="117703854" fg:w="692071904"/><text x="2.7841%" y="1055.50">tokio::runtime::schedul..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (677,768,412 samples, 14.59%)</title><rect x="2.8421%" y="1029" width="14.5922%" height="15" fill="rgb(211,51,23)" fg:x="132007346" fg:w="677768412"/><text x="3.0921%" y="1039.50">tokio::runtime::schedu..</text></g><g><title>tokio::runtime::time::Driver::park_internal (672,281,688 samples, 14.47%)</title><rect x="2.9602%" y="1013" width="14.4740%" height="15" fill="rgb(247,221,28)" fg:x="137494070" fg:w="672281688"/><text x="3.2102%" y="1023.50">tokio::runtime::time::..</text></g><g><title>tokio::runtime::time::source::TimeSource::tick_to_duration (3,285,479 samples, 0.07%)</title><rect x="17.3635%" y="997" width="0.0707%" height="15" fill="rgb(251,222,45)" fg:x="806490279" fg:w="3285479"/><text x="17.6135%" y="1007.50"></text></g><g><title>core::time::Duration::from_millis (3,285,479 samples, 0.07%)</title><rect x="17.3635%" y="981" width="0.0707%" height="15" fill="rgb(217,162,53)" fg:x="806490279" fg:w="3285479"/><text x="17.6135%" y="991.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (699,277,323 samples, 15.06%)</title><rect x="2.4456%" y="1077" width="15.0552%" height="15" fill="rgb(229,93,14)" fg:x="113590816" fg:w="699277323"/><text x="2.6956%" y="1087.50">tokio::runtime::schedul..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::should_notify_others (3,092,381 samples, 0.07%)</title><rect x="17.4342%" y="1061" width="0.0666%" height="15" fill="rgb(209,67,49)" fg:x="809775758" fg:w="3092381"/><text x="17.6842%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (3,829,016 samples, 0.08%)</title><rect x="17.5008%" y="1077" width="0.0824%" height="15" fill="rgb(213,87,29)" fg:x="812868196" fg:w="3829016"/><text x="17.7508%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (1,372,478 samples, 0.03%)</title><rect x="17.5537%" y="1061" width="0.0295%" height="15" fill="rgb(205,151,52)" fg:x="815324734" fg:w="1372478"/><text x="17.8037%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,174,312 samples, 0.05%)</title><rect x="17.5832%" y="1045" width="0.0468%" height="15" fill="rgb(253,215,39)" fg:x="816697212" fg:w="2174312"/><text x="17.8332%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (1,686,884 samples, 0.04%)</title><rect x="17.6301%" y="1045" width="0.0363%" height="15" fill="rgb(221,220,41)" fg:x="818871524" fg:w="1686884"/><text x="17.8801%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (1,686,884 samples, 0.04%)</title><rect x="17.6301%" y="1029" width="0.0363%" height="15" fill="rgb(218,133,21)" fg:x="818871524" fg:w="1686884"/><text x="17.8801%" y="1039.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1,686,884 samples, 0.04%)</title><rect x="17.6301%" y="1013" width="0.0363%" height="15" fill="rgb(221,193,43)" fg:x="818871524" fg:w="1686884"/><text x="17.8801%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1,686,884 samples, 0.04%)</title><rect x="17.6301%" y="997" width="0.0363%" height="15" fill="rgb(240,128,52)" fg:x="818871524" fg:w="1686884"/><text x="17.8801%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1,686,884 samples, 0.04%)</title><rect x="17.6301%" y="981" width="0.0363%" height="15" fill="rgb(253,114,12)" fg:x="818871524" fg:w="1686884"/><text x="17.8801%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,686,884 samples, 0.04%)</title><rect x="17.6301%" y="965" width="0.0363%" height="15" fill="rgb(215,223,47)" fg:x="818871524" fg:w="1686884"/><text x="17.8801%" y="975.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2,904,399 samples, 0.06%)</title><rect x="17.6664%" y="1045" width="0.0625%" height="15" fill="rgb(248,225,23)" fg:x="820558408" fg:w="2904399"/><text x="17.9164%" y="1055.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2,904,399 samples, 0.06%)</title><rect x="17.6664%" y="1029" width="0.0625%" height="15" fill="rgb(250,108,0)" fg:x="820558408" fg:w="2904399"/><text x="17.9164%" y="1039.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2,904,399 samples, 0.06%)</title><rect x="17.6664%" y="1013" width="0.0625%" height="15" fill="rgb(228,208,7)" fg:x="820558408" fg:w="2904399"/><text x="17.9164%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (714,077,407 samples, 15.37%)</title><rect x="2.3576%" y="1093" width="15.3739%" height="15" fill="rgb(244,45,10)" fg:x="109505568" fg:w="714077407"/><text x="2.6076%" y="1103.50">tokio::runtime::schedule..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (6,885,763 samples, 0.15%)</title><rect x="17.5832%" y="1077" width="0.1482%" height="15" fill="rgb(207,125,25)" fg:x="816697212" fg:w="6885763"/><text x="17.8332%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (6,885,763 samples, 0.15%)</title><rect x="17.5832%" y="1061" width="0.1482%" height="15" fill="rgb(210,195,18)" fg:x="816697212" fg:w="6885763"/><text x="17.8332%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tokio::runtime::coop::with_budget::ResetGuard,std::thread::local::AccessError&gt;&gt; (2,456,537 samples, 0.05%)</title><rect x="17.7315%" y="1045" width="0.0529%" height="15" fill="rgb(249,80,12)" fg:x="823582976" fg:w="2456537"/><text x="17.9815%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::with_budget::ResetGuard&gt; (2,456,537 samples, 0.05%)</title><rect x="17.7315%" y="1029" width="0.0529%" height="15" fill="rgb(221,65,9)" fg:x="823582976" fg:w="2456537"/><text x="17.9815%" y="1039.50"></text></g><g><title>&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (2,456,537 samples, 0.05%)</title><rect x="17.7315%" y="1013" width="0.0529%" height="15" fill="rgb(235,49,36)" fg:x="823582976" fg:w="2456537"/><text x="17.9815%" y="1023.50"></text></g><g><title>tokio::runtime::context::budget (2,456,537 samples, 0.05%)</title><rect x="17.7315%" y="997" width="0.0529%" height="15" fill="rgb(225,32,20)" fg:x="823582976" fg:w="2456537"/><text x="17.9815%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,456,537 samples, 0.05%)</title><rect x="17.7315%" y="981" width="0.0529%" height="15" fill="rgb(215,141,46)" fg:x="823582976" fg:w="2456537"/><text x="17.9815%" y="991.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2,456,537 samples, 0.05%)</title><rect x="17.7315%" y="965" width="0.0529%" height="15" fill="rgb(250,160,47)" fg:x="823582976" fg:w="2456537"/><text x="17.9815%" y="975.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (2,456,537 samples, 0.05%)</title><rect x="17.7315%" y="949" width="0.0529%" height="15" fill="rgb(216,222,40)" fg:x="823582976" fg:w="2456537"/><text x="17.9815%" y="959.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (2,456,537 samples, 0.05%)</title><rect x="17.7315%" y="933" width="0.0529%" height="15" fill="rgb(234,217,39)" fg:x="823582976" fg:w="2456537"/><text x="17.9815%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (2,456,537 samples, 0.05%)</title><rect x="17.7315%" y="917" width="0.0529%" height="15" fill="rgb(207,178,40)" fg:x="823582976" fg:w="2456537"/><text x="17.9815%" y="927.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2,933,669 samples, 0.06%)</title><rect x="17.8243%" y="1029" width="0.0632%" height="15" fill="rgb(221,136,13)" fg:x="827891715" fg:w="2933669"/><text x="18.0743%" y="1039.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2,933,669 samples, 0.06%)</title><rect x="17.8243%" y="1013" width="0.0632%" height="15" fill="rgb(249,199,10)" fg:x="827891715" fg:w="2933669"/><text x="18.0743%" y="1023.50"></text></g><g><title>core::cell::BorrowRefMut::new (2,933,669 samples, 0.06%)</title><rect x="17.8243%" y="997" width="0.0632%" height="15" fill="rgb(249,222,13)" fg:x="827891715" fg:w="2933669"/><text x="18.0743%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (4,457,877 samples, 0.10%)</title><rect x="17.8874%" y="1029" width="0.0960%" height="15" fill="rgb(244,185,38)" fg:x="830825384" fg:w="4457877"/><text x="18.1374%" y="1039.50"></text></g><g><title>core::mem::replace (4,457,877 samples, 0.10%)</title><rect x="17.8874%" y="1013" width="0.0960%" height="15" fill="rgb(236,202,9)" fg:x="830825384" fg:w="4457877"/><text x="18.1374%" y="1023.50"></text></g><g><title>core::ptr::write (4,457,877 samples, 0.10%)</title><rect x="17.8874%" y="997" width="0.0960%" height="15" fill="rgb(250,229,37)" fg:x="830825384" fg:w="4457877"/><text x="18.1374%" y="1007.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::reset_lifo_enabled (2,485,248 samples, 0.05%)</title><rect x="17.9834%" y="1029" width="0.0535%" height="15" fill="rgb(206,174,23)" fg:x="835283261" fg:w="2485248"/><text x="18.2334%" y="1039.50"></text></g><g><title>ring::digest::BlockContext::finish (3,318,049 samples, 0.07%)</title><rect x="18.8646%" y="597" width="0.0714%" height="15" fill="rgb(211,33,43)" fg:x="876214307" fg:w="3318049"/><text x="19.1146%" y="607.50"></text></g><g><title>GFp_sha256_block_data_order_ssse3 (3,318,049 samples, 0.07%)</title><rect x="18.8646%" y="581" width="0.0714%" height="15" fill="rgb(245,58,50)" fg:x="876214307" fg:w="3318049"/><text x="19.1146%" y="591.50"></text></g><g><title>GFp_sha256_block_data_order_ssse3 (9,463,338 samples, 0.20%)</title><rect x="18.9361%" y="565" width="0.2037%" height="15" fill="rgb(244,68,36)" fg:x="879532356" fg:w="9463338"/><text x="19.1861%" y="575.50"></text></g><g><title>&lt;pgdog::auth::scram::server::UserPassword as scram::server::AuthenticationProvider&gt;::get_password_for (15,259,073 samples, 0.33%)</title><rect x="18.8581%" y="693" width="0.3285%" height="15" fill="rgb(232,229,15)" fg:x="875908919" fg:w="15259073"/><text x="19.1081%" y="703.50"></text></g><g><title>scram::utils::hash_password (15,259,073 samples, 0.33%)</title><rect x="18.8581%" y="677" width="0.3285%" height="15" fill="rgb(254,30,23)" fg:x="875908919" fg:w="15259073"/><text x="19.1081%" y="687.50"></text></g><g><title>ring::pbkdf2::derive (15,259,073 samples, 0.33%)</title><rect x="18.8581%" y="661" width="0.3285%" height="15" fill="rgb(235,160,14)" fg:x="875908919" fg:w="15259073"/><text x="19.1081%" y="671.50"></text></g><g><title>ring::pbkdf2::derive_block (15,259,073 samples, 0.33%)</title><rect x="18.8581%" y="645" width="0.3285%" height="15" fill="rgb(212,155,44)" fg:x="875908919" fg:w="15259073"/><text x="19.1081%" y="655.50"></text></g><g><title>ring::hmac::sign (15,259,073 samples, 0.33%)</title><rect x="18.8581%" y="629" width="0.3285%" height="15" fill="rgb(226,2,50)" fg:x="875908919" fg:w="15259073"/><text x="19.1081%" y="639.50"></text></g><g><title>ring::hmac::Context::sign (15,259,073 samples, 0.33%)</title><rect x="18.8581%" y="613" width="0.3285%" height="15" fill="rgb(234,177,6)" fg:x="875908919" fg:w="15259073"/><text x="19.1081%" y="623.50"></text></g><g><title>ring::digest::Context::finish (11,635,636 samples, 0.25%)</title><rect x="18.9361%" y="597" width="0.2505%" height="15" fill="rgb(217,24,9)" fg:x="879532356" fg:w="11635636"/><text x="19.1861%" y="607.50"></text></g><g><title>ring::digest::BlockContext::finish (11,635,636 samples, 0.25%)</title><rect x="18.9361%" y="581" width="0.2505%" height="15" fill="rgb(220,13,46)" fg:x="879532356" fg:w="11635636"/><text x="19.1861%" y="591.50"></text></g><g><title>ring::polyfill::slice::fill (2,172,298 samples, 0.05%)</title><rect x="19.1398%" y="565" width="0.0468%" height="15" fill="rgb(239,221,27)" fg:x="888995694" fg:w="2172298"/><text x="19.3898%" y="575.50"></text></g><g><title>[libc.so.6] (2,172,298 samples, 0.05%)</title><rect x="19.1398%" y="549" width="0.0468%" height="15" fill="rgb(222,198,25)" fg:x="888995694" fg:w="2172298"/><text x="19.3898%" y="559.50"></text></g><g><title>pgdog::auth::scram::server::Server::handle::_{{closure}} (15,286,989 samples, 0.33%)</title><rect x="18.8580%" y="725" width="0.3291%" height="15" fill="rgb(211,99,13)" fg:x="875904936" fg:w="15286989"/><text x="19.1080%" y="735.50"></text></g><g><title>scram::server::ScramServer&lt;P&gt;::handle_client_first (15,283,006 samples, 0.33%)</title><rect x="18.8581%" y="709" width="0.3290%" height="15" fill="rgb(232,111,31)" fg:x="875908919" fg:w="15283006"/><text x="19.1081%" y="719.50"></text></g><g><title>core::mem::drop (2,453,553 samples, 0.05%)</title><rect x="20.8595%" y="629" width="0.0528%" height="15" fill="rgb(245,82,37)" fg:x="968869170" fg:w="2453553"/><text x="21.1095%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (2,453,553 samples, 0.05%)</title><rect x="20.8595%" y="613" width="0.0528%" height="15" fill="rgb(227,149,46)" fg:x="968869170" fg:w="2453553"/><text x="21.1095%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (2,453,553 samples, 0.05%)</title><rect x="20.8595%" y="597" width="0.0528%" height="15" fill="rgb(218,36,50)" fg:x="968869170" fg:w="2453553"/><text x="21.1095%" y="607.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2,453,553 samples, 0.05%)</title><rect x="20.8595%" y="581" width="0.0528%" height="15" fill="rgb(226,80,48)" fg:x="968869170" fg:w="2453553"/><text x="21.1095%" y="591.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2,453,553 samples, 0.05%)</title><rect x="20.8595%" y="565" width="0.0528%" height="15" fill="rgb(238,224,15)" fg:x="968869170" fg:w="2453553"/><text x="21.1095%" y="575.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (7,922,314 samples, 0.17%)</title><rect x="20.9123%" y="629" width="0.1706%" height="15" fill="rgb(241,136,10)" fg:x="971322723" fg:w="7922314"/><text x="21.1623%" y="639.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (7,922,314 samples, 0.17%)</title><rect x="20.9123%" y="613" width="0.1706%" height="15" fill="rgb(208,32,45)" fg:x="971322723" fg:w="7922314"/><text x="21.1623%" y="623.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (7,922,314 samples, 0.17%)</title><rect x="20.9123%" y="597" width="0.1706%" height="15" fill="rgb(207,135,9)" fg:x="971322723" fg:w="7922314"/><text x="21.1623%" y="607.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (2,732,364 samples, 0.06%)</title><rect x="21.0240%" y="581" width="0.0588%" height="15" fill="rgb(206,86,44)" fg:x="976512673" fg:w="2732364"/><text x="21.2740%" y="591.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (4,302,125 samples, 0.09%)</title><rect x="21.0829%" y="629" width="0.0926%" height="15" fill="rgb(245,177,15)" fg:x="979245037" fg:w="4302125"/><text x="21.3329%" y="639.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4,302,125 samples, 0.09%)</title><rect x="21.0829%" y="613" width="0.0926%" height="15" fill="rgb(206,64,50)" fg:x="979245037" fg:w="4302125"/><text x="21.3329%" y="623.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4,302,125 samples, 0.09%)</title><rect x="21.0829%" y="597" width="0.0926%" height="15" fill="rgb(234,36,40)" fg:x="979245037" fg:w="4302125"/><text x="21.3329%" y="607.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,572,314 samples, 0.03%)</title><rect x="21.1755%" y="629" width="0.0339%" height="15" fill="rgb(213,64,8)" fg:x="983547162" fg:w="1572314"/><text x="21.4255%" y="639.50"></text></g><g><title>tokio::sync::notify::Notified::poll_notified::_{{closure}} (1,572,314 samples, 0.03%)</title><rect x="21.1755%" y="613" width="0.0339%" height="15" fill="rgb(210,75,36)" fg:x="983547162" fg:w="1572314"/><text x="21.4255%" y="623.50"></text></g><g><title>core::mem::replace (1,572,314 samples, 0.03%)</title><rect x="21.1755%" y="597" width="0.0339%" height="15" fill="rgb(229,88,21)" fg:x="983547162" fg:w="1572314"/><text x="21.4255%" y="607.50"></text></g><g><title>core::ptr::write (1,572,314 samples, 0.03%)</title><rect x="21.1755%" y="581" width="0.0339%" height="15" fill="rgb(252,204,47)" fg:x="983547162" fg:w="1572314"/><text x="21.4255%" y="591.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (28,052,846 samples, 0.60%)</title><rect x="20.6397%" y="661" width="0.6040%" height="15" fill="rgb(208,77,27)" fg:x="958659844" fg:w="28052846"/><text x="20.8897%" y="671.50"></text></g><g><title>tokio::sync::notify::Notified::poll_notified (27,082,979 samples, 0.58%)</title><rect x="20.6605%" y="645" width="0.5831%" height="15" fill="rgb(221,76,26)" fg:x="959629711" fg:w="27082979"/><text x="20.9105%" y="655.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (1,593,214 samples, 0.03%)</title><rect x="21.2093%" y="629" width="0.0343%" height="15" fill="rgb(225,139,18)" fg:x="985119476" fg:w="1593214"/><text x="21.4593%" y="639.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (1,322,747 samples, 0.03%)</title><rect x="21.4353%" y="597" width="0.0285%" height="15" fill="rgb(230,137,11)" fg:x="995613372" fg:w="1322747"/><text x="21.6853%" y="607.50"></text></g><g><title>tokio::runtime::context::budget (1,322,747 samples, 0.03%)</title><rect x="21.4353%" y="581" width="0.0285%" height="15" fill="rgb(212,28,1)" fg:x="995613372" fg:w="1322747"/><text x="21.6853%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,322,747 samples, 0.03%)</title><rect x="21.4353%" y="565" width="0.0285%" height="15" fill="rgb(248,164,17)" fg:x="995613372" fg:w="1322747"/><text x="21.6853%" y="575.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (1,322,747 samples, 0.03%)</title><rect x="21.4353%" y="549" width="0.0285%" height="15" fill="rgb(222,171,42)" fg:x="995613372" fg:w="1322747"/><text x="21.6853%" y="559.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (1,322,747 samples, 0.03%)</title><rect x="21.4353%" y="533" width="0.0285%" height="15" fill="rgb(243,84,45)" fg:x="995613372" fg:w="1322747"/><text x="21.6853%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1,322,747 samples, 0.03%)</title><rect x="21.4353%" y="517" width="0.0285%" height="15" fill="rgb(252,49,23)" fg:x="995613372" fg:w="1322747"/><text x="21.6853%" y="527.50"></text></g><g><title>tokio::runtime::time::entry::StateCell::poll (2,441,243 samples, 0.05%)</title><rect x="21.4637%" y="581" width="0.0526%" height="15" fill="rgb(215,19,7)" fg:x="996936119" fg:w="2441243"/><text x="21.7137%" y="591.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (2,441,243 samples, 0.05%)</title><rect x="21.4637%" y="565" width="0.0526%" height="15" fill="rgb(238,81,41)" fg:x="996936119" fg:w="2441243"/><text x="21.7137%" y="575.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (2,441,243 samples, 0.05%)</title><rect x="21.4637%" y="549" width="0.0526%" height="15" fill="rgb(210,199,37)" fg:x="996936119" fg:w="2441243"/><text x="21.7137%" y="559.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::catch_unwind (2,441,243 samples, 0.05%)</title><rect x="21.4637%" y="533" width="0.0526%" height="15" fill="rgb(244,192,49)" fg:x="996936119" fg:w="2441243"/><text x="21.7137%" y="543.50"></text></g><g><title>std::panic::catch_unwind (2,441,243 samples, 0.05%)</title><rect x="21.4637%" y="517" width="0.0526%" height="15" fill="rgb(226,211,11)" fg:x="996936119" fg:w="2441243"/><text x="21.7137%" y="527.50"></text></g><g><title>std::panicking::try (2,441,243 samples, 0.05%)</title><rect x="21.4637%" y="501" width="0.0526%" height="15" fill="rgb(236,162,54)" fg:x="996936119" fg:w="2441243"/><text x="21.7137%" y="511.50"></text></g><g><title>std::panicking::try::do_call (2,441,243 samples, 0.05%)</title><rect x="21.4637%" y="485" width="0.0526%" height="15" fill="rgb(220,229,9)" fg:x="996936119" fg:w="2441243"/><text x="21.7137%" y="495.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,441,243 samples, 0.05%)</title><rect x="21.4637%" y="469" width="0.0526%" height="15" fill="rgb(250,87,22)" fg:x="996936119" fg:w="2441243"/><text x="21.7137%" y="479.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::_{{closure}} (2,441,243 samples, 0.05%)</title><rect x="21.4637%" y="453" width="0.0526%" height="15" fill="rgb(239,43,17)" fg:x="996936119" fg:w="2441243"/><text x="21.7137%" y="463.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (2,441,243 samples, 0.05%)</title><rect x="21.4637%" y="437" width="0.0526%" height="15" fill="rgb(231,177,25)" fg:x="996936119" fg:w="2441243"/><text x="21.7137%" y="447.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (2,441,243 samples, 0.05%)</title><rect x="21.4637%" y="421" width="0.0526%" height="15" fill="rgb(219,179,1)" fg:x="996936119" fg:w="2441243"/><text x="21.7137%" y="431.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (2,441,243 samples, 0.05%)</title><rect x="21.4637%" y="405" width="0.0526%" height="15" fill="rgb(238,219,53)" fg:x="996936119" fg:w="2441243"/><text x="21.7137%" y="415.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (2,441,243 samples, 0.05%)</title><rect x="21.4637%" y="389" width="0.0526%" height="15" fill="rgb(232,167,36)" fg:x="996936119" fg:w="2441243"/><text x="21.7137%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (1,582,372 samples, 0.03%)</title><rect x="21.6583%" y="549" width="0.0341%" height="15" fill="rgb(244,19,51)" fg:x="1005973836" fg:w="1582372"/><text x="21.9083%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (1,582,372 samples, 0.03%)</title><rect x="21.6583%" y="533" width="0.0341%" height="15" fill="rgb(224,6,22)" fg:x="1005973836" fg:w="1582372"/><text x="21.9083%" y="543.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1,582,372 samples, 0.03%)</title><rect x="21.6583%" y="517" width="0.0341%" height="15" fill="rgb(224,145,5)" fg:x="1005973836" fg:w="1582372"/><text x="21.9083%" y="527.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1,582,372 samples, 0.03%)</title><rect x="21.6583%" y="501" width="0.0341%" height="15" fill="rgb(234,130,49)" fg:x="1005973836" fg:w="1582372"/><text x="21.9083%" y="511.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel (1,412,974 samples, 0.03%)</title><rect x="21.6924%" y="549" width="0.0304%" height="15" fill="rgb(254,6,2)" fg:x="1007556208" fg:w="1412974"/><text x="21.9424%" y="559.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1,412,974 samples, 0.03%)</title><rect x="21.6924%" y="533" width="0.0304%" height="15" fill="rgb(208,96,46)" fg:x="1007556208" fg:w="1412974"/><text x="21.9424%" y="543.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1,412,974 samples, 0.03%)</title><rect x="21.6924%" y="517" width="0.0304%" height="15" fill="rgb(239,3,39)" fg:x="1007556208" fg:w="1412974"/><text x="21.9424%" y="527.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1,412,974 samples, 0.03%)</title><rect x="21.6924%" y="501" width="0.0304%" height="15" fill="rgb(233,210,1)" fg:x="1007556208" fg:w="1412974"/><text x="21.9424%" y="511.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::level_for (1,303,099 samples, 0.03%)</title><rect x="21.7556%" y="533" width="0.0281%" height="15" fill="rgb(244,137,37)" fg:x="1010492723" fg:w="1303099"/><text x="22.0056%" y="543.50"></text></g><g><title>tokio::runtime::time::wheel::level_for (1,303,099 samples, 0.03%)</title><rect x="21.7556%" y="517" width="0.0281%" height="15" fill="rgb(240,136,2)" fg:x="1010492723" fg:w="1303099"/><text x="22.0056%" y="527.50"></text></g><g><title>tokio::runtime::time::entry::TimerHandle::cached_when (1,667,201 samples, 0.04%)</title><rect x="21.8111%" y="517" width="0.0359%" height="15" fill="rgb(239,18,37)" fg:x="1013068046" fg:w="1667201"/><text x="22.0611%" y="527.50"></text></g><g><title>tokio::runtime::time::entry::TimerShared::cached_when (1,667,201 samples, 0.04%)</title><rect x="21.8111%" y="501" width="0.0359%" height="15" fill="rgb(218,185,22)" fg:x="1013068046" fg:w="1667201"/><text x="22.0611%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (1,667,201 samples, 0.04%)</title><rect x="21.8111%" y="485" width="0.0359%" height="15" fill="rgb(225,218,4)" fg:x="1013068046" fg:w="1667201"/><text x="22.0611%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (1,667,201 samples, 0.04%)</title><rect x="21.8111%" y="469" width="0.0359%" height="15" fill="rgb(230,182,32)" fg:x="1013068046" fg:w="1667201"/><text x="22.0611%" y="479.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (15,940,797 samples, 0.34%)</title><rect x="21.5511%" y="565" width="0.3432%" height="15" fill="rgb(242,56,43)" fg:x="1000995750" fg:w="15940797"/><text x="21.8011%" y="575.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::insert (7,967,365 samples, 0.17%)</title><rect x="21.7228%" y="549" width="0.1715%" height="15" fill="rgb(233,99,24)" fg:x="1008969182" fg:w="7967365"/><text x="21.9728%" y="559.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::add_entry (5,140,725 samples, 0.11%)</title><rect x="21.7837%" y="533" width="0.1107%" height="15" fill="rgb(234,209,42)" fg:x="1011795822" fg:w="5140725"/><text x="22.0337%" y="543.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_for (2,201,300 samples, 0.05%)</title><rect x="21.8469%" y="517" width="0.0474%" height="15" fill="rgb(227,7,12)" fg:x="1014735247" fg:w="2201300"/><text x="22.0969%" y="527.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::inner (3,100,274 samples, 0.07%)</title><rect x="21.8943%" y="565" width="0.0667%" height="15" fill="rgb(245,203,43)" fg:x="1016936547" fg:w="3100274"/><text x="22.1443%" y="575.50"></text></g><g><title>tokio::runtime::time::entry::generate_shard_id (1,491,056 samples, 0.03%)</title><rect x="21.9290%" y="549" width="0.0321%" height="15" fill="rgb(238,205,33)" fg:x="1018545765" fg:w="1491056"/><text x="22.1790%" y="559.50"></text></g><g><title>tokio::runtime::context::with_scheduler (1,491,056 samples, 0.03%)</title><rect x="21.9290%" y="533" width="0.0321%" height="15" fill="rgb(231,56,7)" fg:x="1018545765" fg:w="1491056"/><text x="22.1790%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,491,056 samples, 0.03%)</title><rect x="21.9290%" y="517" width="0.0321%" height="15" fill="rgb(244,186,29)" fg:x="1018545765" fg:w="1491056"/><text x="22.1790%" y="527.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (1,491,056 samples, 0.03%)</title><rect x="21.9290%" y="501" width="0.0321%" height="15" fill="rgb(234,111,31)" fg:x="1018545765" fg:w="1491056"/><text x="22.1790%" y="511.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (1,491,056 samples, 0.03%)</title><rect x="21.9290%" y="485" width="0.0321%" height="15" fill="rgb(241,149,10)" fg:x="1018545765" fg:w="1491056"/><text x="22.1790%" y="495.50"></text></g><g><title>tokio::runtime::time::entry::generate_shard_id::_{{closure}} (1,491,056 samples, 0.03%)</title><rect x="21.9290%" y="469" width="0.0321%" height="15" fill="rgb(249,206,44)" fg:x="1018545765" fg:w="1491056"/><text x="22.1790%" y="479.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll::_{{closure}} (30,211,491 samples, 0.65%)</title><rect x="21.3401%" y="645" width="0.6504%" height="15" fill="rgb(251,153,30)" fg:x="991191651" fg:w="30211491"/><text x="21.5901%" y="655.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (27,196,173 samples, 0.59%)</title><rect x="21.4050%" y="629" width="0.5855%" height="15" fill="rgb(239,152,38)" fg:x="994206969" fg:w="27196173"/><text x="21.6550%" y="639.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (25,789,770 samples, 0.56%)</title><rect x="21.4353%" y="613" width="0.5552%" height="15" fill="rgb(249,139,47)" fg:x="995613372" fg:w="25789770"/><text x="21.6853%" y="623.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (24,467,023 samples, 0.53%)</title><rect x="21.4637%" y="597" width="0.5268%" height="15" fill="rgb(244,64,35)" fg:x="996936119" fg:w="24467023"/><text x="21.7137%" y="607.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::reset (22,025,780 samples, 0.47%)</title><rect x="21.5163%" y="581" width="0.4742%" height="15" fill="rgb(216,46,15)" fg:x="999377362" fg:w="22025780"/><text x="21.7663%" y="591.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::deadline_to_tick (1,366,321 samples, 0.03%)</title><rect x="21.9611%" y="565" width="0.0294%" height="15" fill="rgb(250,74,19)" fg:x="1020036821" fg:w="1366321"/><text x="22.2111%" y="575.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (3,419,430 samples, 0.07%)</title><rect x="22.7282%" y="613" width="0.0736%" height="15" fill="rgb(249,42,33)" fg:x="1055667517" fg:w="3419430"/><text x="22.9782%" y="623.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (3,046,404 samples, 0.07%)</title><rect x="22.8018%" y="581" width="0.0656%" height="15" fill="rgb(242,149,17)" fg:x="1059086947" fg:w="3046404"/><text x="23.0518%" y="591.50"></text></g><g><title>tokio::runtime::context::budget (3,046,404 samples, 0.07%)</title><rect x="22.8018%" y="565" width="0.0656%" height="15" fill="rgb(244,29,21)" fg:x="1059086947" fg:w="3046404"/><text x="23.0518%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,046,404 samples, 0.07%)</title><rect x="22.8018%" y="549" width="0.0656%" height="15" fill="rgb(220,130,37)" fg:x="1059086947" fg:w="3046404"/><text x="23.0518%" y="559.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (3,046,404 samples, 0.07%)</title><rect x="22.8018%" y="533" width="0.0656%" height="15" fill="rgb(211,67,2)" fg:x="1059086947" fg:w="3046404"/><text x="23.0518%" y="543.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (3,046,404 samples, 0.07%)</title><rect x="22.8018%" y="517" width="0.0656%" height="15" fill="rgb(235,68,52)" fg:x="1059086947" fg:w="3046404"/><text x="23.0518%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (3,046,404 samples, 0.07%)</title><rect x="22.8018%" y="501" width="0.0656%" height="15" fill="rgb(246,142,3)" fg:x="1059086947" fg:w="3046404"/><text x="23.0518%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2,253,230 samples, 0.05%)</title><rect x="22.8674%" y="517" width="0.0485%" height="15" fill="rgb(241,25,7)" fg:x="1062133351" fg:w="2253230"/><text x="23.1174%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2,253,230 samples, 0.05%)</title><rect x="22.8674%" y="501" width="0.0485%" height="15" fill="rgb(242,119,39)" fg:x="1062133351" fg:w="2253230"/><text x="23.1174%" y="511.50"></text></g><g><title>tokio::runtime::time::entry::StateCell::poll (6,207,253 samples, 0.13%)</title><rect x="22.8674%" y="565" width="0.1336%" height="15" fill="rgb(241,98,45)" fg:x="1062133351" fg:w="6207253"/><text x="23.1174%" y="575.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (6,207,253 samples, 0.13%)</title><rect x="22.8674%" y="549" width="0.1336%" height="15" fill="rgb(254,28,30)" fg:x="1062133351" fg:w="6207253"/><text x="23.1174%" y="559.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (6,207,253 samples, 0.13%)</title><rect x="22.8674%" y="533" width="0.1336%" height="15" fill="rgb(241,142,54)" fg:x="1062133351" fg:w="6207253"/><text x="23.1174%" y="543.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::catch_unwind (3,954,023 samples, 0.09%)</title><rect x="22.9159%" y="517" width="0.0851%" height="15" fill="rgb(222,85,15)" fg:x="1064386581" fg:w="3954023"/><text x="23.1659%" y="527.50"></text></g><g><title>std::panic::catch_unwind (3,954,023 samples, 0.09%)</title><rect x="22.9159%" y="501" width="0.0851%" height="15" fill="rgb(210,85,47)" fg:x="1064386581" fg:w="3954023"/><text x="23.1659%" y="511.50"></text></g><g><title>std::panicking::try (3,954,023 samples, 0.09%)</title><rect x="22.9159%" y="485" width="0.0851%" height="15" fill="rgb(224,206,25)" fg:x="1064386581" fg:w="3954023"/><text x="23.1659%" y="495.50"></text></g><g><title>std::panicking::try::do_call (3,954,023 samples, 0.09%)</title><rect x="22.9159%" y="469" width="0.0851%" height="15" fill="rgb(243,201,19)" fg:x="1064386581" fg:w="3954023"/><text x="23.1659%" y="479.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,954,023 samples, 0.09%)</title><rect x="22.9159%" y="453" width="0.0851%" height="15" fill="rgb(236,59,4)" fg:x="1064386581" fg:w="3954023"/><text x="23.1659%" y="463.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::_{{closure}} (3,954,023 samples, 0.09%)</title><rect x="22.9159%" y="437" width="0.0851%" height="15" fill="rgb(254,179,45)" fg:x="1064386581" fg:w="3954023"/><text x="23.1659%" y="447.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (3,954,023 samples, 0.09%)</title><rect x="22.9159%" y="421" width="0.0851%" height="15" fill="rgb(226,14,10)" fg:x="1064386581" fg:w="3954023"/><text x="23.1659%" y="431.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (3,954,023 samples, 0.09%)</title><rect x="22.9159%" y="405" width="0.0851%" height="15" fill="rgb(244,27,41)" fg:x="1064386581" fg:w="3954023"/><text x="23.1659%" y="415.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (3,954,023 samples, 0.09%)</title><rect x="22.9159%" y="389" width="0.0851%" height="15" fill="rgb(235,35,32)" fg:x="1064386581" fg:w="3954023"/><text x="23.1659%" y="399.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (3,954,023 samples, 0.09%)</title><rect x="22.9159%" y="373" width="0.0851%" height="15" fill="rgb(218,68,31)" fg:x="1064386581" fg:w="3954023"/><text x="23.1659%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1,221,091 samples, 0.03%)</title><rect x="22.9748%" y="357" width="0.0263%" height="15" fill="rgb(207,120,37)" fg:x="1067119513" fg:w="1221091"/><text x="23.2248%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_add (1,221,091 samples, 0.03%)</title><rect x="22.9748%" y="341" width="0.0263%" height="15" fill="rgb(227,98,0)" fg:x="1067119513" fg:w="1221091"/><text x="23.2248%" y="351.50"></text></g><g><title>tokio::runtime::time::entry::TimerHandle::sync_when (1,860,123 samples, 0.04%)</title><rect x="23.0011%" y="517" width="0.0400%" height="15" fill="rgb(207,7,3)" fg:x="1068340604" fg:w="1860123"/><text x="23.2511%" y="527.50"></text></g><g><title>tokio::runtime::time::entry::TimerShared::sync_when (1,860,123 samples, 0.04%)</title><rect x="23.0011%" y="501" width="0.0400%" height="15" fill="rgb(206,98,19)" fg:x="1068340604" fg:w="1860123"/><text x="23.2511%" y="511.50"></text></g><g><title>tokio::runtime::time::entry::TimerShared::true_when (1,860,123 samples, 0.04%)</title><rect x="23.0011%" y="485" width="0.0400%" height="15" fill="rgb(217,5,26)" fg:x="1068340604" fg:w="1860123"/><text x="23.2511%" y="495.50"></text></g><g><title>tokio::runtime::time::entry::StateCell::when (1,860,123 samples, 0.04%)</title><rect x="23.0011%" y="469" width="0.0400%" height="15" fill="rgb(235,190,38)" fg:x="1068340604" fg:w="1860123"/><text x="23.2511%" y="479.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_for (10,200,917 samples, 0.22%)</title><rect x="23.0693%" y="501" width="0.2196%" height="15" fill="rgb(247,86,24)" fg:x="1071511489" fg:w="10200917"/><text x="23.3193%" y="511.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,148,620 samples, 0.02%)</title><rect x="23.3346%" y="485" width="0.0247%" height="15" fill="rgb(205,101,16)" fg:x="1083833643" fg:w="1148620"/><text x="23.5846%" y="495.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (16,643,009 samples, 0.36%)</title><rect x="23.0011%" y="549" width="0.3583%" height="15" fill="rgb(246,168,33)" fg:x="1068340604" fg:w="16643009"/><text x="23.2511%" y="559.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::insert (16,643,009 samples, 0.36%)</title><rect x="23.0011%" y="533" width="0.3583%" height="15" fill="rgb(231,114,1)" fg:x="1068340604" fg:w="16643009"/><text x="23.2511%" y="543.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::add_entry (14,782,886 samples, 0.32%)</title><rect x="23.0411%" y="517" width="0.3183%" height="15" fill="rgb(207,184,53)" fg:x="1070200727" fg:w="14782886"/><text x="23.2911%" y="527.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (3,271,207 samples, 0.07%)</title><rect x="23.2889%" y="501" width="0.0704%" height="15" fill="rgb(224,95,51)" fg:x="1081712406" fg:w="3271207"/><text x="23.5389%" y="511.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::inner (6,487,406 samples, 0.14%)</title><rect x="23.3594%" y="549" width="0.1397%" height="15" fill="rgb(212,188,45)" fg:x="1084983613" fg:w="6487406"/><text x="23.6094%" y="559.50"></text></g><g><title>tokio::runtime::time::entry::generate_shard_id (4,828,501 samples, 0.10%)</title><rect x="23.3951%" y="533" width="0.1040%" height="15" fill="rgb(223,154,38)" fg:x="1086642518" fg:w="4828501"/><text x="23.6451%" y="543.50"></text></g><g><title>tokio::runtime::context::with_scheduler (4,828,501 samples, 0.10%)</title><rect x="23.3951%" y="517" width="0.1040%" height="15" fill="rgb(251,22,52)" fg:x="1086642518" fg:w="4828501"/><text x="23.6451%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,828,501 samples, 0.10%)</title><rect x="23.3951%" y="501" width="0.1040%" height="15" fill="rgb(229,209,22)" fg:x="1086642518" fg:w="4828501"/><text x="23.6451%" y="511.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (4,828,501 samples, 0.10%)</title><rect x="23.3951%" y="485" width="0.1040%" height="15" fill="rgb(234,138,34)" fg:x="1086642518" fg:w="4828501"/><text x="23.6451%" y="495.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (3,920,338 samples, 0.08%)</title><rect x="23.4146%" y="469" width="0.0844%" height="15" fill="rgb(212,95,11)" fg:x="1087550681" fg:w="3920338"/><text x="23.6646%" y="479.50"></text></g><g><title>tokio::runtime::time::entry::generate_shard_id::_{{closure}} (3,920,338 samples, 0.08%)</title><rect x="23.4146%" y="453" width="0.0844%" height="15" fill="rgb(240,179,47)" fg:x="1087550681" fg:w="3920338"/><text x="23.6646%" y="463.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::get_worker_index (3,920,338 samples, 0.08%)</title><rect x="23.4146%" y="437" width="0.0844%" height="15" fill="rgb(240,163,11)" fg:x="1087550681" fg:w="3920338"/><text x="23.6646%" y="447.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::reset (27,146,682 samples, 0.58%)</title><rect x="23.0011%" y="565" width="0.5845%" height="15" fill="rgb(236,37,12)" fg:x="1068340604" fg:w="27146682"/><text x="23.2511%" y="575.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::deadline_to_tick (4,016,267 samples, 0.09%)</title><rect x="23.4990%" y="549" width="0.0865%" height="15" fill="rgb(232,164,16)" fg:x="1091471019" fg:w="4016267"/><text x="23.7490%" y="559.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (2,304,117 samples, 0.05%)</title><rect x="23.5359%" y="533" width="0.0496%" height="15" fill="rgb(244,205,15)" fg:x="1093183169" fg:w="2304117"/><text x="23.7859%" y="543.50"></text></g><g><title>core::time::Duration::as_millis (2,304,117 samples, 0.05%)</title><rect x="23.5359%" y="517" width="0.0496%" height="15" fill="rgb(223,117,47)" fg:x="1093183169" fg:w="2304117"/><text x="23.7859%" y="527.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (39,704,565 samples, 0.85%)</title><rect x="22.8018%" y="613" width="0.8548%" height="15" fill="rgb(244,107,35)" fg:x="1059086947" fg:w="39704565"/><text x="23.0518%" y="623.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (39,704,565 samples, 0.85%)</title><rect x="22.8018%" y="597" width="0.8548%" height="15" fill="rgb(205,140,8)" fg:x="1059086947" fg:w="39704565"/><text x="23.0518%" y="607.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (36,658,161 samples, 0.79%)</title><rect x="22.8674%" y="581" width="0.7892%" height="15" fill="rgb(228,84,46)" fg:x="1062133351" fg:w="36658161"/><text x="23.1174%" y="591.50"></text></g><g><title>tokio::runtime::time::handle::Handle::is_shutdown (3,304,226 samples, 0.07%)</title><rect x="23.5855%" y="565" width="0.0711%" height="15" fill="rgb(254,188,9)" fg:x="1095487286" fg:w="3304226"/><text x="23.8355%" y="575.50"></text></g><g><title>tokio::runtime::time::Inner::is_shutdown (3,304,226 samples, 0.07%)</title><rect x="23.5855%" y="549" width="0.0711%" height="15" fill="rgb(206,112,54)" fg:x="1095487286" fg:w="3304226"/><text x="23.8355%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (3,304,226 samples, 0.07%)</title><rect x="23.5855%" y="533" width="0.0711%" height="15" fill="rgb(216,84,49)" fg:x="1095487286" fg:w="3304226"/><text x="23.8355%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::server::Server::read::{{closure}}&gt; (1,366,910 samples, 0.03%)</title><rect x="23.6567%" y="613" width="0.0294%" height="15" fill="rgb(214,194,35)" fg:x="1098791512" fg:w="1366910"/><text x="23.9067%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9,855,517 samples, 0.21%)</title><rect x="25.1465%" y="597" width="0.2122%" height="15" fill="rgb(249,28,3)" fg:x="1167993089" fg:w="9855517"/><text x="25.3965%" y="607.50"></text></g><g><title>&lt;pgdog::net::messages::Message as pgdog::net::messages::ToBytes&gt;::to_bytes (2,064,567 samples, 0.04%)</title><rect x="25.3587%" y="597" width="0.0444%" height="15" fill="rgb(222,56,52)" fg:x="1177848606" fg:w="2064567"/><text x="25.6087%" y="607.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (2,064,567 samples, 0.04%)</title><rect x="25.3587%" y="581" width="0.0444%" height="15" fill="rgb(245,217,50)" fg:x="1177848606" fg:w="2064567"/><text x="25.6087%" y="591.50"></text></g><g><title>bytes::bytes::promotable_even_clone (2,064,567 samples, 0.04%)</title><rect x="25.3587%" y="565" width="0.0444%" height="15" fill="rgb(213,201,24)" fg:x="1177848606" fg:w="2064567"/><text x="25.6087%" y="575.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (4,709,491 samples, 0.10%)</title><rect x="25.4032%" y="581" width="0.1014%" height="15" fill="rgb(248,116,28)" fg:x="1179913173" fg:w="4709491"/><text x="25.6532%" y="591.50"></text></g><g><title>bytes::bytes::shared_clone (830,031 samples, 0.02%)</title><rect x="25.4867%" y="565" width="0.0179%" height="15" fill="rgb(219,72,43)" fg:x="1183792633" fg:w="830031"/><text x="25.7367%" y="575.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (830,031 samples, 0.02%)</title><rect x="25.4867%" y="549" width="0.0179%" height="15" fill="rgb(209,138,14)" fg:x="1183792633" fg:w="830031"/><text x="25.7367%" y="559.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (1,980,987 samples, 0.04%)</title><rect x="25.5046%" y="581" width="0.0427%" height="15" fill="rgb(222,18,33)" fg:x="1184622664" fg:w="1980987"/><text x="25.7546%" y="591.50"></text></g><g><title>&lt;bytes::bytes::Bytes as bytes::buf::buf_impl::Buf&gt;::advance (1,980,987 samples, 0.04%)</title><rect x="25.5046%" y="565" width="0.0427%" height="15" fill="rgb(213,199,7)" fg:x="1184622664" fg:w="1980987"/><text x="25.7546%" y="575.50"></text></g><g><title>bytes::bytes::Bytes::inc_start (1,980,987 samples, 0.04%)</title><rect x="25.5046%" y="549" width="0.0427%" height="15" fill="rgb(250,110,10)" fg:x="1184622664" fg:w="1980987"/><text x="25.7546%" y="559.50"></text></g><g><title>alloc::string::String::push (7,455,415 samples, 0.16%)</title><rect x="25.6681%" y="565" width="0.1605%" height="15" fill="rgb(248,123,6)" fg:x="1192216428" fg:w="7455415"/><text x="25.9181%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,189,944 samples, 0.07%)</title><rect x="25.7599%" y="549" width="0.0687%" height="15" fill="rgb(206,91,31)" fg:x="1196481899" fg:w="3189944"/><text x="26.0099%" y="559.50"></text></g><g><title>core::ptr::write (1,596,316 samples, 0.03%)</title><rect x="25.7942%" y="533" width="0.0344%" height="15" fill="rgb(211,154,13)" fg:x="1198075527" fg:w="1596316"/><text x="26.0442%" y="543.50"></text></g><g><title>alloc::string::String::with_capacity (2,582,307 samples, 0.06%)</title><rect x="25.8286%" y="565" width="0.0556%" height="15" fill="rgb(225,148,7)" fg:x="1199671843" fg:w="2582307"/><text x="26.0786%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,582,307 samples, 0.06%)</title><rect x="25.8286%" y="549" width="0.0556%" height="15" fill="rgb(220,160,43)" fg:x="1199671843" fg:w="2582307"/><text x="26.0786%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,582,307 samples, 0.06%)</title><rect x="25.8286%" y="533" width="0.0556%" height="15" fill="rgb(213,52,39)" fg:x="1199671843" fg:w="2582307"/><text x="26.0786%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,582,307 samples, 0.06%)</title><rect x="25.8286%" y="517" width="0.0556%" height="15" fill="rgb(243,137,7)" fg:x="1199671843" fg:w="2582307"/><text x="26.0786%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,582,307 samples, 0.06%)</title><rect x="25.8286%" y="501" width="0.0556%" height="15" fill="rgb(230,79,13)" fg:x="1199671843" fg:w="2582307"/><text x="26.0786%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,582,307 samples, 0.06%)</title><rect x="25.8286%" y="485" width="0.0556%" height="15" fill="rgb(247,105,23)" fg:x="1199671843" fg:w="2582307"/><text x="26.0786%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,582,307 samples, 0.06%)</title><rect x="25.8286%" y="469" width="0.0556%" height="15" fill="rgb(223,179,41)" fg:x="1199671843" fg:w="2582307"/><text x="26.0786%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,582,307 samples, 0.06%)</title><rect x="25.8286%" y="453" width="0.0556%" height="15" fill="rgb(218,9,34)" fg:x="1199671843" fg:w="2582307"/><text x="26.0786%" y="463.50"></text></g><g><title>alloc::alloc::alloc (2,582,307 samples, 0.06%)</title><rect x="25.8286%" y="437" width="0.0556%" height="15" fill="rgb(222,106,8)" fg:x="1199671843" fg:w="2582307"/><text x="26.0786%" y="447.50"></text></g><g><title>__rust_alloc (2,582,307 samples, 0.06%)</title><rect x="25.8286%" y="421" width="0.0556%" height="15" fill="rgb(211,220,0)" fg:x="1199671843" fg:w="2582307"/><text x="26.0786%" y="431.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2,582,307 samples, 0.06%)</title><rect x="25.8286%" y="405" width="0.0556%" height="15" fill="rgb(229,52,16)" fg:x="1199671843" fg:w="2582307"/><text x="26.0786%" y="415.50"></text></g><g><title>_rjem_malloc (2,582,307 samples, 0.06%)</title><rect x="25.8286%" y="389" width="0.0556%" height="15" fill="rgb(212,155,18)" fg:x="1199671843" fg:w="2582307"/><text x="26.0786%" y="399.50"></text></g><g><title>imalloc_fastpath (2,582,307 samples, 0.06%)</title><rect x="25.8286%" y="373" width="0.0556%" height="15" fill="rgb(242,21,14)" fg:x="1199671843" fg:w="2582307"/><text x="26.0786%" y="383.50"></text></g><g><title>cache_bin_alloc_easy (1,001,138 samples, 0.02%)</title><rect x="25.8626%" y="357" width="0.0216%" height="15" fill="rgb(222,19,48)" fg:x="1201253012" fg:w="1001138"/><text x="26.1126%" y="367.50"></text></g><g><title>cache_bin_alloc_impl (1,001,138 samples, 0.02%)</title><rect x="25.8626%" y="341" width="0.0216%" height="15" fill="rgb(232,45,27)" fg:x="1201253012" fg:w="1001138"/><text x="26.1126%" y="351.50"></text></g><g><title>&lt;pgdog::net::messages::command_complete::CommandComplete as pgdog::net::messages::FromBytes&gt;::from_bytes (30,068,636 samples, 0.65%)</title><rect x="25.4032%" y="597" width="0.6474%" height="15" fill="rgb(249,103,42)" fg:x="1179913173" fg:w="30068636"/><text x="25.6532%" y="607.50"></text></g><g><title>pgdog::net::c_string_buf (23,378,158 samples, 0.50%)</title><rect x="25.5472%" y="581" width="0.5033%" height="15" fill="rgb(246,81,33)" fg:x="1186603651" fg:w="23378158"/><text x="25.7972%" y="591.50"></text></g><g><title>pgdog::net::c_string_buf_len (7,727,659 samples, 0.17%)</title><rect x="25.8842%" y="565" width="0.1664%" height="15" fill="rgb(252,33,42)" fg:x="1202254150" fg:w="7727659"/><text x="26.1342%" y="575.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_i32 (1,335,490 samples, 0.03%)</title><rect x="26.1188%" y="581" width="0.0288%" height="15" fill="rgb(209,212,41)" fg:x="1213152381" fg:w="1335490"/><text x="26.3688%" y="591.50"></text></g><g><title>&lt;bytes::bytes::Bytes as bytes::buf::buf_impl::Buf&gt;::advance (1,335,490 samples, 0.03%)</title><rect x="26.1188%" y="565" width="0.0288%" height="15" fill="rgb(207,154,6)" fg:x="1213152381" fg:w="1335490"/><text x="26.3688%" y="575.50"></text></g><g><title>bytes::bytes::Bytes::inc_start (1,335,490 samples, 0.03%)</title><rect x="26.1188%" y="549" width="0.0288%" height="15" fill="rgb(223,64,47)" fg:x="1213152381" fg:w="1335490"/><text x="26.3688%" y="559.50"></text></g><g><title>&lt;pgdog::net::messages::rfq::ReadyForQuery as pgdog::net::messages::FromBytes&gt;::from_bytes (6,073,804 samples, 0.13%)</title><rect x="26.0506%" y="597" width="0.1308%" height="15" fill="rgb(211,161,38)" fg:x="1209981809" fg:w="6073804"/><text x="26.3006%" y="607.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (1,567,742 samples, 0.03%)</title><rect x="26.1476%" y="581" width="0.0338%" height="15" fill="rgb(219,138,40)" fg:x="1214487871" fg:w="1567742"/><text x="26.3976%" y="591.50"></text></g><g><title>bytes::bytes::shared_drop (3,532,149 samples, 0.08%)</title><rect x="26.1813%" y="597" width="0.0760%" height="15" fill="rgb(241,228,46)" fg:x="1216055613" fg:w="3532149"/><text x="26.4313%" y="607.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (3,532,149 samples, 0.08%)</title><rect x="26.1813%" y="581" width="0.0760%" height="15" fill="rgb(223,209,38)" fg:x="1216055613" fg:w="3532149"/><text x="26.4313%" y="591.50"></text></g><g><title>bytes::bytes::shared_drop::_{{closure}} (3,532,149 samples, 0.08%)</title><rect x="26.1813%" y="565" width="0.0760%" height="15" fill="rgb(236,164,45)" fg:x="1216055613" fg:w="3532149"/><text x="26.4313%" y="575.50"></text></g><g><title>bytes::bytes::release_shared (3,532,149 samples, 0.08%)</title><rect x="26.1813%" y="549" width="0.0760%" height="15" fill="rgb(231,15,5)" fg:x="1216055613" fg:w="3532149"/><text x="26.4313%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::messages::command_complete::CommandComplete&gt; (2,755,817 samples, 0.06%)</title><rect x="26.2574%" y="597" width="0.0593%" height="15" fill="rgb(252,35,15)" fg:x="1219587762" fg:w="2755817"/><text x="26.5074%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;bytes::bytes::Bytes&gt;&gt; (2,755,817 samples, 0.06%)</title><rect x="26.2574%" y="581" width="0.0593%" height="15" fill="rgb(248,181,18)" fg:x="1219587762" fg:w="2755817"/><text x="26.5074%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (2,755,817 samples, 0.06%)</title><rect x="26.2574%" y="565" width="0.0593%" height="15" fill="rgb(233,39,42)" fg:x="1219587762" fg:w="2755817"/><text x="26.5074%" y="575.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (2,755,817 samples, 0.06%)</title><rect x="26.2574%" y="549" width="0.0593%" height="15" fill="rgb(238,110,33)" fg:x="1219587762" fg:w="2755817"/><text x="26.5074%" y="559.50"></text></g><g><title>bytes::bytes::shared_drop (2,755,817 samples, 0.06%)</title><rect x="26.2574%" y="533" width="0.0593%" height="15" fill="rgb(233,195,10)" fg:x="1219587762" fg:w="2755817"/><text x="26.5074%" y="543.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1,392,222 samples, 0.03%)</title><rect x="26.2867%" y="517" width="0.0300%" height="15" fill="rgb(254,105,3)" fg:x="1220951357" fg:w="1392222"/><text x="26.5367%" y="527.50"></text></g><g><title>bytes::bytes::shared_drop::_{{closure}} (1,392,222 samples, 0.03%)</title><rect x="26.2867%" y="501" width="0.0300%" height="15" fill="rgb(221,225,9)" fg:x="1220951357" fg:w="1392222"/><text x="26.5367%" y="511.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,660,398 samples, 0.04%)</title><rect x="26.3167%" y="597" width="0.0357%" height="15" fill="rgb(224,227,45)" fg:x="1222343579" fg:w="1660398"/><text x="26.5667%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,660,398 samples, 0.04%)</title><rect x="26.3167%" y="581" width="0.0357%" height="15" fill="rgb(229,198,43)" fg:x="1222343579" fg:w="1660398"/><text x="26.5667%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1,660,398 samples, 0.04%)</title><rect x="26.3167%" y="565" width="0.0357%" height="15" fill="rgb(206,209,35)" fg:x="1222343579" fg:w="1660398"/><text x="26.5667%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,660,398 samples, 0.04%)</title><rect x="26.3167%" y="549" width="0.0357%" height="15" fill="rgb(245,195,53)" fg:x="1222343579" fg:w="1660398"/><text x="26.5667%" y="559.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::AddAssign&gt;::add_assign (2,921,180 samples, 0.06%)</title><rect x="26.3524%" y="581" width="0.0629%" height="15" fill="rgb(240,92,26)" fg:x="1224003977" fg:w="2921180"/><text x="26.6024%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::Add&gt;::add (1,746,296 samples, 0.04%)</title><rect x="26.3777%" y="565" width="0.0376%" height="15" fill="rgb(207,40,23)" fg:x="1225178861" fg:w="1746296"/><text x="26.6277%" y="575.50"></text></g><g><title>core::time::Duration::checked_add (1,746,296 samples, 0.04%)</title><rect x="26.3777%" y="549" width="0.0376%" height="15" fill="rgb(223,111,35)" fg:x="1225178861" fg:w="1746296"/><text x="26.6277%" y="559.50"></text></g><g><title>pgdog::backend::stats::Stats::query (4,524,147 samples, 0.10%)</title><rect x="26.3524%" y="597" width="0.0974%" height="15" fill="rgb(229,147,28)" fg:x="1224003977" fg:w="4524147"/><text x="26.6024%" y="607.50"></text></g><g><title>std::time::Instant::duration_since (1,602,967 samples, 0.03%)</title><rect x="26.4153%" y="581" width="0.0345%" height="15" fill="rgb(211,29,28)" fg:x="1226925157" fg:w="1602967"/><text x="26.6653%" y="591.50"></text></g><g><title>std::time::Instant::checked_duration_since (1,602,967 samples, 0.03%)</title><rect x="26.4153%" y="565" width="0.0345%" height="15" fill="rgb(228,72,33)" fg:x="1226925157" fg:w="1602967"/><text x="26.6653%" y="575.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (1,602,967 samples, 0.03%)</title><rect x="26.4153%" y="549" width="0.0345%" height="15" fill="rgb(205,214,31)" fg:x="1226925157" fg:w="1602967"/><text x="26.6653%" y="559.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (1,602,967 samples, 0.03%)</title><rect x="26.4153%" y="533" width="0.0345%" height="15" fill="rgb(224,111,15)" fg:x="1226925157" fg:w="1602967"/><text x="26.6653%" y="543.50"></text></g><g><title>pgdog::backend::stats::Stats::receive (3,385,939 samples, 0.07%)</title><rect x="26.4498%" y="597" width="0.0729%" height="15" fill="rgb(253,21,26)" fg:x="1228528124" fg:w="3385939"/><text x="26.6998%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_default (1,866,438 samples, 0.04%)</title><rect x="26.5422%" y="549" width="0.0402%" height="15" fill="rgb(245,139,43)" fg:x="1232817016" fg:w="1866438"/><text x="26.7922%" y="559.50"></text></g><g><title>pgdog::backend::stats::Stats::transaction_state (4,180,199 samples, 0.09%)</title><rect x="26.5422%" y="581" width="0.0900%" height="15" fill="rgb(252,170,7)" fg:x="1232817016" fg:w="4180199"/><text x="26.7922%" y="591.50"></text></g><g><title>std::time::Instant::duration_since (4,180,199 samples, 0.09%)</title><rect x="26.5422%" y="565" width="0.0900%" height="15" fill="rgb(231,118,14)" fg:x="1232817016" fg:w="4180199"/><text x="26.7922%" y="575.50"></text></g><g><title>std::time::Instant::checked_duration_since (2,313,761 samples, 0.05%)</title><rect x="26.5824%" y="549" width="0.0498%" height="15" fill="rgb(238,83,0)" fg:x="1234683454" fg:w="2313761"/><text x="26.8324%" y="559.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (2,313,761 samples, 0.05%)</title><rect x="26.5824%" y="533" width="0.0498%" height="15" fill="rgb(221,39,39)" fg:x="1234683454" fg:w="2313761"/><text x="26.8324%" y="543.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (2,313,761 samples, 0.05%)</title><rect x="26.5824%" y="517" width="0.0498%" height="15" fill="rgb(222,119,46)" fg:x="1234683454" fg:w="2313761"/><text x="26.8324%" y="527.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1,438,051 samples, 0.03%)</title><rect x="26.6322%" y="549" width="0.0310%" height="15" fill="rgb(222,165,49)" fg:x="1236997215" fg:w="1438051"/><text x="26.8822%" y="559.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (1,438,051 samples, 0.03%)</title><rect x="26.6322%" y="533" width="0.0310%" height="15" fill="rgb(219,113,52)" fg:x="1236997215" fg:w="1438051"/><text x="26.8822%" y="543.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1,438,051 samples, 0.03%)</title><rect x="26.6322%" y="517" width="0.0310%" height="15" fill="rgb(214,7,15)" fg:x="1236997215" fg:w="1438051"/><text x="26.8822%" y="527.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1,438,051 samples, 0.03%)</title><rect x="26.6322%" y="501" width="0.0310%" height="15" fill="rgb(235,32,4)" fg:x="1236997215" fg:w="1438051"/><text x="26.8822%" y="511.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (1,438,051 samples, 0.03%)</title><rect x="26.6322%" y="485" width="0.0310%" height="15" fill="rgb(238,90,54)" fg:x="1236997215" fg:w="1438051"/><text x="26.8822%" y="495.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (1,438,051 samples, 0.03%)</title><rect x="26.6322%" y="469" width="0.0310%" height="15" fill="rgb(213,208,19)" fg:x="1236997215" fg:w="1438051"/><text x="26.8822%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1,438,051 samples, 0.03%)</title><rect x="26.6322%" y="453" width="0.0310%" height="15" fill="rgb(233,156,4)" fg:x="1236997215" fg:w="1438051"/><text x="26.8822%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (1,438,051 samples, 0.03%)</title><rect x="26.6322%" y="437" width="0.0310%" height="15" fill="rgb(207,194,5)" fg:x="1236997215" fg:w="1438051"/><text x="26.8822%" y="447.50"></text></g><g><title>[libc.so.6] (6,730,473 samples, 0.14%)</title><rect x="26.6631%" y="549" width="0.1449%" height="15" fill="rgb(206,111,30)" fg:x="1238435266" fg:w="6730473"/><text x="26.9131%" y="559.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2,620,245 samples, 0.06%)</title><rect x="26.8080%" y="549" width="0.0564%" height="15" fill="rgb(243,70,54)" fg:x="1245165739" fg:w="2620245"/><text x="27.0580%" y="559.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2,620,245 samples, 0.06%)</title><rect x="26.8080%" y="533" width="0.0564%" height="15" fill="rgb(242,28,8)" fg:x="1245165739" fg:w="2620245"/><text x="27.0580%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (3,027,157 samples, 0.07%)</title><rect x="26.8645%" y="501" width="0.0652%" height="15" fill="rgb(219,106,18)" fg:x="1247785984" fg:w="3027157"/><text x="27.1145%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,027,157 samples, 0.07%)</title><rect x="26.8645%" y="485" width="0.0652%" height="15" fill="rgb(244,222,10)" fg:x="1247785984" fg:w="3027157"/><text x="27.1145%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3,027,157 samples, 0.07%)</title><rect x="26.8645%" y="469" width="0.0652%" height="15" fill="rgb(236,179,52)" fg:x="1247785984" fg:w="3027157"/><text x="27.1145%" y="479.50"></text></g><g><title>&lt;pgdog::net::messages::backend_key::BackendKeyData as core::hash::Hash&gt;::hash (3,027,157 samples, 0.07%)</title><rect x="26.8645%" y="453" width="0.0652%" height="15" fill="rgb(213,23,39)" fg:x="1247785984" fg:w="3027157"/><text x="27.1145%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (3,027,157 samples, 0.07%)</title><rect x="26.8645%" y="437" width="0.0652%" height="15" fill="rgb(238,48,10)" fg:x="1247785984" fg:w="3027157"/><text x="27.1145%" y="447.50"></text></g><g><title>core::hash::Hasher::write_i32 (3,027,157 samples, 0.07%)</title><rect x="26.8645%" y="421" width="0.0652%" height="15" fill="rgb(251,196,23)" fg:x="1247785984" fg:w="3027157"/><text x="27.1145%" y="431.50"></text></g><g><title>core::hash::Hasher::write_u32 (3,027,157 samples, 0.07%)</title><rect x="26.8645%" y="405" width="0.0652%" height="15" fill="rgb(250,152,24)" fg:x="1247785984" fg:w="3027157"/><text x="27.1145%" y="415.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (3,027,157 samples, 0.07%)</title><rect x="26.8645%" y="389" width="0.0652%" height="15" fill="rgb(209,150,17)" fg:x="1247785984" fg:w="3027157"/><text x="27.1145%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (3,027,157 samples, 0.07%)</title><rect x="26.8645%" y="373" width="0.0652%" height="15" fill="rgb(234,202,34)" fg:x="1247785984" fg:w="3027157"/><text x="27.1145%" y="383.50"></text></g><g><title>core::intrinsics::likely (7,099,308 samples, 0.15%)</title><rect x="26.9639%" y="453" width="0.1528%" height="15" fill="rgb(253,148,53)" fg:x="1252403688" fg:w="7099308"/><text x="27.2139%" y="463.50"></text></g><g><title>pgdog::backend::stats::Stats::transaction (31,608,701 samples, 0.68%)</title><rect x="26.5227%" y="597" width="0.6805%" height="15" fill="rgb(218,129,16)" fg:x="1231914063" fg:w="31608701"/><text x="26.7727%" y="607.50"></text></g><g><title>pgdog::backend::stats::Stats::update (26,525,549 samples, 0.57%)</title><rect x="26.6322%" y="581" width="0.5711%" height="15" fill="rgb(216,85,19)" fg:x="1236997215" fg:w="26525549"/><text x="26.8822%" y="591.50"></text></g><g><title>pgdog::backend::stats::update (26,525,549 samples, 0.57%)</title><rect x="26.6322%" y="565" width="0.5711%" height="15" fill="rgb(235,228,7)" fg:x="1236997215" fg:w="26525549"/><text x="26.8822%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (15,736,780 samples, 0.34%)</title><rect x="26.8645%" y="549" width="0.3388%" height="15" fill="rgb(245,175,0)" fg:x="1247785984" fg:w="15736780"/><text x="27.1145%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (15,736,780 samples, 0.34%)</title><rect x="26.8645%" y="533" width="0.3388%" height="15" fill="rgb(208,168,36)" fg:x="1247785984" fg:w="15736780"/><text x="27.1145%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (15,736,780 samples, 0.34%)</title><rect x="26.8645%" y="517" width="0.3388%" height="15" fill="rgb(246,171,24)" fg:x="1247785984" fg:w="15736780"/><text x="27.1145%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (12,709,623 samples, 0.27%)</title><rect x="26.9296%" y="501" width="0.2736%" height="15" fill="rgb(215,142,24)" fg:x="1250813141" fg:w="12709623"/><text x="27.1796%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12,709,623 samples, 0.27%)</title><rect x="26.9296%" y="485" width="0.2736%" height="15" fill="rgb(250,187,7)" fg:x="1250813141" fg:w="12709623"/><text x="27.1796%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (12,709,623 samples, 0.27%)</title><rect x="26.9296%" y="469" width="0.2736%" height="15" fill="rgb(228,66,33)" fg:x="1250813141" fg:w="12709623"/><text x="27.1796%" y="479.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (4,019,768 samples, 0.09%)</title><rect x="27.1167%" y="453" width="0.0865%" height="15" fill="rgb(234,215,21)" fg:x="1259502996" fg:w="4019768"/><text x="27.3667%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4,019,768 samples, 0.09%)</title><rect x="27.1167%" y="437" width="0.0865%" height="15" fill="rgb(222,191,20)" fg:x="1259502996" fg:w="4019768"/><text x="27.3667%" y="447.50"></text></g><g><title>pgdog::net::messages::Message::payload (1,102,768 samples, 0.02%)</title><rect x="27.2033%" y="597" width="0.0237%" height="15" fill="rgb(245,79,54)" fg:x="1263522764" fg:w="1102768"/><text x="27.4533%" y="607.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (1,102,768 samples, 0.02%)</title><rect x="27.2033%" y="581" width="0.0237%" height="15" fill="rgb(240,10,37)" fg:x="1263522764" fg:w="1102768"/><text x="27.4533%" y="591.50"></text></g><g><title>bytes::bytes::promotable_even_clone (1,102,768 samples, 0.02%)</title><rect x="27.2033%" y="565" width="0.0237%" height="15" fill="rgb(214,192,32)" fg:x="1263522764" fg:w="1102768"/><text x="27.4533%" y="575.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (1,102,768 samples, 0.02%)</title><rect x="27.2033%" y="549" width="0.0237%" height="15" fill="rgb(209,36,54)" fg:x="1263522764" fg:w="1102768"/><text x="27.4533%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,102,768 samples, 0.02%)</title><rect x="27.2033%" y="533" width="0.0237%" height="15" fill="rgb(220,10,11)" fg:x="1263522764" fg:w="1102768"/><text x="27.4533%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,102,768 samples, 0.02%)</title><rect x="27.2033%" y="517" width="0.0237%" height="15" fill="rgb(221,106,17)" fg:x="1263522764" fg:w="1102768"/><text x="27.4533%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,102,768 samples, 0.02%)</title><rect x="27.2033%" y="501" width="0.0237%" height="15" fill="rgb(251,142,44)" fg:x="1263522764" fg:w="1102768"/><text x="27.4533%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,102,768 samples, 0.02%)</title><rect x="27.2033%" y="485" width="0.0237%" height="15" fill="rgb(238,13,15)" fg:x="1263522764" fg:w="1102768"/><text x="27.4533%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1,102,768 samples, 0.02%)</title><rect x="27.2033%" y="469" width="0.0237%" height="15" fill="rgb(208,107,27)" fg:x="1263522764" fg:w="1102768"/><text x="27.4533%" y="479.50"></text></g><g><title>__rust_alloc (1,102,768 samples, 0.02%)</title><rect x="27.2033%" y="453" width="0.0237%" height="15" fill="rgb(205,136,37)" fg:x="1263522764" fg:w="1102768"/><text x="27.4533%" y="463.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,102,768 samples, 0.02%)</title><rect x="27.2033%" y="437" width="0.0237%" height="15" fill="rgb(250,205,27)" fg:x="1263522764" fg:w="1102768"/><text x="27.4533%" y="447.50"></text></g><g><title>_rjem_malloc (1,102,768 samples, 0.02%)</title><rect x="27.2033%" y="421" width="0.0237%" height="15" fill="rgb(210,80,43)" fg:x="1263522764" fg:w="1102768"/><text x="27.4533%" y="431.50"></text></g><g><title>imalloc_fastpath (1,102,768 samples, 0.02%)</title><rect x="27.2033%" y="405" width="0.0237%" height="15" fill="rgb(247,160,36)" fg:x="1263522764" fg:w="1102768"/><text x="27.4533%" y="415.50"></text></g><g><title>cache_bin_alloc_easy (1,102,768 samples, 0.02%)</title><rect x="27.2033%" y="389" width="0.0237%" height="15" fill="rgb(234,13,49)" fg:x="1263522764" fg:w="1102768"/><text x="27.4533%" y="399.50"></text></g><g><title>cache_bin_alloc_impl (1,102,768 samples, 0.02%)</title><rect x="27.2033%" y="373" width="0.0237%" height="15" fill="rgb(234,122,0)" fg:x="1263522764" fg:w="1102768"/><text x="27.4533%" y="383.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (2,002,693 samples, 0.04%)</title><rect x="27.6084%" y="501" width="0.0431%" height="15" fill="rgb(207,146,38)" fg:x="1282337689" fg:w="2002693"/><text x="27.8584%" y="511.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (4,557,631 samples, 0.10%)</title><rect x="27.6515%" y="501" width="0.0981%" height="15" fill="rgb(207,177,25)" fg:x="1284340382" fg:w="4557631"/><text x="27.9015%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (3,245,366 samples, 0.07%)</title><rect x="27.6797%" y="485" width="0.0699%" height="15" fill="rgb(211,178,42)" fg:x="1285652647" fg:w="3245366"/><text x="27.9297%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,245,366 samples, 0.07%)</title><rect x="27.6797%" y="469" width="0.0699%" height="15" fill="rgb(230,69,54)" fg:x="1285652647" fg:w="3245366"/><text x="27.9297%" y="479.50"></text></g><g><title>[libc.so.6] (3,245,366 samples, 0.07%)</title><rect x="27.6797%" y="453" width="0.0699%" height="15" fill="rgb(214,135,41)" fg:x="1285652647" fg:w="3245366"/><text x="27.9297%" y="463.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (7,712,997 samples, 0.17%)</title><rect x="27.6084%" y="533" width="0.1661%" height="15" fill="rgb(237,67,25)" fg:x="1282337689" fg:w="7712997"/><text x="27.8584%" y="543.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (7,712,997 samples, 0.17%)</title><rect x="27.6084%" y="517" width="0.1661%" height="15" fill="rgb(222,189,50)" fg:x="1282337689" fg:w="7712997"/><text x="27.8584%" y="527.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::remaining (1,152,673 samples, 0.02%)</title><rect x="27.7496%" y="501" width="0.0248%" height="15" fill="rgb(245,148,34)" fg:x="1288898013" fg:w="1152673"/><text x="27.9996%" y="511.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (10,673,245 samples, 0.23%)</title><rect x="27.6084%" y="565" width="0.2298%" height="15" fill="rgb(222,29,6)" fg:x="1282337689" fg:w="10673245"/><text x="27.8584%" y="575.50"></text></g><g><title>&lt;pgdog::net::stream::Stream as tokio::io::async_read::AsyncRead&gt;::poll_read (10,673,245 samples, 0.23%)</title><rect x="27.6084%" y="549" width="0.2298%" height="15" fill="rgb(221,189,43)" fg:x="1282337689" fg:w="10673245"/><text x="27.8584%" y="559.50"></text></g><g><title>pgdog::net::stream::_::&lt;impl pgdog::net::stream::Stream&gt;::project (2,960,248 samples, 0.06%)</title><rect x="27.7744%" y="533" width="0.0637%" height="15" fill="rgb(207,36,27)" fg:x="1290050686" fg:w="2960248"/><text x="28.0244%" y="543.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::remaining (1,443,783 samples, 0.03%)</title><rect x="27.8381%" y="565" width="0.0311%" height="15" fill="rgb(217,90,24)" fg:x="1293010934" fg:w="1443783"/><text x="28.0881%" y="575.50"></text></g><g><title>&lt;tokio::io::util::read_exact::ReadExact&lt;A&gt; as core::future::future::Future&gt;::poll (15,462,689 samples, 0.33%)</title><rect x="27.5653%" y="581" width="0.3329%" height="15" fill="rgb(224,66,35)" fg:x="1280337764" fg:w="15462689"/><text x="27.8153%" y="591.50"></text></g><g><title>tokio::io::util::read_exact::_::&lt;impl tokio::io::util::read_exact::ReadExact&lt;A&gt;&gt;::project (1,345,736 samples, 0.03%)</title><rect x="27.8692%" y="565" width="0.0290%" height="15" fill="rgb(221,13,50)" fg:x="1294454717" fg:w="1345736"/><text x="28.1192%" y="575.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (3,125,010 samples, 0.07%)</title><rect x="27.9904%" y="533" width="0.0673%" height="15" fill="rgb(236,68,49)" fg:x="1300082988" fg:w="3125010"/><text x="28.2404%" y="543.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (3,125,010 samples, 0.07%)</title><rect x="27.9904%" y="517" width="0.0673%" height="15" fill="rgb(229,146,28)" fg:x="1300082988" fg:w="3125010"/><text x="28.2404%" y="527.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (1,334,891 samples, 0.03%)</title><rect x="28.0289%" y="501" width="0.0287%" height="15" fill="rgb(225,31,38)" fg:x="1301873107" fg:w="1334891"/><text x="28.2789%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1,334,891 samples, 0.03%)</title><rect x="28.0289%" y="485" width="0.0287%" height="15" fill="rgb(250,208,3)" fg:x="1301873107" fg:w="1334891"/><text x="28.2789%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1,334,891 samples, 0.03%)</title><rect x="28.0289%" y="469" width="0.0287%" height="15" fill="rgb(246,54,23)" fg:x="1301873107" fg:w="1334891"/><text x="28.2789%" y="479.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (7,524,221 samples, 0.16%)</title><rect x="27.9380%" y="565" width="0.1620%" height="15" fill="rgb(243,76,11)" fg:x="1297650240" fg:w="7524221"/><text x="28.1880%" y="575.50"></text></g><g><title>&lt;pgdog::net::stream::Stream as tokio::io::async_read::AsyncRead&gt;::poll_read (7,524,221 samples, 0.16%)</title><rect x="27.9380%" y="549" width="0.1620%" height="15" fill="rgb(245,21,50)" fg:x="1297650240" fg:w="7524221"/><text x="28.1880%" y="559.50"></text></g><g><title>pgdog::net::stream::_::&lt;impl pgdog::net::stream::Stream&gt;::project (1,966,463 samples, 0.04%)</title><rect x="28.0577%" y="533" width="0.0423%" height="15" fill="rgb(228,9,43)" fg:x="1303207998" fg:w="1966463"/><text x="28.3077%" y="543.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_i32 (2,987,413 samples, 0.06%)</title><rect x="28.1000%" y="565" width="0.0643%" height="15" fill="rgb(208,100,47)" fg:x="1305174461" fg:w="2987413"/><text x="28.3500%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,987,413 samples, 0.06%)</title><rect x="28.1000%" y="549" width="0.0643%" height="15" fill="rgb(232,26,8)" fg:x="1305174461" fg:w="2987413"/><text x="28.3500%" y="559.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_i32::_{{closure}} (2,987,413 samples, 0.06%)</title><rect x="28.1000%" y="533" width="0.0643%" height="15" fill="rgb(216,166,38)" fg:x="1305174461" fg:w="2987413"/><text x="28.3500%" y="543.50"></text></g><g><title>core::num::&lt;impl i32&gt;::from_be_bytes (2,987,413 samples, 0.06%)</title><rect x="28.1000%" y="517" width="0.0643%" height="15" fill="rgb(251,202,51)" fg:x="1305174461" fg:w="2987413"/><text x="28.3500%" y="527.50"></text></g><g><title>core::num::&lt;impl i32&gt;::from_be (2,987,413 samples, 0.06%)</title><rect x="28.1000%" y="501" width="0.0643%" height="15" fill="rgb(254,216,34)" fg:x="1305174461" fg:w="2987413"/><text x="28.3500%" y="511.50"></text></g><g><title>core::num::&lt;impl i32&gt;::swap_bytes (2,987,413 samples, 0.06%)</title><rect x="28.1000%" y="485" width="0.0643%" height="15" fill="rgb(251,32,27)" fg:x="1305174461" fg:w="2987413"/><text x="28.3500%" y="495.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (2,987,413 samples, 0.06%)</title><rect x="28.1000%" y="469" width="0.0643%" height="15" fill="rgb(208,127,28)" fg:x="1305174461" fg:w="2987413"/><text x="28.3500%" y="479.50"></text></g><g><title>&lt;tokio::io::util::read_int::ReadI32&lt;R&gt; as core::future::future::Future&gt;::poll (14,132,027 samples, 0.30%)</title><rect x="27.8982%" y="581" width="0.3043%" height="15" fill="rgb(224,137,22)" fg:x="1295800453" fg:w="14132027"/><text x="28.1482%" y="591.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (1,770,606 samples, 0.04%)</title><rect x="28.1643%" y="565" width="0.0381%" height="15" fill="rgb(254,70,32)" fg:x="1308161874" fg:w="1770606"/><text x="28.4143%" y="575.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,770,606 samples, 0.04%)</title><rect x="28.1643%" y="549" width="0.0381%" height="15" fill="rgb(229,75,37)" fg:x="1308161874" fg:w="1770606"/><text x="28.4143%" y="559.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,770,606 samples, 0.04%)</title><rect x="28.1643%" y="533" width="0.0381%" height="15" fill="rgb(252,64,23)" fg:x="1308161874" fg:w="1770606"/><text x="28.4143%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,770,606 samples, 0.04%)</title><rect x="28.1643%" y="517" width="0.0381%" height="15" fill="rgb(232,162,48)" fg:x="1308161874" fg:w="1770606"/><text x="28.4143%" y="527.50"></text></g><g><title>[libc.so.6] (251,080,265 samples, 5.41%)</title><rect x="28.3929%" y="245" width="5.4057%" height="15" fill="rgb(246,160,12)" fg:x="1318780229" fg:w="251080265"/><text x="28.6429%" y="255.50">[libc.s..</text></g><g><title>[unknown] (251,080,265 samples, 5.41%)</title><rect x="28.3929%" y="229" width="5.4057%" height="15" fill="rgb(247,166,0)" fg:x="1318780229" fg:w="251080265"/><text x="28.6429%" y="239.50">[unknow..</text></g><g><title>[unknown] (249,904,231 samples, 5.38%)</title><rect x="28.4183%" y="213" width="5.3804%" height="15" fill="rgb(249,219,21)" fg:x="1319956263" fg:w="249904231"/><text x="28.6683%" y="223.50">[unknow..</text></g><g><title>[unknown] (248,392,209 samples, 5.35%)</title><rect x="28.4508%" y="197" width="5.3478%" height="15" fill="rgb(205,209,3)" fg:x="1321468285" fg:w="248392209"/><text x="28.7008%" y="207.50">[unknow..</text></g><g><title>[unknown] (248,335,427 samples, 5.35%)</title><rect x="28.4520%" y="181" width="5.3466%" height="15" fill="rgb(243,44,1)" fg:x="1321525067" fg:w="248335427"/><text x="28.7020%" y="191.50">[unknow..</text></g><g><title>[unknown] (242,541,300 samples, 5.22%)</title><rect x="28.5768%" y="165" width="5.2218%" height="15" fill="rgb(206,159,16)" fg:x="1327319194" fg:w="242541300"/><text x="28.8268%" y="175.50">[unkno..</text></g><g><title>[unknown] (234,204,123 samples, 5.04%)</title><rect x="28.7563%" y="149" width="5.0423%" height="15" fill="rgb(244,77,30)" fg:x="1335656371" fg:w="234204123"/><text x="29.0063%" y="159.50">[unkno..</text></g><g><title>[unknown] (231,609,037 samples, 4.99%)</title><rect x="28.8122%" y="133" width="4.9865%" height="15" fill="rgb(218,69,12)" fg:x="1338251457" fg:w="231609037"/><text x="29.0622%" y="143.50">[unkno..</text></g><g><title>[unknown] (223,960,756 samples, 4.82%)</title><rect x="28.9768%" y="117" width="4.8218%" height="15" fill="rgb(212,87,7)" fg:x="1345899738" fg:w="223960756"/><text x="29.2268%" y="127.50">[unkno..</text></g><g><title>[unknown] (167,982,779 samples, 3.62%)</title><rect x="30.1820%" y="101" width="3.6166%" height="15" fill="rgb(245,114,25)" fg:x="1401877715" fg:w="167982779"/><text x="30.4320%" y="111.50">[unk..</text></g><g><title>[unknown] (115,338,691 samples, 2.48%)</title><rect x="31.3154%" y="85" width="2.4832%" height="15" fill="rgb(210,61,42)" fg:x="1454521803" fg:w="115338691"/><text x="31.5654%" y="95.50">[u..</text></g><g><title>[unknown] (97,812,307 samples, 2.11%)</title><rect x="31.6928%" y="69" width="2.1059%" height="15" fill="rgb(211,52,33)" fg:x="1472048187" fg:w="97812307"/><text x="31.9428%" y="79.50">[..</text></g><g><title>[unknown] (74,495,568 samples, 1.60%)</title><rect x="32.1948%" y="53" width="1.6039%" height="15" fill="rgb(234,58,33)" fg:x="1495364926" fg:w="74495568"/><text x="32.4448%" y="63.50"></text></g><g><title>[unknown] (24,977,528 samples, 0.54%)</title><rect x="33.2609%" y="37" width="0.5378%" height="15" fill="rgb(220,115,36)" fg:x="1544882966" fg:w="24977528"/><text x="33.5109%" y="47.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (254,706,110 samples, 5.48%)</title><rect x="28.3149%" y="421" width="5.4837%" height="15" fill="rgb(243,153,54)" fg:x="1315155294" fg:w="254706110"/><text x="28.5649%" y="431.50">&lt;&amp;mio::..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (254,706,110 samples, 5.48%)</title><rect x="28.3149%" y="405" width="5.4837%" height="15" fill="rgb(251,47,18)" fg:x="1315155294" fg:w="254706110"/><text x="28.5649%" y="415.50">mio::io..</text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (254,706,110 samples, 5.48%)</title><rect x="28.3149%" y="389" width="5.4837%" height="15" fill="rgb(242,102,42)" fg:x="1315155294" fg:w="254706110"/><text x="28.5649%" y="399.50">mio::sy..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (254,706,110 samples, 5.48%)</title><rect x="28.3149%" y="373" width="5.4837%" height="15" fill="rgb(234,31,38)" fg:x="1315155294" fg:w="254706110"/><text x="28.5649%" y="383.50">&lt;&amp;mio::..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (254,706,110 samples, 5.48%)</title><rect x="28.3149%" y="357" width="5.4837%" height="15" fill="rgb(221,117,51)" fg:x="1315155294" fg:w="254706110"/><text x="28.5649%" y="367.50">&lt;&amp;std::..</text></g><g><title>std::sys::net::connection::socket::TcpStream::read (254,706,110 samples, 5.48%)</title><rect x="28.3149%" y="341" width="5.4837%" height="15" fill="rgb(212,20,18)" fg:x="1315155294" fg:w="254706110"/><text x="28.5649%" y="351.50">std::sy..</text></g><g><title>std::sys::net::connection::socket::unix::Socket::read (254,706,110 samples, 5.48%)</title><rect x="28.3149%" y="325" width="5.4837%" height="15" fill="rgb(245,133,36)" fg:x="1315155294" fg:w="254706110"/><text x="28.5649%" y="335.50">std::sy..</text></g><g><title>std::sys::net::connection::socket::unix::Socket::recv_with_flags (254,706,110 samples, 5.48%)</title><rect x="28.3149%" y="309" width="5.4837%" height="15" fill="rgb(212,6,19)" fg:x="1315155294" fg:w="254706110"/><text x="28.5649%" y="319.50">std::sy..</text></g><g><title>recv (254,706,110 samples, 5.48%)</title><rect x="28.3149%" y="293" width="5.4837%" height="15" fill="rgb(218,1,36)" fg:x="1315155294" fg:w="254706110"/><text x="28.5649%" y="303.50">recv</text></g><g><title>[libc.so.6] (254,692,888 samples, 5.48%)</title><rect x="28.3152%" y="277" width="5.4835%" height="15" fill="rgb(246,84,54)" fg:x="1315168516" fg:w="254692888"/><text x="28.5652%" y="287.50">[libc.s..</text></g><g><title>[libc.so.6] (254,692,888 samples, 5.48%)</title><rect x="28.3152%" y="261" width="5.4835%" height="15" fill="rgb(242,110,6)" fg:x="1315168516" fg:w="254692888"/><text x="28.5652%" y="271.50">[libc.s..</text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (256,088,463 samples, 5.51%)</title><rect x="28.3149%" y="501" width="5.5135%" height="15" fill="rgb(214,47,5)" fg:x="1315155294" fg:w="256088463"/><text x="28.5649%" y="511.50">&lt;tokio:..</text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (256,088,463 samples, 5.51%)</title><rect x="28.3149%" y="485" width="5.5135%" height="15" fill="rgb(218,159,25)" fg:x="1315155294" fg:w="256088463"/><text x="28.5649%" y="495.50">&lt;tokio:..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (256,088,463 samples, 5.51%)</title><rect x="28.3149%" y="469" width="5.5135%" height="15" fill="rgb(215,211,28)" fg:x="1315155294" fg:w="256088463"/><text x="28.5649%" y="479.50">&lt;tokio:..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (256,088,463 samples, 5.51%)</title><rect x="28.3149%" y="453" width="5.5135%" height="15" fill="rgb(238,59,32)" fg:x="1315155294" fg:w="256088463"/><text x="28.5649%" y="463.50">tokio::..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (256,088,463 samples, 5.51%)</title><rect x="28.3149%" y="437" width="5.5135%" height="15" fill="rgb(226,82,3)" fg:x="1315155294" fg:w="256088463"/><text x="28.5649%" y="447.50">tokio::..</text></g><g><title>tokio::io::read_buf::ReadBuf::unfilled_mut (1,382,353 samples, 0.03%)</title><rect x="33.7987%" y="421" width="0.0298%" height="15" fill="rgb(240,164,32)" fg:x="1569861404" fg:w="1382353"/><text x="34.0487%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (8,596,362 samples, 0.19%)</title><rect x="33.9102%" y="485" width="0.1851%" height="15" fill="rgb(232,46,7)" fg:x="1575041043" fg:w="8596362"/><text x="34.1602%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8,596,362 samples, 0.19%)</title><rect x="33.9102%" y="469" width="0.1851%" height="15" fill="rgb(229,129,53)" fg:x="1575041043" fg:w="8596362"/><text x="34.1602%" y="479.50"></text></g><g><title>[libc.so.6] (8,596,362 samples, 0.19%)</title><rect x="33.9102%" y="453" width="0.1851%" height="15" fill="rgb(234,188,29)" fg:x="1575041043" fg:w="8596362"/><text x="34.1602%" y="463.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (275,515,139 samples, 5.93%)</title><rect x="28.2025%" y="565" width="5.9318%" height="15" fill="rgb(246,141,4)" fg:x="1309933185" fg:w="275515139"/><text x="28.4525%" y="575.50">&lt;&amp;mut T ..</text></g><g><title>&lt;pgdog::net::stream::Stream as tokio::io::async_read::AsyncRead&gt;::poll_read (275,515,139 samples, 5.93%)</title><rect x="28.2025%" y="549" width="5.9318%" height="15" fill="rgb(229,23,39)" fg:x="1309933185" fg:w="275515139"/><text x="28.4525%" y="559.50">&lt;pgdog::..</text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (272,101,071 samples, 5.86%)</title><rect x="28.2760%" y="533" width="5.8583%" height="15" fill="rgb(206,12,3)" fg:x="1313347253" fg:w="272101071"/><text x="28.5260%" y="543.50">&lt;tokio:..</text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (272,101,071 samples, 5.86%)</title><rect x="28.2760%" y="517" width="5.8583%" height="15" fill="rgb(252,226,20)" fg:x="1313347253" fg:w="272101071"/><text x="28.5260%" y="527.50">&lt;tokio:..</text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (14,204,567 samples, 0.31%)</title><rect x="33.8284%" y="501" width="0.3058%" height="15" fill="rgb(216,123,35)" fg:x="1571243757" fg:w="14204567"/><text x="34.0784%" y="511.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1,810,919 samples, 0.04%)</title><rect x="34.0952%" y="485" width="0.0390%" height="15" fill="rgb(212,68,40)" fg:x="1583637405" fg:w="1810919"/><text x="34.3452%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1,810,919 samples, 0.04%)</title><rect x="34.0952%" y="469" width="0.0390%" height="15" fill="rgb(254,125,32)" fg:x="1583637405" fg:w="1810919"/><text x="34.3452%" y="479.50"></text></g><g><title>&lt;tokio::io::util::read_int::ReadU8&lt;R&gt; as core::future::future::Future&gt;::poll (279,038,844 samples, 6.01%)</title><rect x="28.2025%" y="581" width="6.0076%" height="15" fill="rgb(253,97,22)" fg:x="1309932480" fg:w="279038844"/><text x="28.4525%" y="591.50">&lt;tokio::..</text></g><g><title>tokio::io::read_buf::ReadBuf::filled (3,523,000 samples, 0.08%)</title><rect x="34.1342%" y="565" width="0.0758%" height="15" fill="rgb(241,101,14)" fg:x="1585448324" fg:w="3523000"/><text x="34.3842%" y="575.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3,523,000 samples, 0.08%)</title><rect x="34.1342%" y="549" width="0.0758%" height="15" fill="rgb(238,103,29)" fg:x="1585448324" fg:w="3523000"/><text x="34.3842%" y="559.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3,523,000 samples, 0.08%)</title><rect x="34.1342%" y="533" width="0.0758%" height="15" fill="rgb(233,195,47)" fg:x="1585448324" fg:w="3523000"/><text x="34.3842%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3,523,000 samples, 0.08%)</title><rect x="34.1342%" y="517" width="0.0758%" height="15" fill="rgb(246,218,30)" fg:x="1585448324" fg:w="3523000"/><text x="34.3842%" y="527.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (2,278,272 samples, 0.05%)</title><rect x="34.2101%" y="581" width="0.0491%" height="15" fill="rgb(219,145,47)" fg:x="1588971324" fg:w="2278272"/><text x="34.4601%" y="591.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (2,278,272 samples, 0.05%)</title><rect x="34.2101%" y="565" width="0.0491%" height="15" fill="rgb(243,12,26)" fg:x="1588971324" fg:w="2278272"/><text x="34.4601%" y="575.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (2,278,272 samples, 0.05%)</title><rect x="34.2101%" y="549" width="0.0491%" height="15" fill="rgb(214,87,16)" fg:x="1588971324" fg:w="2278272"/><text x="34.4601%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,278,272 samples, 0.05%)</title><rect x="34.2101%" y="533" width="0.0491%" height="15" fill="rgb(208,99,42)" fg:x="1588971324" fg:w="2278272"/><text x="34.4601%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3,109,492 samples, 0.07%)</title><rect x="34.2591%" y="565" width="0.0669%" height="15" fill="rgb(253,99,2)" fg:x="1591249596" fg:w="3109492"/><text x="34.5091%" y="575.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (3,109,492 samples, 0.07%)</title><rect x="34.2591%" y="549" width="0.0669%" height="15" fill="rgb(220,168,23)" fg:x="1591249596" fg:w="3109492"/><text x="34.5091%" y="559.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt;::from (1,482,962 samples, 0.03%)</title><rect x="34.2942%" y="533" width="0.0319%" height="15" fill="rgb(242,38,24)" fg:x="1592876126" fg:w="1482962"/><text x="34.5442%" y="543.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (4,812,612 samples, 0.10%)</title><rect x="34.2591%" y="581" width="0.1036%" height="15" fill="rgb(225,182,9)" fg:x="1591249596" fg:w="4812612"/><text x="34.5091%" y="591.50"></text></g><g><title>bytes::bytes_mut::BytesMut::get_vec_pos (1,703,120 samples, 0.04%)</title><rect x="34.3261%" y="565" width="0.0367%" height="15" fill="rgb(243,178,37)" fg:x="1594359088" fg:w="1703120"/><text x="34.5761%" y="575.50"></text></g><g><title>bytes::bytes_mut::BytesMut::resize (5,269,167 samples, 0.11%)</title><rect x="34.3627%" y="581" width="0.1134%" height="15" fill="rgb(232,139,19)" fg:x="1596062208" fg:w="5269167"/><text x="34.6127%" y="591.50"></text></g><g><title>core::intrinsics::write_bytes (5,269,167 samples, 0.11%)</title><rect x="34.3627%" y="565" width="0.1134%" height="15" fill="rgb(225,201,24)" fg:x="1596062208" fg:w="5269167"/><text x="34.6127%" y="575.50"></text></g><g><title>[libc.so.6] (5,269,167 samples, 0.11%)</title><rect x="34.3627%" y="549" width="0.1134%" height="15" fill="rgb(221,47,46)" fg:x="1596062208" fg:w="5269167"/><text x="34.6127%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12,129,072 samples, 0.26%)</title><rect x="34.4762%" y="485" width="0.2611%" height="15" fill="rgb(249,23,13)" fg:x="1601331375" fg:w="12129072"/><text x="34.7262%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12,129,072 samples, 0.26%)</title><rect x="34.4762%" y="469" width="0.2611%" height="15" fill="rgb(219,9,5)" fg:x="1601331375" fg:w="12129072"/><text x="34.7262%" y="479.50"></text></g><g><title>alloc::alloc::alloc (12,129,072 samples, 0.26%)</title><rect x="34.4762%" y="453" width="0.2611%" height="15" fill="rgb(254,171,16)" fg:x="1601331375" fg:w="12129072"/><text x="34.7262%" y="463.50"></text></g><g><title>__rust_alloc (12,129,072 samples, 0.26%)</title><rect x="34.4762%" y="437" width="0.2611%" height="15" fill="rgb(230,171,20)" fg:x="1601331375" fg:w="12129072"/><text x="34.7262%" y="447.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12,129,072 samples, 0.26%)</title><rect x="34.4762%" y="421" width="0.2611%" height="15" fill="rgb(210,71,41)" fg:x="1601331375" fg:w="12129072"/><text x="34.7262%" y="431.50"></text></g><g><title>_rjem_malloc (12,129,072 samples, 0.26%)</title><rect x="34.4762%" y="405" width="0.2611%" height="15" fill="rgb(206,173,20)" fg:x="1601331375" fg:w="12129072"/><text x="34.7262%" y="415.50"></text></g><g><title>imalloc_fastpath (12,129,072 samples, 0.26%)</title><rect x="34.4762%" y="389" width="0.2611%" height="15" fill="rgb(233,88,34)" fg:x="1601331375" fg:w="12129072"/><text x="34.7262%" y="399.50"></text></g><g><title>cache_bin_alloc_easy (4,938,373 samples, 0.11%)</title><rect x="34.6310%" y="373" width="0.1063%" height="15" fill="rgb(223,209,46)" fg:x="1608522074" fg:w="4938373"/><text x="34.8810%" y="383.50"></text></g><g><title>cache_bin_alloc_impl (4,938,373 samples, 0.11%)</title><rect x="34.6310%" y="357" width="0.1063%" height="15" fill="rgb(250,43,18)" fg:x="1608522074" fg:w="4938373"/><text x="34.8810%" y="367.50"></text></g><g><title>pgdog::net::stream::Stream::read::_{{closure}} (348,891,937 samples, 7.51%)</title><rect x="27.2270%" y="597" width="7.5115%" height="15" fill="rgb(208,13,10)" fg:x="1264625532" fg:w="348891937"/><text x="27.4770%" y="607.50">pgdog::net..</text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (12,186,094 samples, 0.26%)</title><rect x="34.4762%" y="581" width="0.2624%" height="15" fill="rgb(212,200,36)" fg:x="1601331375" fg:w="12186094"/><text x="34.7262%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12,186,094 samples, 0.26%)</title><rect x="34.4762%" y="565" width="0.2624%" height="15" fill="rgb(225,90,30)" fg:x="1601331375" fg:w="12186094"/><text x="34.7262%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12,186,094 samples, 0.26%)</title><rect x="34.4762%" y="549" width="0.2624%" height="15" fill="rgb(236,182,39)" fg:x="1601331375" fg:w="12186094"/><text x="34.7262%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12,186,094 samples, 0.26%)</title><rect x="34.4762%" y="533" width="0.2624%" height="15" fill="rgb(212,144,35)" fg:x="1601331375" fg:w="12186094"/><text x="34.7262%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (12,186,094 samples, 0.26%)</title><rect x="34.4762%" y="517" width="0.2624%" height="15" fill="rgb(228,63,44)" fg:x="1601331375" fg:w="12186094"/><text x="34.7262%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (12,186,094 samples, 0.26%)</title><rect x="34.4762%" y="501" width="0.2624%" height="15" fill="rgb(228,109,6)" fg:x="1601331375" fg:w="12186094"/><text x="34.7262%" y="511.50"></text></g><g><title>pgdog::backend::server::Server::read::_{{closure}} (519,974,610 samples, 11.19%)</title><rect x="23.6861%" y="613" width="11.1949%" height="15" fill="rgb(238,117,24)" fg:x="1100158422" fg:w="519974610"/><text x="23.9361%" y="623.50">pgdog::backend::..</text></g><g><title>std::time::Instant::now (6,615,563 samples, 0.14%)</title><rect x="34.7386%" y="597" width="0.1424%" height="15" fill="rgb(242,26,26)" fg:x="1613517469" fg:w="6615563"/><text x="34.9886%" y="607.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (6,615,563 samples, 0.14%)</title><rect x="34.7386%" y="581" width="0.1424%" height="15" fill="rgb(221,92,48)" fg:x="1613517469" fg:w="6615563"/><text x="34.9886%" y="591.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (6,615,563 samples, 0.14%)</title><rect x="34.7386%" y="565" width="0.1424%" height="15" fill="rgb(209,209,32)" fg:x="1613517469" fg:w="6615563"/><text x="34.9886%" y="575.50"></text></g><g><title>clock_gettime (6,615,563 samples, 0.14%)</title><rect x="34.7386%" y="549" width="0.1424%" height="15" fill="rgb(221,70,22)" fg:x="1613517469" fg:w="6615563"/><text x="34.9886%" y="559.50"></text></g><g><title>__vdso_clock_gettime (6,615,563 samples, 0.14%)</title><rect x="34.7386%" y="533" width="0.1424%" height="15" fill="rgb(248,145,5)" fg:x="1613517469" fg:w="6615563"/><text x="34.9886%" y="543.50"></text></g><g><title>tokio::time::instant::Instant::far_future (4,811,075 samples, 0.10%)</title><rect x="34.8999%" y="597" width="0.1036%" height="15" fill="rgb(226,116,26)" fg:x="1621010684" fg:w="4811075"/><text x="35.1499%" y="607.50"></text></g><g><title>tokio::time::instant::Instant::now (4,811,075 samples, 0.10%)</title><rect x="34.8999%" y="581" width="0.1036%" height="15" fill="rgb(244,5,17)" fg:x="1621010684" fg:w="4811075"/><text x="35.1499%" y="591.50"></text></g><g><title>tokio::time::instant::variant::now (4,811,075 samples, 0.10%)</title><rect x="34.8999%" y="565" width="0.1036%" height="15" fill="rgb(252,159,33)" fg:x="1621010684" fg:w="4811075"/><text x="35.1499%" y="575.50"></text></g><g><title>std::time::Instant::now (4,811,075 samples, 0.10%)</title><rect x="34.8999%" y="549" width="0.1036%" height="15" fill="rgb(206,71,0)" fg:x="1621010684" fg:w="4811075"/><text x="35.1499%" y="559.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (4,811,075 samples, 0.10%)</title><rect x="34.8999%" y="533" width="0.1036%" height="15" fill="rgb(233,118,54)" fg:x="1621010684" fg:w="4811075"/><text x="35.1499%" y="543.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (4,811,075 samples, 0.10%)</title><rect x="34.8999%" y="517" width="0.1036%" height="15" fill="rgb(234,83,48)" fg:x="1621010684" fg:w="4811075"/><text x="35.1499%" y="527.50"></text></g><g><title>clock_gettime (4,811,075 samples, 0.10%)</title><rect x="34.8999%" y="501" width="0.1036%" height="15" fill="rgb(228,3,54)" fg:x="1621010684" fg:w="4811075"/><text x="35.1499%" y="511.50"></text></g><g><title>__vdso_clock_gettime (2,902,778 samples, 0.06%)</title><rect x="34.9410%" y="485" width="0.0625%" height="15" fill="rgb(226,155,13)" fg:x="1622918981" fg:w="2902778"/><text x="35.1910%" y="495.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::read::_{{closure}} (613,863,846 samples, 13.22%)</title><rect x="21.9905%" y="645" width="13.2163%" height="15" fill="rgb(241,28,37)" fg:x="1021403142" fg:w="613863846"/><text x="22.2405%" y="655.50">pgdog::backend::pool..</text></g><g><title>pgdog::backend::pool::connection::binding::Binding::read::_{{closure}} (595,171,323 samples, 12.81%)</title><rect x="22.3930%" y="629" width="12.8139%" height="15" fill="rgb(233,93,10)" fg:x="1040095665" fg:w="595171323"/><text x="22.6430%" y="639.50">pgdog::backend::poo..</text></g><g><title>tokio::time::sleep::sleep (15,133,956 samples, 0.33%)</title><rect x="34.8810%" y="613" width="0.3258%" height="15" fill="rgb(225,113,19)" fg:x="1620133032" fg:w="15133956"/><text x="35.1310%" y="623.50"></text></g><g><title>tokio::time::instant::Instant::now (9,445,229 samples, 0.20%)</title><rect x="35.0035%" y="597" width="0.2034%" height="15" fill="rgb(241,2,18)" fg:x="1625821759" fg:w="9445229"/><text x="35.2535%" y="607.50"></text></g><g><title>tokio::time::instant::variant::now (9,445,229 samples, 0.20%)</title><rect x="35.0035%" y="581" width="0.2034%" height="15" fill="rgb(228,207,21)" fg:x="1625821759" fg:w="9445229"/><text x="35.2535%" y="591.50"></text></g><g><title>std::time::Instant::now (9,445,229 samples, 0.20%)</title><rect x="35.0035%" y="565" width="0.2034%" height="15" fill="rgb(213,211,35)" fg:x="1625821759" fg:w="9445229"/><text x="35.2535%" y="575.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (9,445,229 samples, 0.20%)</title><rect x="35.0035%" y="549" width="0.2034%" height="15" fill="rgb(209,83,10)" fg:x="1625821759" fg:w="9445229"/><text x="35.2535%" y="559.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (9,445,229 samples, 0.20%)</title><rect x="35.0035%" y="533" width="0.2034%" height="15" fill="rgb(209,164,1)" fg:x="1625821759" fg:w="9445229"/><text x="35.2535%" y="543.50"></text></g><g><title>clock_gettime (9,445,229 samples, 0.20%)</title><rect x="35.0035%" y="517" width="0.2034%" height="15" fill="rgb(213,184,43)" fg:x="1625821759" fg:w="9445229"/><text x="35.2535%" y="527.50"></text></g><g><title>__vdso_clock_gettime (9,445,229 samples, 0.20%)</title><rect x="35.0035%" y="501" width="0.2034%" height="15" fill="rgb(231,61,34)" fg:x="1625821759" fg:w="9445229"/><text x="35.2535%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (985,851 samples, 0.02%)</title><rect x="35.2068%" y="629" width="0.0212%" height="15" fill="rgb(235,75,3)" fg:x="1635266988" fg:w="985851"/><text x="35.4568%" y="639.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (651,840,737 samples, 14.03%)</title><rect x="21.2436%" y="661" width="14.0339%" height="15" fill="rgb(220,106,47)" fg:x="986712690" fg:w="651840737"/><text x="21.4936%" y="671.50">&lt;tokio::time::timeout..</text></g><g><title>tokio::runtime::coop::has_budget_remaining (3,286,439 samples, 0.07%)</title><rect x="35.2068%" y="645" width="0.0708%" height="15" fill="rgb(210,196,33)" fg:x="1635266988" fg:w="3286439"/><text x="35.4568%" y="655.50"></text></g><g><title>tokio::runtime::context::budget (2,300,588 samples, 0.05%)</title><rect x="35.2280%" y="629" width="0.0495%" height="15" fill="rgb(229,154,42)" fg:x="1636252839" fg:w="2300588"/><text x="35.4780%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,300,588 samples, 0.05%)</title><rect x="35.2280%" y="613" width="0.0495%" height="15" fill="rgb(228,114,26)" fg:x="1636252839" fg:w="2300588"/><text x="35.4780%" y="623.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (2,300,588 samples, 0.05%)</title><rect x="35.2280%" y="597" width="0.0495%" height="15" fill="rgb(208,144,1)" fg:x="1636252839" fg:w="2300588"/><text x="35.4780%" y="607.50"></text></g><g><title>tokio::runtime::coop::has_budget_remaining::_{{closure}} (2,300,588 samples, 0.05%)</title><rect x="35.2280%" y="581" width="0.0495%" height="15" fill="rgb(239,112,37)" fg:x="1636252839" fg:w="2300588"/><text x="35.4780%" y="591.50"></text></g><g><title>tokio::runtime::coop::Budget::has_remaining (2,300,588 samples, 0.05%)</title><rect x="35.2280%" y="565" width="0.0495%" height="15" fill="rgb(210,96,50)" fg:x="1636252839" fg:w="2300588"/><text x="35.4780%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (2,300,588 samples, 0.05%)</title><rect x="35.2280%" y="549" width="0.0495%" height="15" fill="rgb(222,178,2)" fg:x="1636252839" fg:w="2300588"/><text x="35.4780%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3,971,447 samples, 0.09%)</title><rect x="36.1892%" y="629" width="0.0855%" height="15" fill="rgb(226,74,18)" fg:x="1680897409" fg:w="3971447"/><text x="36.4392%" y="639.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_i16 (1,263,760 samples, 0.03%)</title><rect x="36.2747%" y="613" width="0.0272%" height="15" fill="rgb(225,67,54)" fg:x="1684868856" fg:w="1263760"/><text x="36.5247%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,901,755 samples, 0.06%)</title><rect x="36.3019%" y="549" width="0.0625%" height="15" fill="rgb(251,92,32)" fg:x="1686132616" fg:w="2901755"/><text x="36.5519%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2,901,755 samples, 0.06%)</title><rect x="36.3019%" y="533" width="0.0625%" height="15" fill="rgb(228,149,22)" fg:x="1686132616" fg:w="2901755"/><text x="36.5519%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,901,755 samples, 0.06%)</title><rect x="36.3019%" y="517" width="0.0625%" height="15" fill="rgb(243,54,13)" fg:x="1686132616" fg:w="2901755"/><text x="36.5519%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,901,755 samples, 0.06%)</title><rect x="36.3019%" y="501" width="0.0625%" height="15" fill="rgb(243,180,28)" fg:x="1686132616" fg:w="2901755"/><text x="36.5519%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,901,755 samples, 0.06%)</title><rect x="36.3019%" y="485" width="0.0625%" height="15" fill="rgb(208,167,24)" fg:x="1686132616" fg:w="2901755"/><text x="36.5519%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,901,755 samples, 0.06%)</title><rect x="36.3019%" y="469" width="0.0625%" height="15" fill="rgb(245,73,45)" fg:x="1686132616" fg:w="2901755"/><text x="36.5519%" y="479.50"></text></g><g><title>&lt;pgdog::net::messages::bind::Bind as pgdog::net::messages::FromBytes&gt;::from_bytes::_{{closure}} (2,901,755 samples, 0.06%)</title><rect x="36.3019%" y="453" width="0.0625%" height="15" fill="rgb(237,203,48)" fg:x="1686132616" fg:w="2901755"/><text x="36.5519%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,901,755 samples, 0.06%)</title><rect x="36.3019%" y="437" width="0.0625%" height="15" fill="rgb(211,197,16)" fg:x="1686132616" fg:w="2901755"/><text x="36.5519%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,901,755 samples, 0.06%)</title><rect x="36.3019%" y="421" width="0.0625%" height="15" fill="rgb(243,99,51)" fg:x="1686132616" fg:w="2901755"/><text x="36.5519%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2,901,755 samples, 0.06%)</title><rect x="36.3019%" y="405" width="0.0625%" height="15" fill="rgb(215,123,29)" fg:x="1686132616" fg:w="2901755"/><text x="36.5519%" y="415.50"></text></g><g><title>&lt;pgdog::net::messages::bind::Bind as pgdog::net::messages::FromBytes&gt;::from_bytes::_{{closure}}::_{{closure}} (2,901,755 samples, 0.06%)</title><rect x="36.3019%" y="389" width="0.0625%" height="15" fill="rgb(239,186,37)" fg:x="1686132616" fg:w="2901755"/><text x="36.5519%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,901,755 samples, 0.06%)</title><rect x="36.3019%" y="373" width="0.0625%" height="15" fill="rgb(252,136,39)" fg:x="1686132616" fg:w="2901755"/><text x="36.5519%" y="383.50"></text></g><g><title>&lt;pgdog::net::messages::bind::Bind as pgdog::net::messages::FromBytes&gt;::from_bytes (6,718,266 samples, 0.14%)</title><rect x="36.2747%" y="629" width="0.1446%" height="15" fill="rgb(223,213,32)" fg:x="1684868856" fg:w="6718266"/><text x="36.5247%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5,454,506 samples, 0.12%)</title><rect x="36.3019%" y="613" width="0.1174%" height="15" fill="rgb(233,115,5)" fg:x="1686132616" fg:w="5454506"/><text x="36.5519%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5,454,506 samples, 0.12%)</title><rect x="36.3019%" y="597" width="0.1174%" height="15" fill="rgb(207,226,44)" fg:x="1686132616" fg:w="5454506"/><text x="36.5519%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,454,506 samples, 0.12%)</title><rect x="36.3019%" y="581" width="0.1174%" height="15" fill="rgb(208,126,0)" fg:x="1686132616" fg:w="5454506"/><text x="36.5519%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5,454,506 samples, 0.12%)</title><rect x="36.3019%" y="565" width="0.1174%" height="15" fill="rgb(244,66,21)" fg:x="1686132616" fg:w="5454506"/><text x="36.5519%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,552,751 samples, 0.05%)</title><rect x="36.3644%" y="549" width="0.0550%" height="15" fill="rgb(222,97,12)" fg:x="1689034371" fg:w="2552751"/><text x="36.6144%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,552,751 samples, 0.05%)</title><rect x="36.3644%" y="533" width="0.0550%" height="15" fill="rgb(219,213,19)" fg:x="1689034371" fg:w="2552751"/><text x="36.6144%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,552,751 samples, 0.05%)</title><rect x="36.3644%" y="517" width="0.0550%" height="15" fill="rgb(252,169,30)" fg:x="1689034371" fg:w="2552751"/><text x="36.6144%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,552,751 samples, 0.05%)</title><rect x="36.3644%" y="501" width="0.0550%" height="15" fill="rgb(206,32,51)" fg:x="1689034371" fg:w="2552751"/><text x="36.6144%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,552,751 samples, 0.05%)</title><rect x="36.3644%" y="485" width="0.0550%" height="15" fill="rgb(250,172,42)" fg:x="1689034371" fg:w="2552751"/><text x="36.6144%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,552,751 samples, 0.05%)</title><rect x="36.3644%" y="469" width="0.0550%" height="15" fill="rgb(209,34,43)" fg:x="1689034371" fg:w="2552751"/><text x="36.6144%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,552,751 samples, 0.05%)</title><rect x="36.3644%" y="453" width="0.0550%" height="15" fill="rgb(223,11,35)" fg:x="1689034371" fg:w="2552751"/><text x="36.6144%" y="463.50"></text></g><g><title>alloc::alloc::alloc (2,552,751 samples, 0.05%)</title><rect x="36.3644%" y="437" width="0.0550%" height="15" fill="rgb(251,219,26)" fg:x="1689034371" fg:w="2552751"/><text x="36.6144%" y="447.50"></text></g><g><title>__rust_alloc (2,552,751 samples, 0.05%)</title><rect x="36.3644%" y="421" width="0.0550%" height="15" fill="rgb(231,119,3)" fg:x="1689034371" fg:w="2552751"/><text x="36.6144%" y="431.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2,552,751 samples, 0.05%)</title><rect x="36.3644%" y="405" width="0.0550%" height="15" fill="rgb(216,97,11)" fg:x="1689034371" fg:w="2552751"/><text x="36.6144%" y="415.50"></text></g><g><title>_rjem_malloc (2,552,751 samples, 0.05%)</title><rect x="36.3644%" y="389" width="0.0550%" height="15" fill="rgb(223,59,9)" fg:x="1689034371" fg:w="2552751"/><text x="36.6144%" y="399.50"></text></g><g><title>imalloc_fastpath (2,552,751 samples, 0.05%)</title><rect x="36.3644%" y="373" width="0.0550%" height="15" fill="rgb(233,93,31)" fg:x="1689034371" fg:w="2552751"/><text x="36.6144%" y="383.50"></text></g><g><title>cache_bin_alloc_easy (1,076,842 samples, 0.02%)</title><rect x="36.3962%" y="357" width="0.0232%" height="15" fill="rgb(239,81,33)" fg:x="1690510280" fg:w="1076842"/><text x="36.6462%" y="367.50"></text></g><g><title>cache_bin_alloc_impl (1,076,842 samples, 0.02%)</title><rect x="36.3962%" y="341" width="0.0232%" height="15" fill="rgb(213,120,34)" fg:x="1690510280" fg:w="1076842"/><text x="36.6462%" y="351.50"></text></g><g><title>&lt;pgdog::net::messages::describe::Describe as pgdog::net::messages::FromBytes&gt;::from_bytes (8,438,070 samples, 0.18%)</title><rect x="36.4194%" y="629" width="0.1817%" height="15" fill="rgb(243,49,53)" fg:x="1691587122" fg:w="8438070"/><text x="36.6694%" y="639.50"></text></g><g><title>pgdog::net::c_string_buf (6,607,479 samples, 0.14%)</title><rect x="36.4588%" y="613" width="0.1423%" height="15" fill="rgb(247,216,33)" fg:x="1693417713" fg:w="6607479"/><text x="36.7088%" y="623.50"></text></g><g><title>alloc::string::String::with_capacity (2,964,558 samples, 0.06%)</title><rect x="36.5372%" y="597" width="0.0638%" height="15" fill="rgb(226,26,14)" fg:x="1697060634" fg:w="2964558"/><text x="36.7872%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,964,558 samples, 0.06%)</title><rect x="36.5372%" y="581" width="0.0638%" height="15" fill="rgb(215,49,53)" fg:x="1697060634" fg:w="2964558"/><text x="36.7872%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,964,558 samples, 0.06%)</title><rect x="36.5372%" y="565" width="0.0638%" height="15" fill="rgb(245,162,40)" fg:x="1697060634" fg:w="2964558"/><text x="36.7872%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,964,558 samples, 0.06%)</title><rect x="36.5372%" y="549" width="0.0638%" height="15" fill="rgb(229,68,17)" fg:x="1697060634" fg:w="2964558"/><text x="36.7872%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,964,558 samples, 0.06%)</title><rect x="36.5372%" y="533" width="0.0638%" height="15" fill="rgb(213,182,10)" fg:x="1697060634" fg:w="2964558"/><text x="36.7872%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,964,558 samples, 0.06%)</title><rect x="36.5372%" y="517" width="0.0638%" height="15" fill="rgb(245,125,30)" fg:x="1697060634" fg:w="2964558"/><text x="36.7872%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,964,558 samples, 0.06%)</title><rect x="36.5372%" y="501" width="0.0638%" height="15" fill="rgb(232,202,2)" fg:x="1697060634" fg:w="2964558"/><text x="36.7872%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,964,558 samples, 0.06%)</title><rect x="36.5372%" y="485" width="0.0638%" height="15" fill="rgb(237,140,51)" fg:x="1697060634" fg:w="2964558"/><text x="36.7872%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2,964,558 samples, 0.06%)</title><rect x="36.5372%" y="469" width="0.0638%" height="15" fill="rgb(236,157,25)" fg:x="1697060634" fg:w="2964558"/><text x="36.7872%" y="479.50"></text></g><g><title>__rust_alloc (2,964,558 samples, 0.06%)</title><rect x="36.5372%" y="453" width="0.0638%" height="15" fill="rgb(219,209,0)" fg:x="1697060634" fg:w="2964558"/><text x="36.7872%" y="463.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2,964,558 samples, 0.06%)</title><rect x="36.5372%" y="437" width="0.0638%" height="15" fill="rgb(240,116,54)" fg:x="1697060634" fg:w="2964558"/><text x="36.7872%" y="447.50"></text></g><g><title>_rjem_malloc (2,964,558 samples, 0.06%)</title><rect x="36.5372%" y="421" width="0.0638%" height="15" fill="rgb(216,10,36)" fg:x="1697060634" fg:w="2964558"/><text x="36.7872%" y="431.50"></text></g><g><title>imalloc_fastpath (2,964,558 samples, 0.06%)</title><rect x="36.5372%" y="405" width="0.0638%" height="15" fill="rgb(222,72,44)" fg:x="1697060634" fg:w="2964558"/><text x="36.7872%" y="415.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::deref::Deref&gt;::deref (1,311,891 samples, 0.03%)</title><rect x="36.6010%" y="613" width="0.0282%" height="15" fill="rgb(232,159,9)" fg:x="1700025192" fg:w="1311891"/><text x="36.8510%" y="623.50"></text></g><g><title>bytes::bytes::Bytes::as_slice (1,311,891 samples, 0.03%)</title><rect x="36.6010%" y="597" width="0.0282%" height="15" fill="rgb(210,39,32)" fg:x="1700025192" fg:w="1311891"/><text x="36.8510%" y="607.50"></text></g><g><title>&lt;pgdog::net::messages::execute::Execute as pgdog::net::messages::FromBytes&gt;::from_bytes (1,405,494 samples, 0.03%)</title><rect x="36.6010%" y="629" width="0.0303%" height="15" fill="rgb(216,194,45)" fg:x="1700025192" fg:w="1405494"/><text x="36.8510%" y="639.50"></text></g><g><title>&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage as pgdog::net::messages::FromBytes&gt;::from_bytes (28,549,793 samples, 0.61%)</title><rect x="36.1275%" y="645" width="0.6147%" height="15" fill="rgb(218,18,35)" fg:x="1678030600" fg:w="28549793"/><text x="36.3775%" y="655.50"></text></g><g><title>&lt;pgdog::net::messages::sync::Sync as pgdog::net::messages::FromBytes&gt;::from_bytes (5,124,964 samples, 0.11%)</title><rect x="36.6318%" y="629" width="0.1103%" height="15" fill="rgb(207,83,51)" fg:x="1701455429" fg:w="5124964"/><text x="36.8818%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (5,124,964 samples, 0.11%)</title><rect x="36.6318%" y="613" width="0.1103%" height="15" fill="rgb(225,63,43)" fg:x="1701455429" fg:w="5124964"/><text x="36.8818%" y="623.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (5,124,964 samples, 0.11%)</title><rect x="36.6318%" y="597" width="0.1103%" height="15" fill="rgb(207,57,36)" fg:x="1701455429" fg:w="5124964"/><text x="36.8818%" y="607.50"></text></g><g><title>bytes::bytes::shared_drop (5,124,964 samples, 0.11%)</title><rect x="36.6318%" y="581" width="0.1103%" height="15" fill="rgb(216,99,33)" fg:x="1701455429" fg:w="5124964"/><text x="36.8818%" y="591.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (5,124,964 samples, 0.11%)</title><rect x="36.6318%" y="565" width="0.1103%" height="15" fill="rgb(225,42,16)" fg:x="1701455429" fg:w="5124964"/><text x="36.8818%" y="575.50"></text></g><g><title>bytes::bytes::shared_drop::_{{closure}} (5,124,964 samples, 0.11%)</title><rect x="36.6318%" y="549" width="0.1103%" height="15" fill="rgb(220,201,45)" fg:x="1701455429" fg:w="5124964"/><text x="36.8818%" y="559.50"></text></g><g><title>&lt;pgdog::net::messages::Message as pgdog::net::messages::Protocol&gt;::code (3,510,043 samples, 0.08%)</title><rect x="36.7422%" y="645" width="0.0756%" height="15" fill="rgb(225,33,4)" fg:x="1706580393" fg:w="3510043"/><text x="36.9922%" y="655.50"></text></g><g><title>&lt;pgdog::net::messages::Message as pgdog::net::messages::ToBytes&gt;::to_bytes (6,310,842 samples, 0.14%)</title><rect x="36.8177%" y="645" width="0.1359%" height="15" fill="rgb(224,33,50)" fg:x="1710090436" fg:w="6310842"/><text x="37.0677%" y="655.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (6,310,842 samples, 0.14%)</title><rect x="36.8177%" y="629" width="0.1359%" height="15" fill="rgb(246,198,51)" fg:x="1710090436" fg:w="6310842"/><text x="37.0677%" y="639.50"></text></g><g><title>bytes::bytes::promotable_even_clone (6,310,842 samples, 0.14%)</title><rect x="36.8177%" y="613" width="0.1359%" height="15" fill="rgb(205,22,4)" fg:x="1710090436" fg:w="6310842"/><text x="37.0677%" y="623.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (6,310,842 samples, 0.14%)</title><rect x="36.8177%" y="597" width="0.1359%" height="15" fill="rgb(206,3,8)" fg:x="1710090436" fg:w="6310842"/><text x="37.0677%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3,939,311 samples, 0.08%)</title><rect x="36.8688%" y="581" width="0.0848%" height="15" fill="rgb(251,23,15)" fg:x="1712461967" fg:w="3939311"/><text x="37.1188%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (2,530,990 samples, 0.05%)</title><rect x="36.8991%" y="565" width="0.0545%" height="15" fill="rgb(252,88,28)" fg:x="1713870288" fg:w="2530990"/><text x="37.1491%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,530,990 samples, 0.05%)</title><rect x="36.8991%" y="549" width="0.0545%" height="15" fill="rgb(212,127,14)" fg:x="1713870288" fg:w="2530990"/><text x="37.1491%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,530,990 samples, 0.05%)</title><rect x="36.8991%" y="533" width="0.0545%" height="15" fill="rgb(247,145,37)" fg:x="1713870288" fg:w="2530990"/><text x="37.1491%" y="543.50"></text></g><g><title>alloc::alloc::alloc (2,530,990 samples, 0.05%)</title><rect x="36.8991%" y="517" width="0.0545%" height="15" fill="rgb(209,117,53)" fg:x="1713870288" fg:w="2530990"/><text x="37.1491%" y="527.50"></text></g><g><title>__rust_alloc (2,530,990 samples, 0.05%)</title><rect x="36.8991%" y="501" width="0.0545%" height="15" fill="rgb(212,90,42)" fg:x="1713870288" fg:w="2530990"/><text x="37.1491%" y="511.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2,530,990 samples, 0.05%)</title><rect x="36.8991%" y="485" width="0.0545%" height="15" fill="rgb(218,164,37)" fg:x="1713870288" fg:w="2530990"/><text x="37.1491%" y="495.50"></text></g><g><title>_rjem_je_malloc_default (2,530,990 samples, 0.05%)</title><rect x="36.8991%" y="469" width="0.0545%" height="15" fill="rgb(246,65,34)" fg:x="1713870288" fg:w="2530990"/><text x="37.1491%" y="479.50"></text></g><g><title>imalloc (2,530,990 samples, 0.05%)</title><rect x="36.8991%" y="453" width="0.0545%" height="15" fill="rgb(231,100,33)" fg:x="1713870288" fg:w="2530990"/><text x="37.1491%" y="463.50"></text></g><g><title>imalloc_body (2,530,990 samples, 0.05%)</title><rect x="36.8991%" y="437" width="0.0545%" height="15" fill="rgb(228,126,14)" fg:x="1713870288" fg:w="2530990"/><text x="37.1491%" y="447.50"></text></g><g><title>thread_alloc_event (2,530,990 samples, 0.05%)</title><rect x="36.8991%" y="421" width="0.0545%" height="15" fill="rgb(215,173,21)" fg:x="1713870288" fg:w="2530990"/><text x="37.1491%" y="431.50"></text></g><g><title>te_event_advance (2,530,990 samples, 0.05%)</title><rect x="36.8991%" y="405" width="0.0545%" height="15" fill="rgb(210,6,40)" fg:x="1713870288" fg:w="2530990"/><text x="37.1491%" y="415.50"></text></g><g><title>_rjem_je_te_event_trigger (2,530,990 samples, 0.05%)</title><rect x="36.8991%" y="389" width="0.0545%" height="15" fill="rgb(212,48,18)" fg:x="1713870288" fg:w="2530990"/><text x="37.1491%" y="399.50"></text></g><g><title>_rjem_je_tcache_gc_event_handler (2,530,990 samples, 0.05%)</title><rect x="36.8991%" y="373" width="0.0545%" height="15" fill="rgb(230,214,11)" fg:x="1713870288" fg:w="2530990"/><text x="37.1491%" y="383.50"></text></g><g><title>tcache_event (2,530,990 samples, 0.05%)</title><rect x="36.8991%" y="357" width="0.0545%" height="15" fill="rgb(254,105,39)" fg:x="1713870288" fg:w="2530990"/><text x="37.1491%" y="367.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (2,530,990 samples, 0.05%)</title><rect x="36.8991%" y="341" width="0.0545%" height="15" fill="rgb(245,158,5)" fg:x="1713870288" fg:w="2530990"/><text x="37.1491%" y="351.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="645" width="0.0281%" height="15" fill="rgb(249,208,11)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="655.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::read::_{{closure}} (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="629" width="0.0281%" height="15" fill="rgb(210,39,28)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="639.50"></text></g><g><title>pgdog::backend::server::Server::read::_{{closure}} (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="613" width="0.0281%" height="15" fill="rgb(211,56,53)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="623.50"></text></g><g><title>pgdog::net::stream::Stream::read::_{{closure}} (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="597" width="0.0281%" height="15" fill="rgb(226,201,30)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="607.50"></text></g><g><title>&lt;tokio::io::util::read_exact::ReadExact&lt;A&gt; as core::future::future::Future&gt;::poll (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="581" width="0.0281%" height="15" fill="rgb(239,101,34)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="591.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="565" width="0.0281%" height="15" fill="rgb(226,209,5)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="575.50"></text></g><g><title>&lt;pgdog::net::stream::Stream as tokio::io::async_read::AsyncRead&gt;::poll_read (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="549" width="0.0281%" height="15" fill="rgb(250,105,47)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="559.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="533" width="0.0281%" height="15" fill="rgb(230,72,3)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="543.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="517" width="0.0281%" height="15" fill="rgb(232,218,39)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="527.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="501" width="0.0281%" height="15" fill="rgb(248,166,6)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="485" width="0.0281%" height="15" fill="rgb(247,89,20)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="469" width="0.0281%" height="15" fill="rgb(248,130,54)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="479.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="453" width="0.0281%" height="15" fill="rgb(234,196,4)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="463.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="437" width="0.0281%" height="15" fill="rgb(250,143,31)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="447.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="421" width="0.0281%" height="15" fill="rgb(211,110,34)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="431.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="405" width="0.0281%" height="15" fill="rgb(215,124,48)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="415.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="389" width="0.0281%" height="15" fill="rgb(216,46,13)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="399.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="373" width="0.0281%" height="15" fill="rgb(205,184,25)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="383.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="357" width="0.0281%" height="15" fill="rgb(228,1,10)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="367.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="341" width="0.0281%" height="15" fill="rgb(213,116,27)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="351.50"></text></g><g><title>std::sys::net::connection::socket::TcpStream::read (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="325" width="0.0281%" height="15" fill="rgb(241,95,50)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="335.50"></text></g><g><title>std::sys::net::connection::socket::unix::Socket::read (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="309" width="0.0281%" height="15" fill="rgb(238,48,32)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="319.50"></text></g><g><title>std::sys::net::connection::socket::unix::Socket::recv_with_flags (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="293" width="0.0281%" height="15" fill="rgb(235,113,49)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="303.50"></text></g><g><title>recv (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="277" width="0.0281%" height="15" fill="rgb(205,127,43)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="287.50"></text></g><g><title>[libc.so.6] (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="261" width="0.0281%" height="15" fill="rgb(250,162,2)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="271.50"></text></g><g><title>[libc.so.6] (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="245" width="0.0281%" height="15" fill="rgb(220,13,41)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="255.50"></text></g><g><title>[libc.so.6] (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="229" width="0.0281%" height="15" fill="rgb(249,221,25)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="239.50"></text></g><g><title>[unknown] (1,305,664 samples, 0.03%)</title><rect x="36.9536%" y="213" width="0.0281%" height="15" fill="rgb(215,208,19)" fg:x="1716401278" fg:w="1305664"/><text x="37.2036%" y="223.50"></text></g><g><title>&lt;tracing_core::metadata::Level as core::cmp::PartialOrd&lt;tracing_core::metadata::LevelFilter&gt;&gt;::le (3,051,313 samples, 0.07%)</title><rect x="36.9817%" y="645" width="0.0657%" height="15" fill="rgb(236,175,2)" fg:x="1717706942" fg:w="3051313"/><text x="37.2317%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16,623,617 samples, 0.36%)</title><rect x="37.0474%" y="645" width="0.3579%" height="15" fill="rgb(241,52,2)" fg:x="1720758255" fg:w="16623617"/><text x="37.2974%" y="655.50"></text></g><g><title>core::ptr::write (15,238,921 samples, 0.33%)</title><rect x="37.0772%" y="629" width="0.3281%" height="15" fill="rgb(248,140,14)" fg:x="1722142951" fg:w="15238921"/><text x="37.3272%" y="639.50"></text></g><g><title>[libc.so.6] (11,479,516 samples, 0.25%)</title><rect x="37.1582%" y="613" width="0.2472%" height="15" fill="rgb(253,22,42)" fg:x="1725902356" fg:w="11479516"/><text x="37.4082%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (1,229,836 samples, 0.03%)</title><rect x="37.4053%" y="613" width="0.0265%" height="15" fill="rgb(234,61,47)" fg:x="1737381872" fg:w="1229836"/><text x="37.6553%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1,229,836 samples, 0.03%)</title><rect x="37.4053%" y="597" width="0.0265%" height="15" fill="rgb(208,226,15)" fg:x="1737381872" fg:w="1229836"/><text x="37.6553%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;pgdog::config::ConfigAndUsers&gt;&gt; (9,198,248 samples, 0.20%)</title><rect x="37.4053%" y="645" width="0.1980%" height="15" fill="rgb(217,221,4)" fg:x="1737381872" fg:w="9198248"/><text x="37.6553%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,198,248 samples, 0.20%)</title><rect x="37.4053%" y="629" width="0.1980%" height="15" fill="rgb(212,174,34)" fg:x="1737381872" fg:w="9198248"/><text x="37.6553%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7,968,412 samples, 0.17%)</title><rect x="37.4318%" y="613" width="0.1716%" height="15" fill="rgb(253,83,4)" fg:x="1738611708" fg:w="7968412"/><text x="37.6818%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (7,968,412 samples, 0.17%)</title><rect x="37.4318%" y="597" width="0.1716%" height="15" fill="rgb(250,195,49)" fg:x="1738611708" fg:w="7968412"/><text x="37.6818%" y="607.50"></text></g><g><title>_rjem_sdallocx (1,480,738 samples, 0.03%)</title><rect x="37.6371%" y="597" width="0.0319%" height="15" fill="rgb(241,192,25)" fg:x="1748148837" fg:w="1480738"/><text x="37.8871%" y="607.50"></text></g><g><title>free_fastpath (1,480,658 samples, 0.03%)</title><rect x="37.6371%" y="581" width="0.0319%" height="15" fill="rgb(208,124,10)" fg:x="1748148917" fg:w="1480658"/><text x="37.8871%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::messages::Message&gt; (4,506,848 samples, 0.10%)</title><rect x="37.6034%" y="645" width="0.0970%" height="15" fill="rgb(222,33,0)" fg:x="1746580120" fg:w="4506848"/><text x="37.8534%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (4,506,848 samples, 0.10%)</title><rect x="37.6034%" y="629" width="0.0970%" height="15" fill="rgb(234,209,28)" fg:x="1746580120" fg:w="4506848"/><text x="37.8534%" y="639.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (4,506,848 samples, 0.10%)</title><rect x="37.6034%" y="613" width="0.0970%" height="15" fill="rgb(224,11,23)" fg:x="1746580120" fg:w="4506848"/><text x="37.8534%" y="623.50"></text></g><g><title>bytes::bytes::promotable_even_drop (1,457,393 samples, 0.03%)</title><rect x="37.6690%" y="597" width="0.0314%" height="15" fill="rgb(232,99,1)" fg:x="1749629575" fg:w="1457393"/><text x="37.9190%" y="607.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1,457,393 samples, 0.03%)</title><rect x="37.6690%" y="581" width="0.0314%" height="15" fill="rgb(237,95,45)" fg:x="1749629575" fg:w="1457393"/><text x="37.9190%" y="591.50"></text></g><g><title>bytes::bytes::promotable_even_drop::_{{closure}} (1,457,393 samples, 0.03%)</title><rect x="37.6690%" y="565" width="0.0314%" height="15" fill="rgb(208,109,11)" fg:x="1749629575" fg:w="1457393"/><text x="37.9190%" y="575.50"></text></g><g><title>bytes::bytes::release_shared (1,457,393 samples, 0.03%)</title><rect x="37.6690%" y="549" width="0.0314%" height="15" fill="rgb(216,190,48)" fg:x="1749629575" fg:w="1457393"/><text x="37.9190%" y="559.50"></text></g><g><title>core::mem::drop (1,457,393 samples, 0.03%)</title><rect x="37.6690%" y="533" width="0.0314%" height="15" fill="rgb(251,171,36)" fg:x="1749629575" fg:w="1457393"/><text x="37.9190%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (1,457,393 samples, 0.03%)</title><rect x="37.6690%" y="517" width="0.0314%" height="15" fill="rgb(230,62,22)" fg:x="1749629575" fg:w="1457393"/><text x="37.9190%" y="527.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,457,393 samples, 0.03%)</title><rect x="37.6690%" y="501" width="0.0314%" height="15" fill="rgb(225,114,35)" fg:x="1749629575" fg:w="1457393"/><text x="37.9190%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,457,393 samples, 0.03%)</title><rect x="37.6690%" y="485" width="0.0314%" height="15" fill="rgb(215,118,42)" fg:x="1749629575" fg:w="1457393"/><text x="37.9190%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (1,457,393 samples, 0.03%)</title><rect x="37.6690%" y="469" width="0.0314%" height="15" fill="rgb(243,119,21)" fg:x="1749629575" fg:w="1457393"/><text x="37.9190%" y="479.50"></text></g><g><title>__rust_dealloc (1,457,393 samples, 0.03%)</title><rect x="37.6690%" y="453" width="0.0314%" height="15" fill="rgb(252,177,53)" fg:x="1749629575" fg:w="1457393"/><text x="37.9190%" y="463.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1,457,393 samples, 0.03%)</title><rect x="37.6690%" y="437" width="0.0314%" height="15" fill="rgb(237,209,29)" fg:x="1749629575" fg:w="1457393"/><text x="37.9190%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,674,544 samples, 0.06%)</title><rect x="37.7004%" y="629" width="0.0576%" height="15" fill="rgb(212,65,23)" fg:x="1751086968" fg:w="2674544"/><text x="37.9504%" y="639.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (2,895,109 samples, 0.06%)</title><rect x="37.7580%" y="629" width="0.0623%" height="15" fill="rgb(230,222,46)" fg:x="1753761512" fg:w="2895109"/><text x="38.0080%" y="639.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (2,895,109 samples, 0.06%)</title><rect x="37.7580%" y="613" width="0.0623%" height="15" fill="rgb(215,135,32)" fg:x="1753761512" fg:w="2895109"/><text x="38.0080%" y="623.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (2,895,109 samples, 0.06%)</title><rect x="37.7580%" y="597" width="0.0623%" height="15" fill="rgb(246,101,22)" fg:x="1753761512" fg:w="2895109"/><text x="38.0080%" y="607.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (2,895,109 samples, 0.06%)</title><rect x="37.7580%" y="581" width="0.0623%" height="15" fill="rgb(206,107,13)" fg:x="1753761512" fg:w="2895109"/><text x="38.0080%" y="591.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (2,895,109 samples, 0.06%)</title><rect x="37.7580%" y="565" width="0.0623%" height="15" fill="rgb(250,100,44)" fg:x="1753761512" fg:w="2895109"/><text x="38.0080%" y="575.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (2,895,109 samples, 0.06%)</title><rect x="37.7580%" y="549" width="0.0623%" height="15" fill="rgb(231,147,38)" fg:x="1753761512" fg:w="2895109"/><text x="38.0080%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1,457,744 samples, 0.03%)</title><rect x="37.7889%" y="533" width="0.0314%" height="15" fill="rgb(229,8,40)" fg:x="1755198877" fg:w="1457744"/><text x="38.0389%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (1,457,744 samples, 0.03%)</title><rect x="37.7889%" y="517" width="0.0314%" height="15" fill="rgb(221,135,30)" fg:x="1755198877" fg:w="1457744"/><text x="38.0389%" y="527.50"></text></g><g><title>arc_swap::debt::fast::Slots::get_debt (7,913,476 samples, 0.17%)</title><rect x="37.8791%" y="501" width="0.1704%" height="15" fill="rgb(249,193,18)" fg:x="1759387483" fg:w="7913476"/><text x="38.1291%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (2,027,158 samples, 0.04%)</title><rect x="38.0495%" y="501" width="0.0436%" height="15" fill="rgb(209,133,39)" fg:x="1767300959" fg:w="2027158"/><text x="38.2995%" y="511.50"></text></g><g><title>arc_swap::debt::list::LocalNode::new_fast (12,012,452 samples, 0.26%)</title><rect x="37.8791%" y="517" width="0.2586%" height="15" fill="rgb(232,100,14)" fg:x="1759387483" fg:w="12012452"/><text x="38.1291%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (2,071,818 samples, 0.04%)</title><rect x="38.0931%" y="501" width="0.0446%" height="15" fill="rgb(224,185,1)" fg:x="1769328117" fg:w="2071818"/><text x="38.3431%" y="511.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::_{{closure}} (16,141,552 samples, 0.35%)</title><rect x="37.8203%" y="565" width="0.3475%" height="15" fill="rgb(223,139,8)" fg:x="1756656621" fg:w="16141552"/><text x="38.0703%" y="575.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load::_{{closure}} (16,141,552 samples, 0.35%)</title><rect x="37.8203%" y="549" width="0.3475%" height="15" fill="rgb(232,213,38)" fg:x="1756656621" fg:w="16141552"/><text x="38.0703%" y="559.50"></text></g><g><title>arc_swap::strategy::hybrid::HybridProtection&lt;T&gt;::attempt (14,973,604 samples, 0.32%)</title><rect x="37.8454%" y="533" width="0.3224%" height="15" fill="rgb(207,94,22)" fg:x="1757824569" fg:w="14973604"/><text x="38.0954%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1,398,238 samples, 0.03%)</title><rect x="38.1377%" y="517" width="0.0301%" height="15" fill="rgb(219,183,54)" fg:x="1771399935" fg:w="1398238"/><text x="38.3877%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (1,398,238 samples, 0.03%)</title><rect x="38.1377%" y="501" width="0.0301%" height="15" fill="rgb(216,185,54)" fg:x="1771399935" fg:w="1398238"/><text x="38.3877%" y="511.50"></text></g><g><title>pgdog::config::config (23,050,858 samples, 0.50%)</title><rect x="37.7004%" y="645" width="0.4963%" height="15" fill="rgb(254,217,39)" fg:x="1751086968" fg:w="23050858"/><text x="37.9504%" y="655.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load (17,481,205 samples, 0.38%)</title><rect x="37.8203%" y="629" width="0.3764%" height="15" fill="rgb(240,178,23)" fg:x="1756656621" fg:w="17481205"/><text x="38.0703%" y="639.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load (17,481,205 samples, 0.38%)</title><rect x="37.8203%" y="613" width="0.3764%" height="15" fill="rgb(218,11,47)" fg:x="1756656621" fg:w="17481205"/><text x="38.0703%" y="623.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (17,481,205 samples, 0.38%)</title><rect x="37.8203%" y="597" width="0.3764%" height="15" fill="rgb(218,51,51)" fg:x="1756656621" fg:w="17481205"/><text x="38.0703%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17,481,205 samples, 0.38%)</title><rect x="37.8203%" y="581" width="0.3764%" height="15" fill="rgb(238,126,27)" fg:x="1756656621" fg:w="17481205"/><text x="38.0703%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,339,653 samples, 0.03%)</title><rect x="38.1678%" y="565" width="0.0288%" height="15" fill="rgb(249,202,22)" fg:x="1772798173" fg:w="1339653"/><text x="38.4178%" y="575.50"></text></g><g><title>arc_swap::debt::list::THREAD_HEAD::_{{constant}}::_{{closure}} (1,339,653 samples, 0.03%)</title><rect x="38.1678%" y="549" width="0.0288%" height="15" fill="rgb(254,195,49)" fg:x="1772798173" fg:w="1339653"/><text x="38.4178%" y="559.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (1,339,653 samples, 0.03%)</title><rect x="38.1678%" y="533" width="0.0288%" height="15" fill="rgb(208,123,14)" fg:x="1772798173" fg:w="1339653"/><text x="38.4178%" y="543.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::full (2,213,564 samples, 0.05%)</title><rect x="38.1967%" y="645" width="0.0477%" height="15" fill="rgb(224,200,8)" fg:x="1774137826" fg:w="2213564"/><text x="38.4467%" y="655.50"></text></g><g><title>&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage as pgdog::net::messages::Protocol&gt;::code (2,213,564 samples, 0.05%)</title><rect x="38.1967%" y="629" width="0.0477%" height="15" fill="rgb(217,61,36)" fg:x="1774137826" fg:w="2213564"/><text x="38.4467%" y="639.50"></text></g><g><title>_rjem_je_te_event_trigger (1,058,224 samples, 0.02%)</title><rect x="38.4413%" y="389" width="0.0228%" height="15" fill="rgb(206,35,45)" fg:x="1785502528" fg:w="1058224"/><text x="38.6913%" y="399.50"></text></g><g><title>te_adjust_thresholds_helper (1,058,224 samples, 0.02%)</title><rect x="38.4413%" y="373" width="0.0228%" height="15" fill="rgb(217,65,33)" fg:x="1785502528" fg:w="1058224"/><text x="38.6913%" y="383.50"></text></g><g><title>te_ctx_next_event_set (1,058,224 samples, 0.02%)</title><rect x="38.4413%" y="357" width="0.0228%" height="15" fill="rgb(222,158,48)" fg:x="1785502528" fg:w="1058224"/><text x="38.6913%" y="367.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (1,058,224 samples, 0.02%)</title><rect x="38.4413%" y="341" width="0.0228%" height="15" fill="rgb(254,2,54)" fg:x="1785502528" fg:w="1058224"/><text x="38.6913%" y="351.50"></text></g><g><title>_rjem_je_malloc_default (6,295,054 samples, 0.14%)</title><rect x="38.3384%" y="469" width="0.1355%" height="15" fill="rgb(250,143,38)" fg:x="1780720999" fg:w="6295054"/><text x="38.5884%" y="479.50"></text></g><g><title>imalloc (3,911,467 samples, 0.08%)</title><rect x="38.3897%" y="453" width="0.0842%" height="15" fill="rgb(248,25,0)" fg:x="1783104586" fg:w="3911467"/><text x="38.6397%" y="463.50"></text></g><g><title>imalloc_body (3,911,467 samples, 0.08%)</title><rect x="38.3897%" y="437" width="0.0842%" height="15" fill="rgb(206,152,27)" fg:x="1783104586" fg:w="3911467"/><text x="38.6397%" y="447.50"></text></g><g><title>thread_alloc_event (3,911,467 samples, 0.08%)</title><rect x="38.3897%" y="421" width="0.0842%" height="15" fill="rgb(240,77,30)" fg:x="1783104586" fg:w="3911467"/><text x="38.6397%" y="431.50"></text></g><g><title>te_event_advance (3,911,467 samples, 0.08%)</title><rect x="38.3897%" y="405" width="0.0842%" height="15" fill="rgb(231,5,3)" fg:x="1783104586" fg:w="3911467"/><text x="38.6397%" y="415.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::new (18,129,870 samples, 0.39%)</title><rect x="38.2443%" y="645" width="0.3903%" height="15" fill="rgb(207,226,32)" fg:x="1776351390" fg:w="18129870"/><text x="38.4943%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (18,129,870 samples, 0.39%)</title><rect x="38.2443%" y="629" width="0.3903%" height="15" fill="rgb(222,207,47)" fg:x="1776351390" fg:w="18129870"/><text x="38.4943%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18,129,870 samples, 0.39%)</title><rect x="38.2443%" y="613" width="0.3903%" height="15" fill="rgb(229,115,45)" fg:x="1776351390" fg:w="18129870"/><text x="38.4943%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18,129,870 samples, 0.39%)</title><rect x="38.2443%" y="597" width="0.3903%" height="15" fill="rgb(224,191,6)" fg:x="1776351390" fg:w="18129870"/><text x="38.4943%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (18,129,870 samples, 0.39%)</title><rect x="38.2443%" y="581" width="0.3903%" height="15" fill="rgb(230,227,24)" fg:x="1776351390" fg:w="18129870"/><text x="38.4943%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (18,129,870 samples, 0.39%)</title><rect x="38.2443%" y="565" width="0.3903%" height="15" fill="rgb(228,80,19)" fg:x="1776351390" fg:w="18129870"/><text x="38.4943%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13,760,261 samples, 0.30%)</title><rect x="38.3384%" y="549" width="0.2963%" height="15" fill="rgb(247,229,0)" fg:x="1780720999" fg:w="13760261"/><text x="38.5884%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13,760,261 samples, 0.30%)</title><rect x="38.3384%" y="533" width="0.2963%" height="15" fill="rgb(237,194,15)" fg:x="1780720999" fg:w="13760261"/><text x="38.5884%" y="543.50"></text></g><g><title>alloc::alloc::alloc (13,760,261 samples, 0.30%)</title><rect x="38.3384%" y="517" width="0.2963%" height="15" fill="rgb(219,203,20)" fg:x="1780720999" fg:w="13760261"/><text x="38.5884%" y="527.50"></text></g><g><title>__rust_alloc (13,760,261 samples, 0.30%)</title><rect x="38.3384%" y="501" width="0.2963%" height="15" fill="rgb(234,128,8)" fg:x="1780720999" fg:w="13760261"/><text x="38.5884%" y="511.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13,760,261 samples, 0.30%)</title><rect x="38.3384%" y="485" width="0.2963%" height="15" fill="rgb(248,202,8)" fg:x="1780720999" fg:w="13760261"/><text x="38.5884%" y="495.50"></text></g><g><title>_rjem_malloc (7,465,207 samples, 0.16%)</title><rect x="38.4739%" y="469" width="0.1607%" height="15" fill="rgb(206,104,37)" fg:x="1787016053" fg:w="7465207"/><text x="38.7239%" y="479.50"></text></g><g><title>imalloc_fastpath (7,465,207 samples, 0.16%)</title><rect x="38.4739%" y="453" width="0.1607%" height="15" fill="rgb(223,8,27)" fg:x="1787016053" fg:w="7465207"/><text x="38.7239%" y="463.50"></text></g><g><title>cache_bin_alloc_easy (4,190,772 samples, 0.09%)</title><rect x="38.5444%" y="437" width="0.0902%" height="15" fill="rgb(216,217,28)" fg:x="1790290488" fg:w="4190772"/><text x="38.7944%" y="447.50"></text></g><g><title>cache_bin_alloc_impl (4,190,772 samples, 0.09%)</title><rect x="38.5444%" y="421" width="0.0902%" height="15" fill="rgb(249,199,1)" fg:x="1790290488" fg:w="4190772"/><text x="38.7944%" y="431.50"></text></g><g><title>pgdog::net::messages::Message::frontend (1,082,152 samples, 0.02%)</title><rect x="38.6347%" y="645" width="0.0233%" height="15" fill="rgb(240,85,17)" fg:x="1794481260" fg:w="1082152"/><text x="38.8847%" y="655.50"></text></g><g><title>&lt;tokio::io::util::read_exact::ReadExact&lt;A&gt; as core::future::future::Future&gt;::poll (2,728,323 samples, 0.06%)</title><rect x="38.7662%" y="629" width="0.0587%" height="15" fill="rgb(206,108,45)" fg:x="1800592558" fg:w="2728323"/><text x="39.0162%" y="639.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (1,198,473 samples, 0.03%)</title><rect x="38.7992%" y="613" width="0.0258%" height="15" fill="rgb(245,210,41)" fg:x="1802122408" fg:w="1198473"/><text x="39.0492%" y="623.50"></text></g><g><title>&lt;pgdog::net::stream::Stream as tokio::io::async_read::AsyncRead&gt;::poll_read (1,198,473 samples, 0.03%)</title><rect x="38.7992%" y="597" width="0.0258%" height="15" fill="rgb(206,13,37)" fg:x="1802122408" fg:w="1198473"/><text x="39.0492%" y="607.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1,198,473 samples, 0.03%)</title><rect x="38.7992%" y="581" width="0.0258%" height="15" fill="rgb(250,61,18)" fg:x="1802122408" fg:w="1198473"/><text x="39.0492%" y="591.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1,198,473 samples, 0.03%)</title><rect x="38.7992%" y="565" width="0.0258%" height="15" fill="rgb(235,172,48)" fg:x="1802122408" fg:w="1198473"/><text x="39.0492%" y="575.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (1,198,473 samples, 0.03%)</title><rect x="38.7992%" y="549" width="0.0258%" height="15" fill="rgb(249,201,17)" fg:x="1802122408" fg:w="1198473"/><text x="39.0492%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (1,198,473 samples, 0.03%)</title><rect x="38.7992%" y="533" width="0.0258%" height="15" fill="rgb(219,208,6)" fg:x="1802122408" fg:w="1198473"/><text x="39.0492%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,198,473 samples, 0.03%)</title><rect x="38.7992%" y="517" width="0.0258%" height="15" fill="rgb(248,31,23)" fg:x="1802122408" fg:w="1198473"/><text x="39.0492%" y="527.50"></text></g><g><title>[libc.so.6] (1,198,473 samples, 0.03%)</title><rect x="38.7992%" y="501" width="0.0258%" height="15" fill="rgb(245,15,42)" fg:x="1802122408" fg:w="1198473"/><text x="39.0492%" y="511.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (1,742,609 samples, 0.04%)</title><rect x="38.8661%" y="549" width="0.0375%" height="15" fill="rgb(222,217,39)" fg:x="1805232356" fg:w="1742609"/><text x="39.1161%" y="559.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,742,609 samples, 0.04%)</title><rect x="38.8661%" y="533" width="0.0375%" height="15" fill="rgb(210,219,27)" fg:x="1805232356" fg:w="1742609"/><text x="39.1161%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,742,609 samples, 0.04%)</title><rect x="38.8661%" y="517" width="0.0375%" height="15" fill="rgb(252,166,36)" fg:x="1805232356" fg:w="1742609"/><text x="39.1161%" y="527.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (3,271,771 samples, 0.07%)</title><rect x="38.8661%" y="581" width="0.0704%" height="15" fill="rgb(245,132,34)" fg:x="1805232356" fg:w="3271771"/><text x="39.1161%" y="591.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (3,271,771 samples, 0.07%)</title><rect x="38.8661%" y="565" width="0.0704%" height="15" fill="rgb(236,54,3)" fg:x="1805232356" fg:w="3271771"/><text x="39.1161%" y="575.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (1,529,162 samples, 0.03%)</title><rect x="38.9036%" y="549" width="0.0329%" height="15" fill="rgb(241,173,43)" fg:x="1806974965" fg:w="1529162"/><text x="39.1536%" y="559.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1,505,702 samples, 0.03%)</title><rect x="38.9041%" y="533" width="0.0324%" height="15" fill="rgb(215,190,9)" fg:x="1806998425" fg:w="1505702"/><text x="39.1541%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1,505,702 samples, 0.03%)</title><rect x="38.9041%" y="517" width="0.0324%" height="15" fill="rgb(242,101,16)" fg:x="1806998425" fg:w="1505702"/><text x="39.1541%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (1,505,702 samples, 0.03%)</title><rect x="38.9041%" y="501" width="0.0324%" height="15" fill="rgb(223,190,21)" fg:x="1806998425" fg:w="1505702"/><text x="39.1541%" y="511.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (6,727,205 samples, 0.14%)</title><rect x="38.8250%" y="613" width="0.1448%" height="15" fill="rgb(215,228,25)" fg:x="1803320881" fg:w="6727205"/><text x="39.0750%" y="623.50"></text></g><g><title>&lt;pgdog::net::stream::Stream as tokio::io::async_read::AsyncRead&gt;::poll_read (4,815,730 samples, 0.10%)</title><rect x="38.8661%" y="597" width="0.1037%" height="15" fill="rgb(225,36,22)" fg:x="1805232356" fg:w="4815730"/><text x="39.1161%" y="607.50"></text></g><g><title>pgdog::net::stream::_::&lt;impl pgdog::net::stream::Stream&gt;::project (1,543,959 samples, 0.03%)</title><rect x="38.9366%" y="581" width="0.0332%" height="15" fill="rgb(251,106,46)" fg:x="1808504127" fg:w="1543959"/><text x="39.1866%" y="591.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (1,794,393 samples, 0.04%)</title><rect x="38.9698%" y="613" width="0.0386%" height="15" fill="rgb(208,90,1)" fg:x="1810048086" fg:w="1794393"/><text x="39.2198%" y="623.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,794,393 samples, 0.04%)</title><rect x="38.9698%" y="597" width="0.0386%" height="15" fill="rgb(243,10,4)" fg:x="1810048086" fg:w="1794393"/><text x="39.2198%" y="607.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,794,393 samples, 0.04%)</title><rect x="38.9698%" y="581" width="0.0386%" height="15" fill="rgb(212,137,27)" fg:x="1810048086" fg:w="1794393"/><text x="39.2198%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,794,393 samples, 0.04%)</title><rect x="38.9698%" y="565" width="0.0386%" height="15" fill="rgb(231,220,49)" fg:x="1810048086" fg:w="1794393"/><text x="39.2198%" y="575.50"></text></g><g><title>&lt;tokio::io::util::read_int::ReadI32&lt;R&gt; as core::future::future::Future&gt;::poll (9,667,228 samples, 0.21%)</title><rect x="38.8250%" y="629" width="0.2081%" height="15" fill="rgb(237,96,20)" fg:x="1803320881" fg:w="9667228"/><text x="39.0750%" y="639.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::new (1,145,630 samples, 0.02%)</title><rect x="39.0084%" y="613" width="0.0247%" height="15" fill="rgb(239,229,30)" fg:x="1811842479" fg:w="1145630"/><text x="39.2584%" y="623.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (1,631,083 samples, 0.04%)</title><rect x="39.2062%" y="549" width="0.0351%" height="15" fill="rgb(219,65,33)" fg:x="1821028414" fg:w="1631083"/><text x="39.4562%" y="559.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (233,420,955 samples, 5.03%)</title><rect x="39.3642%" y="469" width="5.0255%" height="15" fill="rgb(243,134,7)" fg:x="1828367512" fg:w="233420955"/><text x="39.6142%" y="479.50">&lt;&amp;mio:..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (233,420,955 samples, 5.03%)</title><rect x="39.3642%" y="453" width="5.0255%" height="15" fill="rgb(216,177,54)" fg:x="1828367512" fg:w="233420955"/><text x="39.6142%" y="463.50">mio::i..</text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (233,420,955 samples, 5.03%)</title><rect x="39.3642%" y="437" width="5.0255%" height="15" fill="rgb(211,160,20)" fg:x="1828367512" fg:w="233420955"/><text x="39.6142%" y="447.50">mio::s..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (233,420,955 samples, 5.03%)</title><rect x="39.3642%" y="421" width="5.0255%" height="15" fill="rgb(239,85,39)" fg:x="1828367512" fg:w="233420955"/><text x="39.6142%" y="431.50">&lt;&amp;mio:..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (233,420,955 samples, 5.03%)</title><rect x="39.3642%" y="405" width="5.0255%" height="15" fill="rgb(232,125,22)" fg:x="1828367512" fg:w="233420955"/><text x="39.6142%" y="415.50">&lt;&amp;std:..</text></g><g><title>std::sys::net::connection::socket::TcpStream::read (233,420,955 samples, 5.03%)</title><rect x="39.3642%" y="389" width="5.0255%" height="15" fill="rgb(244,57,34)" fg:x="1828367512" fg:w="233420955"/><text x="39.6142%" y="399.50">std::s..</text></g><g><title>std::sys::net::connection::socket::unix::Socket::read (233,420,955 samples, 5.03%)</title><rect x="39.3642%" y="373" width="5.0255%" height="15" fill="rgb(214,203,32)" fg:x="1828367512" fg:w="233420955"/><text x="39.6142%" y="383.50">std::s..</text></g><g><title>std::sys::net::connection::socket::unix::Socket::recv_with_flags (233,420,955 samples, 5.03%)</title><rect x="39.3642%" y="357" width="5.0255%" height="15" fill="rgb(207,58,43)" fg:x="1828367512" fg:w="233420955"/><text x="39.6142%" y="367.50">std::s..</text></g><g><title>recv (233,420,955 samples, 5.03%)</title><rect x="39.3642%" y="341" width="5.0255%" height="15" fill="rgb(215,193,15)" fg:x="1828367512" fg:w="233420955"/><text x="39.6142%" y="351.50">recv</text></g><g><title>[libc.so.6] (233,420,955 samples, 5.03%)</title><rect x="39.3642%" y="325" width="5.0255%" height="15" fill="rgb(232,15,44)" fg:x="1828367512" fg:w="233420955"/><text x="39.6142%" y="335.50">[libc...</text></g><g><title>[libc.so.6] (233,420,955 samples, 5.03%)</title><rect x="39.3642%" y="309" width="5.0255%" height="15" fill="rgb(212,3,48)" fg:x="1828367512" fg:w="233420955"/><text x="39.6142%" y="319.50">[libc...</text></g><g><title>[libc.so.6] (233,420,955 samples, 5.03%)</title><rect x="39.3642%" y="293" width="5.0255%" height="15" fill="rgb(218,128,7)" fg:x="1828367512" fg:w="233420955"/><text x="39.6142%" y="303.50">[libc...</text></g><g><title>[unknown] (233,420,955 samples, 5.03%)</title><rect x="39.3642%" y="277" width="5.0255%" height="15" fill="rgb(226,216,39)" fg:x="1828367512" fg:w="233420955"/><text x="39.6142%" y="287.50">[unkno..</text></g><g><title>[unknown] (233,420,955 samples, 5.03%)</title><rect x="39.3642%" y="261" width="5.0255%" height="15" fill="rgb(243,47,51)" fg:x="1828367512" fg:w="233420955"/><text x="39.6142%" y="271.50">[unkno..</text></g><g><title>[unknown] (231,401,302 samples, 4.98%)</title><rect x="39.4077%" y="245" width="4.9820%" height="15" fill="rgb(241,183,40)" fg:x="1830387165" fg:w="231401302"/><text x="39.6577%" y="255.50">[unkno..</text></g><g><title>[unknown] (229,602,347 samples, 4.94%)</title><rect x="39.4464%" y="229" width="4.9433%" height="15" fill="rgb(231,217,32)" fg:x="1832186120" fg:w="229602347"/><text x="39.6964%" y="239.50">[unkno..</text></g><g><title>[unknown] (217,509,482 samples, 4.68%)</title><rect x="39.7068%" y="213" width="4.6829%" height="15" fill="rgb(229,61,38)" fg:x="1844278985" fg:w="217509482"/><text x="39.9568%" y="223.50">[unkn..</text></g><g><title>[unknown] (210,669,694 samples, 4.54%)</title><rect x="39.8540%" y="197" width="4.5357%" height="15" fill="rgb(225,210,5)" fg:x="1851118773" fg:w="210669694"/><text x="40.1040%" y="207.50">[unkn..</text></g><g><title>[unknown] (198,644,495 samples, 4.28%)</title><rect x="40.1129%" y="181" width="4.2768%" height="15" fill="rgb(231,79,45)" fg:x="1863143972" fg:w="198644495"/><text x="40.3629%" y="191.50">[unkn..</text></g><g><title>[unknown] (195,926,627 samples, 4.22%)</title><rect x="40.1715%" y="165" width="4.2182%" height="15" fill="rgb(224,100,7)" fg:x="1865861840" fg:w="195926627"/><text x="40.4215%" y="175.50">[unkn..</text></g><g><title>[unknown] (155,201,042 samples, 3.34%)</title><rect x="41.0483%" y="149" width="3.3414%" height="15" fill="rgb(241,198,18)" fg:x="1906587425" fg:w="155201042"/><text x="41.2983%" y="159.50">[un..</text></g><g><title>[unknown] (94,100,410 samples, 2.03%)</title><rect x="42.3637%" y="133" width="2.0260%" height="15" fill="rgb(252,97,53)" fg:x="1967688057" fg:w="94100410"/><text x="42.6137%" y="143.50">[..</text></g><g><title>[unknown] (78,430,529 samples, 1.69%)</title><rect x="42.7011%" y="117" width="1.6886%" height="15" fill="rgb(220,88,7)" fg:x="1983357938" fg:w="78430529"/><text x="42.9511%" y="127.50"></text></g><g><title>[unknown] (35,331,412 samples, 0.76%)</title><rect x="43.6290%" y="101" width="0.7607%" height="15" fill="rgb(213,176,14)" fg:x="2026457055" fg:w="35331412"/><text x="43.8790%" y="111.50"></text></g><g><title>[unknown] (9,478,934 samples, 0.20%)</title><rect x="44.1856%" y="85" width="0.2041%" height="15" fill="rgb(246,73,7)" fg:x="2052309533" fg:w="9478934"/><text x="44.4356%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::RestoreOnPending&gt; (5,702,795 samples, 0.12%)</title><rect x="44.4172%" y="437" width="0.1228%" height="15" fill="rgb(245,64,36)" fg:x="2063066418" fg:w="5702795"/><text x="44.6672%" y="447.50"></text></g><g><title>&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (5,702,795 samples, 0.12%)</title><rect x="44.4172%" y="421" width="0.1228%" height="15" fill="rgb(245,80,10)" fg:x="2063066418" fg:w="5702795"/><text x="44.6672%" y="431.50"></text></g><g><title>tokio::runtime::context::budget (2,967,579 samples, 0.06%)</title><rect x="44.4761%" y="405" width="0.0639%" height="15" fill="rgb(232,107,50)" fg:x="2065801634" fg:w="2967579"/><text x="44.7261%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,967,579 samples, 0.06%)</title><rect x="44.4761%" y="389" width="0.0639%" height="15" fill="rgb(253,3,0)" fg:x="2065801634" fg:w="2967579"/><text x="44.7261%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2,967,579 samples, 0.06%)</title><rect x="44.4761%" y="373" width="0.0639%" height="15" fill="rgb(212,99,53)" fg:x="2065801634" fg:w="2967579"/><text x="44.7261%" y="383.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (2,967,579 samples, 0.06%)</title><rect x="44.4761%" y="357" width="0.0639%" height="15" fill="rgb(249,111,54)" fg:x="2065801634" fg:w="2967579"/><text x="44.7261%" y="367.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (2,967,579 samples, 0.06%)</title><rect x="44.4761%" y="341" width="0.0639%" height="15" fill="rgb(249,55,30)" fg:x="2065801634" fg:w="2967579"/><text x="44.7261%" y="351.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1,199,662 samples, 0.03%)</title><rect x="44.5142%" y="325" width="0.0258%" height="15" fill="rgb(237,47,42)" fg:x="2067569551" fg:w="1199662"/><text x="44.7642%" y="335.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (1,823,578 samples, 0.04%)</title><rect x="44.5400%" y="437" width="0.0393%" height="15" fill="rgb(211,20,18)" fg:x="2068769213" fg:w="1823578"/><text x="44.7900%" y="447.50"></text></g><g><title>tokio::runtime::context::budget (1,823,578 samples, 0.04%)</title><rect x="44.5400%" y="421" width="0.0393%" height="15" fill="rgb(231,203,46)" fg:x="2068769213" fg:w="1823578"/><text x="44.7900%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,823,578 samples, 0.04%)</title><rect x="44.5400%" y="405" width="0.0393%" height="15" fill="rgb(237,142,3)" fg:x="2068769213" fg:w="1823578"/><text x="44.7900%" y="415.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (1,823,578 samples, 0.04%)</title><rect x="44.5400%" y="389" width="0.0393%" height="15" fill="rgb(241,107,1)" fg:x="2068769213" fg:w="1823578"/><text x="44.7900%" y="399.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (1,823,578 samples, 0.04%)</title><rect x="44.5400%" y="373" width="0.0393%" height="15" fill="rgb(229,83,13)" fg:x="2068769213" fg:w="1823578"/><text x="44.7900%" y="383.50"></text></g><g><title>tokio::runtime::coop::Budget::decrement (1,823,578 samples, 0.04%)</title><rect x="44.5400%" y="357" width="0.0393%" height="15" fill="rgb(241,91,40)" fg:x="2068769213" fg:w="1823578"/><text x="44.7900%" y="367.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone_from (1,566,268 samples, 0.03%)</title><rect x="44.5792%" y="421" width="0.0337%" height="15" fill="rgb(225,3,45)" fg:x="2070592791" fg:w="1566268"/><text x="44.8292%" y="431.50"></text></g><g><title>core::task::wake::Waker::will_wake (1,566,268 samples, 0.03%)</title><rect x="44.5792%" y="405" width="0.0337%" height="15" fill="rgb(244,223,14)" fg:x="2070592791" fg:w="1566268"/><text x="44.8292%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (871,425 samples, 0.02%)</title><rect x="44.6130%" y="421" width="0.0188%" height="15" fill="rgb(224,124,37)" fg:x="2072159059" fg:w="871425"/><text x="44.8630%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (871,425 samples, 0.02%)</title><rect x="44.6130%" y="405" width="0.0188%" height="15" fill="rgb(251,171,30)" fg:x="2072159059" fg:w="871425"/><text x="44.8630%" y="415.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (871,425 samples, 0.02%)</title><rect x="44.6130%" y="389" width="0.0188%" height="15" fill="rgb(236,46,54)" fg:x="2072159059" fg:w="871425"/><text x="44.8630%" y="399.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (871,425 samples, 0.02%)</title><rect x="44.6130%" y="373" width="0.0188%" height="15" fill="rgb(245,213,5)" fg:x="2072159059" fg:w="871425"/><text x="44.8630%" y="383.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1,075,633 samples, 0.02%)</title><rect x="44.6317%" y="421" width="0.0232%" height="15" fill="rgb(230,144,27)" fg:x="2073030484" fg:w="1075633"/><text x="44.8817%" y="431.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1,075,633 samples, 0.02%)</title><rect x="44.6317%" y="405" width="0.0232%" height="15" fill="rgb(220,86,6)" fg:x="2073030484" fg:w="1075633"/><text x="44.8817%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1,075,633 samples, 0.02%)</title><rect x="44.6317%" y="389" width="0.0232%" height="15" fill="rgb(240,20,13)" fg:x="2073030484" fg:w="1075633"/><text x="44.8817%" y="399.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (252,529,856 samples, 5.44%)</title><rect x="39.2413%" y="533" width="5.4369%" height="15" fill="rgb(217,89,34)" fg:x="1822659497" fg:w="252529856"/><text x="39.4913%" y="543.50">&lt;tokio:..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (252,529,856 samples, 5.44%)</title><rect x="39.2413%" y="517" width="5.4369%" height="15" fill="rgb(229,13,5)" fg:x="1822659497" fg:w="252529856"/><text x="39.4913%" y="527.50">&lt;tokio:..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (246,821,841 samples, 5.31%)</title><rect x="39.3642%" y="501" width="5.3140%" height="15" fill="rgb(244,67,35)" fg:x="1828367512" fg:w="246821841"/><text x="39.6142%" y="511.50">tokio::..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (246,821,841 samples, 5.31%)</title><rect x="39.3642%" y="485" width="5.3140%" height="15" fill="rgb(221,40,2)" fg:x="1828367512" fg:w="246821841"/><text x="39.6142%" y="495.50">tokio::..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (13,400,886 samples, 0.29%)</title><rect x="44.3897%" y="469" width="0.2885%" height="15" fill="rgb(237,157,21)" fg:x="2061788467" fg:w="13400886"/><text x="44.6397%" y="479.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (12,122,935 samples, 0.26%)</title><rect x="44.4172%" y="453" width="0.2610%" height="15" fill="rgb(222,94,11)" fg:x="2063066418" fg:w="12122935"/><text x="44.6672%" y="463.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (4,596,562 samples, 0.10%)</title><rect x="44.5792%" y="437" width="0.0990%" height="15" fill="rgb(249,113,6)" fg:x="2070592791" fg:w="4596562"/><text x="44.8292%" y="447.50"></text></g><g><title>tokio::runtime::io::driver::Direction::mask (1,083,236 samples, 0.02%)</title><rect x="44.6549%" y="421" width="0.0233%" height="15" fill="rgb(238,137,36)" fg:x="2074106117" fg:w="1083236"/><text x="44.9049%" y="431.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,244,471 samples, 0.03%)</title><rect x="44.6782%" y="533" width="0.0268%" height="15" fill="rgb(210,102,26)" fg:x="2075189353" fg:w="1244471"/><text x="44.9282%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,244,471 samples, 0.03%)</title><rect x="44.6782%" y="517" width="0.0268%" height="15" fill="rgb(218,30,30)" fg:x="2075189353" fg:w="1244471"/><text x="44.9282%" y="527.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (254,952,824 samples, 5.49%)</title><rect x="39.2413%" y="549" width="5.4891%" height="15" fill="rgb(214,67,26)" fg:x="1822659497" fg:w="254952824"/><text x="39.4913%" y="559.50">&lt;tokio:..</text></g><g><title>tokio::io::read_buf::ReadBuf::new (1,178,497 samples, 0.03%)</title><rect x="44.7050%" y="533" width="0.0254%" height="15" fill="rgb(251,9,53)" fg:x="2076433824" fg:w="1178497"/><text x="44.9550%" y="543.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (266,287,499 samples, 5.73%)</title><rect x="39.0945%" y="581" width="5.7331%" height="15" fill="rgb(228,204,25)" fg:x="1815841831" fg:w="266287499"/><text x="39.3445%" y="591.50">&lt;tokio:..</text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (266,287,499 samples, 5.73%)</title><rect x="39.0945%" y="565" width="5.7331%" height="15" fill="rgb(207,153,8)" fg:x="1815841831" fg:w="266287499"/><text x="39.3445%" y="575.50">&lt;tokio:..</text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (4,517,009 samples, 0.10%)</title><rect x="44.7304%" y="549" width="0.0972%" height="15" fill="rgb(242,9,16)" fg:x="2077612321" fg:w="4517009"/><text x="44.9804%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (1,611,739 samples, 0.03%)</title><rect x="44.7929%" y="533" width="0.0347%" height="15" fill="rgb(217,211,10)" fg:x="2080517591" fg:w="1611739"/><text x="45.0429%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,611,739 samples, 0.03%)</title><rect x="44.7929%" y="517" width="0.0347%" height="15" fill="rgb(219,228,52)" fg:x="2080517591" fg:w="1611739"/><text x="45.0429%" y="527.50"></text></g><g><title>[libc.so.6] (1,611,739 samples, 0.03%)</title><rect x="44.7929%" y="501" width="0.0347%" height="15" fill="rgb(231,92,29)" fg:x="2080517591" fg:w="1611739"/><text x="45.0429%" y="511.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (270,795,638 samples, 5.83%)</title><rect x="39.0331%" y="613" width="5.8301%" height="15" fill="rgb(232,8,23)" fg:x="1812988109" fg:w="270795638"/><text x="39.2831%" y="623.50">&lt;&amp;mut T..</text></g><g><title>&lt;pgdog::net::stream::Stream as tokio::io::async_read::AsyncRead&gt;::poll_read (270,795,638 samples, 5.83%)</title><rect x="39.0331%" y="597" width="5.8301%" height="15" fill="rgb(216,211,34)" fg:x="1812988109" fg:w="270795638"/><text x="39.2831%" y="607.50">&lt;pgdog:..</text></g><g><title>pgdog::net::stream::_::&lt;impl pgdog::net::stream::Stream&gt;::project (1,654,417 samples, 0.04%)</title><rect x="44.8276%" y="581" width="0.0356%" height="15" fill="rgb(236,151,0)" fg:x="2082129330" fg:w="1654417"/><text x="45.0776%" y="591.50"></text></g><g><title>&lt;tokio::io::util::read_int::ReadU8&lt;R&gt; as core::future::future::Future&gt;::poll (270,797,059 samples, 5.83%)</title><rect x="39.0331%" y="629" width="5.8302%" height="15" fill="rgb(209,168,3)" fg:x="1812988109" fg:w="270797059"/><text x="39.2831%" y="639.50">&lt;tokio:..</text></g><g><title>bytes::bytes_mut::BytesMut::freeze (1,277,587 samples, 0.03%)</title><rect x="44.8633%" y="629" width="0.0275%" height="15" fill="rgb(208,129,28)" fg:x="2083785168" fg:w="1277587"/><text x="45.1133%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,277,587 samples, 0.03%)</title><rect x="44.8633%" y="613" width="0.0275%" height="15" fill="rgb(229,78,22)" fg:x="2083785168" fg:w="1277587"/><text x="45.1133%" y="623.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (1,277,587 samples, 0.03%)</title><rect x="44.8633%" y="597" width="0.0275%" height="15" fill="rgb(228,187,13)" fg:x="2083785168" fg:w="1277587"/><text x="45.1133%" y="607.50"></text></g><g><title>bytes::bytes_mut::BytesMut::resize (1,257,781 samples, 0.03%)</title><rect x="44.8908%" y="629" width="0.0271%" height="15" fill="rgb(240,119,24)" fg:x="2085062755" fg:w="1257781"/><text x="45.1408%" y="639.50"></text></g><g><title>core::intrinsics::write_bytes (1,257,781 samples, 0.03%)</title><rect x="44.8908%" y="613" width="0.0271%" height="15" fill="rgb(209,194,42)" fg:x="2085062755" fg:w="1257781"/><text x="45.1408%" y="623.50"></text></g><g><title>[libc.so.6] (1,257,781 samples, 0.03%)</title><rect x="44.8908%" y="597" width="0.0271%" height="15" fill="rgb(247,200,46)" fg:x="2085062755" fg:w="1257781"/><text x="45.1408%" y="607.50"></text></g><g><title>pgdog::frontend::client::Client::buffer::_{{closure}} (456,489,941 samples, 9.83%)</title><rect x="35.2776%" y="661" width="9.8281%" height="15" fill="rgb(218,76,16)" fg:x="1638553427" fg:w="456489941"/><text x="35.5276%" y="671.50">pgdog::fronten..</text></g><g><title>pgdog::net::stream::Stream::read::_{{closure}} (299,479,956 samples, 6.45%)</title><rect x="38.6579%" y="645" width="6.4477%" height="15" fill="rgb(225,21,48)" fg:x="1795563412" fg:w="299479956"/><text x="38.9079%" y="655.50">pgdog::n..</text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (8,722,832 samples, 0.19%)</title><rect x="44.9179%" y="629" width="0.1878%" height="15" fill="rgb(239,223,50)" fg:x="2086320536" fg:w="8722832"/><text x="45.1679%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8,722,832 samples, 0.19%)</title><rect x="44.9179%" y="613" width="0.1878%" height="15" fill="rgb(244,45,21)" fg:x="2086320536" fg:w="8722832"/><text x="45.1679%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8,722,832 samples, 0.19%)</title><rect x="44.9179%" y="597" width="0.1878%" height="15" fill="rgb(232,33,43)" fg:x="2086320536" fg:w="8722832"/><text x="45.1679%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8,722,832 samples, 0.19%)</title><rect x="44.9179%" y="581" width="0.1878%" height="15" fill="rgb(209,8,3)" fg:x="2086320536" fg:w="8722832"/><text x="45.1679%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (8,722,832 samples, 0.19%)</title><rect x="44.9179%" y="565" width="0.1878%" height="15" fill="rgb(214,25,53)" fg:x="2086320536" fg:w="8722832"/><text x="45.1679%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (8,722,832 samples, 0.19%)</title><rect x="44.9179%" y="549" width="0.1878%" height="15" fill="rgb(254,186,54)" fg:x="2086320536" fg:w="8722832"/><text x="45.1679%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,722,832 samples, 0.19%)</title><rect x="44.9179%" y="533" width="0.1878%" height="15" fill="rgb(208,174,49)" fg:x="2086320536" fg:w="8722832"/><text x="45.1679%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,722,832 samples, 0.19%)</title><rect x="44.9179%" y="517" width="0.1878%" height="15" fill="rgb(233,191,51)" fg:x="2086320536" fg:w="8722832"/><text x="45.1679%" y="527.50"></text></g><g><title>alloc::alloc::alloc (8,722,832 samples, 0.19%)</title><rect x="44.9179%" y="501" width="0.1878%" height="15" fill="rgb(222,134,10)" fg:x="2086320536" fg:w="8722832"/><text x="45.1679%" y="511.50"></text></g><g><title>__rust_alloc (8,722,832 samples, 0.19%)</title><rect x="44.9179%" y="485" width="0.1878%" height="15" fill="rgb(230,226,20)" fg:x="2086320536" fg:w="8722832"/><text x="45.1679%" y="495.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (8,722,832 samples, 0.19%)</title><rect x="44.9179%" y="469" width="0.1878%" height="15" fill="rgb(251,111,25)" fg:x="2086320536" fg:w="8722832"/><text x="45.1679%" y="479.50"></text></g><g><title>_rjem_malloc (8,722,832 samples, 0.19%)</title><rect x="44.9179%" y="453" width="0.1878%" height="15" fill="rgb(224,40,46)" fg:x="2086320536" fg:w="8722832"/><text x="45.1679%" y="463.50"></text></g><g><title>imalloc_fastpath (8,722,832 samples, 0.19%)</title><rect x="44.9179%" y="437" width="0.1878%" height="15" fill="rgb(236,108,47)" fg:x="2086320536" fg:w="8722832"/><text x="45.1679%" y="447.50"></text></g><g><title>cache_bin_alloc_easy (4,018,830 samples, 0.09%)</title><rect x="45.0191%" y="421" width="0.0865%" height="15" fill="rgb(234,93,0)" fg:x="2091024538" fg:w="4018830"/><text x="45.2691%" y="431.50"></text></g><g><title>cache_bin_alloc_impl (4,018,830 samples, 0.09%)</title><rect x="45.0191%" y="405" width="0.0865%" height="15" fill="rgb(224,213,32)" fg:x="2091024538" fg:w="4018830"/><text x="45.2691%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,310,591 samples, 0.03%)</title><rect x="45.1057%" y="597" width="0.0282%" height="15" fill="rgb(251,11,48)" fg:x="2095043368" fg:w="1310591"/><text x="45.3557%" y="607.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (1,310,591 samples, 0.03%)</title><rect x="45.1057%" y="581" width="0.0282%" height="15" fill="rgb(236,173,5)" fg:x="2095043368" fg:w="1310591"/><text x="45.3557%" y="591.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (1,310,591 samples, 0.03%)</title><rect x="45.1057%" y="565" width="0.0282%" height="15" fill="rgb(230,95,12)" fg:x="2095043368" fg:w="1310591"/><text x="45.3557%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1,614,423 samples, 0.03%)</title><rect x="45.1339%" y="581" width="0.0348%" height="15" fill="rgb(232,209,1)" fg:x="2096353959" fg:w="1614423"/><text x="45.3839%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1,306,139 samples, 0.03%)</title><rect x="45.1686%" y="581" width="0.0281%" height="15" fill="rgb(232,6,1)" fg:x="2097968382" fg:w="1306139"/><text x="45.4186%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1,306,139 samples, 0.03%)</title><rect x="45.1686%" y="565" width="0.0281%" height="15" fill="rgb(210,224,50)" fg:x="2097968382" fg:w="1306139"/><text x="45.4186%" y="575.50"></text></g><g><title>core::mem::replace (1,306,139 samples, 0.03%)</title><rect x="45.1686%" y="549" width="0.0281%" height="15" fill="rgb(228,127,35)" fg:x="2097968382" fg:w="1306139"/><text x="45.4186%" y="559.50"></text></g><g><title>core::ptr::write (1,306,139 samples, 0.03%)</title><rect x="45.1686%" y="533" width="0.0281%" height="15" fill="rgb(245,102,45)" fg:x="2097968382" fg:w="1306139"/><text x="45.4186%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (1,654,641 samples, 0.04%)</title><rect x="45.1968%" y="565" width="0.0356%" height="15" fill="rgb(214,1,49)" fg:x="2099274521" fg:w="1654641"/><text x="45.4468%" y="575.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,167,859,007 samples, 25.14%)</title><rect x="20.1213%" y="693" width="25.1437%" height="15" fill="rgb(226,163,40)" fg:x="934585192" fg:w="1167859007"/><text x="20.3713%" y="703.50">&lt;core::future::poll_fn::PollFn&lt;F&gt; as cor..</text></g><g><title>pgdog::frontend::client::Client::run::_{{closure}}::_{{closure}} (1,167,859,007 samples, 25.14%)</title><rect x="20.1213%" y="677" width="25.1437%" height="15" fill="rgb(239,212,28)" fg:x="934585192" fg:w="1167859007"/><text x="20.3713%" y="687.50">pgdog::frontend::client::Client::run::_{..</text></g><g><title>tokio::macros::support::thread_rng_n (7,400,831 samples, 0.16%)</title><rect x="45.1057%" y="661" width="0.1593%" height="15" fill="rgb(220,20,13)" fg:x="2095043368" fg:w="7400831"/><text x="45.3557%" y="671.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (7,400,831 samples, 0.16%)</title><rect x="45.1057%" y="645" width="0.1593%" height="15" fill="rgb(210,164,35)" fg:x="2095043368" fg:w="7400831"/><text x="45.3557%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7,400,831 samples, 0.16%)</title><rect x="45.1057%" y="629" width="0.1593%" height="15" fill="rgb(248,109,41)" fg:x="2095043368" fg:w="7400831"/><text x="45.3557%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7,400,831 samples, 0.16%)</title><rect x="45.1057%" y="613" width="0.1593%" height="15" fill="rgb(238,23,50)" fg:x="2095043368" fg:w="7400831"/><text x="45.3557%" y="623.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (6,090,240 samples, 0.13%)</title><rect x="45.1339%" y="597" width="0.1311%" height="15" fill="rgb(211,48,49)" fg:x="2096353959" fg:w="6090240"/><text x="45.3839%" y="607.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand_n (3,169,678 samples, 0.07%)</title><rect x="45.1968%" y="581" width="0.0682%" height="15" fill="rgb(223,36,21)" fg:x="2099274521" fg:w="3169678"/><text x="45.4468%" y="591.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (1,515,037 samples, 0.03%)</title><rect x="45.2324%" y="565" width="0.0326%" height="15" fill="rgb(207,123,46)" fg:x="2100929162" fg:w="1515037"/><text x="45.4824%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,487,815 samples, 0.03%)</title><rect x="45.2650%" y="693" width="0.0320%" height="15" fill="rgb(240,218,32)" fg:x="2102444199" fg:w="1487815"/><text x="45.5150%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (3,378,386 samples, 0.07%)</title><rect x="45.4141%" y="645" width="0.0727%" height="15" fill="rgb(252,5,43)" fg:x="2109367335" fg:w="3378386"/><text x="45.6641%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (3,378,386 samples, 0.07%)</title><rect x="45.4141%" y="629" width="0.0727%" height="15" fill="rgb(252,84,19)" fg:x="2109367335" fg:w="3378386"/><text x="45.6641%" y="639.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (3,378,386 samples, 0.07%)</title><rect x="45.4141%" y="613" width="0.0727%" height="15" fill="rgb(243,152,39)" fg:x="2109367335" fg:w="3378386"/><text x="45.6641%" y="623.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (3,378,386 samples, 0.07%)</title><rect x="45.4141%" y="597" width="0.0727%" height="15" fill="rgb(234,160,15)" fg:x="2109367335" fg:w="3378386"/><text x="45.6641%" y="607.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (4,435,278 samples, 0.10%)</title><rect x="45.4868%" y="645" width="0.0955%" height="15" fill="rgb(237,34,20)" fg:x="2112745721" fg:w="4435278"/><text x="45.7368%" y="655.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4,435,278 samples, 0.10%)</title><rect x="45.4868%" y="629" width="0.0955%" height="15" fill="rgb(229,97,13)" fg:x="2112745721" fg:w="4435278"/><text x="45.7368%" y="639.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4,435,278 samples, 0.10%)</title><rect x="45.4868%" y="613" width="0.0955%" height="15" fill="rgb(234,71,50)" fg:x="2112745721" fg:w="4435278"/><text x="45.7368%" y="623.50"></text></g><g><title>tokio::sync::notify::AtomicNotification::load (4,899,836 samples, 0.11%)</title><rect x="45.5823%" y="645" width="0.1055%" height="15" fill="rgb(253,155,4)" fg:x="2117180999" fg:w="4899836"/><text x="45.8323%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,584,109 samples, 0.03%)</title><rect x="45.6537%" y="629" width="0.0341%" height="15" fill="rgb(222,185,37)" fg:x="2120496726" fg:w="1584109"/><text x="45.9037%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (1,584,109 samples, 0.03%)</title><rect x="45.6537%" y="613" width="0.0341%" height="15" fill="rgb(251,177,13)" fg:x="2120496726" fg:w="1584109"/><text x="45.9037%" y="623.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::ops::drop::Drop&gt;::drop (20,413,328 samples, 0.44%)</title><rect x="45.3824%" y="661" width="0.4395%" height="15" fill="rgb(250,179,40)" fg:x="2107897458" fg:w="20413328"/><text x="45.6324%" y="671.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (6,229,951 samples, 0.13%)</title><rect x="45.6878%" y="645" width="0.1341%" height="15" fill="rgb(242,44,2)" fg:x="2122080835" fg:w="6229951"/><text x="45.9378%" y="655.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::set_prev (6,229,951 samples, 0.13%)</title><rect x="45.6878%" y="629" width="0.1341%" height="15" fill="rgb(216,177,13)" fg:x="2122080835" fg:w="6229951"/><text x="45.9378%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (6,229,951 samples, 0.13%)</title><rect x="45.6878%" y="613" width="0.1341%" height="15" fill="rgb(216,106,43)" fg:x="2122080835" fg:w="6229951"/><text x="45.9378%" y="623.50"></text></g><g><title>core::ptr::write (6,229,951 samples, 0.13%)</title><rect x="45.6878%" y="597" width="0.1341%" height="15" fill="rgb(216,183,2)" fg:x="2122080835" fg:w="6229951"/><text x="45.9378%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::notify::Notified&gt; (27,079,385 samples, 0.58%)</title><rect x="45.3378%" y="677" width="0.5830%" height="15" fill="rgb(249,75,3)" fg:x="2105825090" fg:w="27079385"/><text x="45.5878%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::notify::Waiter&gt; (4,593,689 samples, 0.10%)</title><rect x="45.8219%" y="661" width="0.0989%" height="15" fill="rgb(219,67,39)" fg:x="2128310786" fg:w="4593689"/><text x="46.0719%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (4,593,689 samples, 0.10%)</title><rect x="45.8219%" y="645" width="0.0989%" height="15" fill="rgb(253,228,2)" fg:x="2128310786" fg:w="4593689"/><text x="46.0719%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (4,593,689 samples, 0.10%)</title><rect x="45.8219%" y="629" width="0.0989%" height="15" fill="rgb(235,138,27)" fg:x="2128310786" fg:w="4593689"/><text x="46.0719%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (4,593,689 samples, 0.10%)</title><rect x="45.8219%" y="613" width="0.0989%" height="15" fill="rgb(236,97,51)" fg:x="2128310786" fg:w="4593689"/><text x="46.0719%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (4,593,689 samples, 0.10%)</title><rect x="45.8219%" y="597" width="0.0989%" height="15" fill="rgb(240,80,30)" fg:x="2128310786" fg:w="4593689"/><text x="46.0719%" y="607.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (4,593,689 samples, 0.10%)</title><rect x="45.8219%" y="581" width="0.0989%" height="15" fill="rgb(230,178,19)" fg:x="2128310786" fg:w="4593689"/><text x="46.0719%" y="591.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (4,593,689 samples, 0.10%)</title><rect x="45.8219%" y="565" width="0.0989%" height="15" fill="rgb(210,190,27)" fg:x="2128310786" fg:w="4593689"/><text x="46.0719%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (4,593,689 samples, 0.10%)</title><rect x="45.8219%" y="549" width="0.0989%" height="15" fill="rgb(222,107,31)" fg:x="2128310786" fg:w="4593689"/><text x="46.0719%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (4,593,689 samples, 0.10%)</title><rect x="45.8219%" y="533" width="0.0989%" height="15" fill="rgb(216,127,34)" fg:x="2128310786" fg:w="4593689"/><text x="46.0719%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,899,185 samples, 0.04%)</title><rect x="45.8799%" y="517" width="0.0409%" height="15" fill="rgb(234,116,52)" fg:x="2131005290" fg:w="1899185"/><text x="46.1299%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,899,185 samples, 0.04%)</title><rect x="45.8799%" y="501" width="0.0409%" height="15" fill="rgb(222,124,15)" fg:x="2131005290" fg:w="1899185"/><text x="46.1299%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1,565,009 samples, 0.03%)</title><rect x="46.0095%" y="565" width="0.0337%" height="15" fill="rgb(231,179,28)" fg:x="2137022319" fg:w="1565009"/><text x="46.2595%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1,565,009 samples, 0.03%)</title><rect x="46.0095%" y="549" width="0.0337%" height="15" fill="rgb(226,93,45)" fg:x="2137022319" fg:w="1565009"/><text x="46.2595%" y="559.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1,565,009 samples, 0.03%)</title><rect x="46.0095%" y="533" width="0.0337%" height="15" fill="rgb(215,8,51)" fg:x="2137022319" fg:w="1565009"/><text x="46.2595%" y="543.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (1,565,009 samples, 0.03%)</title><rect x="46.0095%" y="517" width="0.0337%" height="15" fill="rgb(223,106,5)" fg:x="2137022319" fg:w="1565009"/><text x="46.2595%" y="527.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (1,565,009 samples, 0.03%)</title><rect x="46.0095%" y="501" width="0.0337%" height="15" fill="rgb(250,191,5)" fg:x="2137022319" fg:w="1565009"/><text x="46.2595%" y="511.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (1,565,009 samples, 0.03%)</title><rect x="46.0095%" y="485" width="0.0337%" height="15" fill="rgb(242,132,44)" fg:x="2137022319" fg:w="1565009"/><text x="46.2595%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,565,009 samples, 0.03%)</title><rect x="46.0095%" y="469" width="0.0337%" height="15" fill="rgb(251,152,29)" fg:x="2137022319" fg:w="1565009"/><text x="46.2595%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,565,009 samples, 0.03%)</title><rect x="46.0095%" y="453" width="0.0337%" height="15" fill="rgb(218,179,5)" fg:x="2137022319" fg:w="1565009"/><text x="46.2595%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (1,786,688 samples, 0.04%)</title><rect x="46.0432%" y="565" width="0.0385%" height="15" fill="rgb(227,67,19)" fg:x="2138587328" fg:w="1786688"/><text x="46.2932%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::time::ShardedWheel&gt;&gt; (1,786,688 samples, 0.04%)</title><rect x="46.0432%" y="549" width="0.0385%" height="15" fill="rgb(233,119,31)" fg:x="2138587328" fg:w="1786688"/><text x="46.2932%" y="559.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1,786,688 samples, 0.04%)</title><rect x="46.0432%" y="533" width="0.0385%" height="15" fill="rgb(241,120,22)" fg:x="2138587328" fg:w="1786688"/><text x="46.2932%" y="543.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1,786,688 samples, 0.04%)</title><rect x="46.0432%" y="517" width="0.0385%" height="15" fill="rgb(224,102,30)" fg:x="2138587328" fg:w="1786688"/><text x="46.2932%" y="527.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::read (1,222,883 samples, 0.03%)</title><rect x="46.0816%" y="565" width="0.0263%" height="15" fill="rgb(210,164,37)" fg:x="2140374016" fg:w="1222883"/><text x="46.3316%" y="575.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1,222,883 samples, 0.03%)</title><rect x="46.0816%" y="549" width="0.0263%" height="15" fill="rgb(226,191,16)" fg:x="2140374016" fg:w="1222883"/><text x="46.3316%" y="559.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1,222,883 samples, 0.03%)</title><rect x="46.0816%" y="533" width="0.0263%" height="15" fill="rgb(214,40,45)" fg:x="2140374016" fg:w="1222883"/><text x="46.3316%" y="543.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel (4,818,962 samples, 0.10%)</title><rect x="46.1079%" y="565" width="0.1038%" height="15" fill="rgb(244,29,26)" fg:x="2141596899" fg:w="4818962"/><text x="46.3579%" y="575.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (3,294,525 samples, 0.07%)</title><rect x="46.1408%" y="549" width="0.0709%" height="15" fill="rgb(216,16,5)" fg:x="2143121336" fg:w="3294525"/><text x="46.3908%" y="559.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3,294,525 samples, 0.07%)</title><rect x="46.1408%" y="533" width="0.0709%" height="15" fill="rgb(249,76,35)" fg:x="2143121336" fg:w="3294525"/><text x="46.3908%" y="543.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3,294,525 samples, 0.07%)</title><rect x="46.1408%" y="517" width="0.0709%" height="15" fill="rgb(207,11,44)" fg:x="2143121336" fg:w="3294525"/><text x="46.3908%" y="527.50"></text></g><g><title>tokio::runtime::time::entry::TimerShared::shard_id (1,241,198 samples, 0.03%)</title><rect x="46.2117%" y="565" width="0.0267%" height="15" fill="rgb(228,190,49)" fg:x="2146415861" fg:w="1241198"/><text x="46.4617%" y="575.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_for (2,961,418 samples, 0.06%)</title><rect x="46.2384%" y="533" width="0.0638%" height="15" fill="rgb(214,173,12)" fg:x="2147657059" fg:w="2961418"/><text x="46.4884%" y="543.50"></text></g><g><title>&lt;tokio::runtime::time::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (16,043,856 samples, 0.35%)</title><rect x="45.9822%" y="613" width="0.3454%" height="15" fill="rgb(218,26,35)" fg:x="2135758310" fg:w="16043856"/><text x="46.2322%" y="623.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::cancel (16,043,856 samples, 0.35%)</title><rect x="45.9822%" y="597" width="0.3454%" height="15" fill="rgb(220,200,19)" fg:x="2135758310" fg:w="16043856"/><text x="46.2322%" y="607.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::clear_entry (14,779,847 samples, 0.32%)</title><rect x="46.0095%" y="581" width="0.3182%" height="15" fill="rgb(239,95,49)" fg:x="2137022319" fg:w="14779847"/><text x="46.2595%" y="591.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::remove (4,145,107 samples, 0.09%)</title><rect x="46.2384%" y="565" width="0.0892%" height="15" fill="rgb(235,85,53)" fg:x="2147657059" fg:w="4145107"/><text x="46.4884%" y="575.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::remove_entry (4,145,107 samples, 0.09%)</title><rect x="46.2384%" y="549" width="0.0892%" height="15" fill="rgb(233,133,31)" fg:x="2147657059" fg:w="4145107"/><text x="46.4884%" y="559.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (1,183,689 samples, 0.03%)</title><rect x="46.3022%" y="533" width="0.0255%" height="15" fill="rgb(218,25,20)" fg:x="2150618477" fg:w="1183689"/><text x="46.5522%" y="543.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::set_prev (1,183,689 samples, 0.03%)</title><rect x="46.3022%" y="517" width="0.0255%" height="15" fill="rgb(252,210,38)" fg:x="2150618477" fg:w="1183689"/><text x="46.5522%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1,183,689 samples, 0.03%)</title><rect x="46.3022%" y="501" width="0.0255%" height="15" fill="rgb(242,134,21)" fg:x="2150618477" fg:w="1183689"/><text x="46.5522%" y="511.50"></text></g><g><title>core::ptr::write (1,183,689 samples, 0.03%)</title><rect x="46.3022%" y="485" width="0.0255%" height="15" fill="rgb(213,28,48)" fg:x="2150618477" fg:w="1183689"/><text x="46.5522%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::pool::connection::Connection::read::{{closure}}&gt; (18,768,718 samples, 0.40%)</title><rect x="45.9507%" y="661" width="0.4041%" height="15" fill="rgb(250,196,2)" fg:x="2134291529" fg:w="18768718"/><text x="46.2007%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::sleep::Sleep&gt; (17,301,937 samples, 0.37%)</title><rect x="45.9822%" y="645" width="0.3725%" height="15" fill="rgb(227,5,17)" fg:x="2135758310" fg:w="17301937"/><text x="46.2322%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::time::entry::TimerEntry&gt; (17,301,937 samples, 0.37%)</title><rect x="45.9822%" y="629" width="0.3725%" height="15" fill="rgb(221,226,24)" fg:x="2135758310" fg:w="17301937"/><text x="46.2322%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::scheduler::Handle&gt; (1,258,081 samples, 0.03%)</title><rect x="46.3277%" y="613" width="0.0271%" height="15" fill="rgb(211,5,48)" fg:x="2151802166" fg:w="1258081"/><text x="46.5777%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt; (1,258,081 samples, 0.03%)</title><rect x="46.3277%" y="597" width="0.0271%" height="15" fill="rgb(219,150,6)" fg:x="2151802166" fg:w="1258081"/><text x="46.5777%" y="607.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,258,081 samples, 0.03%)</title><rect x="46.3277%" y="581" width="0.0271%" height="15" fill="rgb(251,46,16)" fg:x="2151802166" fg:w="1258081"/><text x="46.5777%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1,472,339 samples, 0.03%)</title><rect x="46.3974%" y="581" width="0.0317%" height="15" fill="rgb(220,204,40)" fg:x="2155040890" fg:w="1472339"/><text x="46.6474%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (3,015,076 samples, 0.06%)</title><rect x="46.4291%" y="581" width="0.0649%" height="15" fill="rgb(211,85,2)" fg:x="2156513229" fg:w="3015076"/><text x="46.6791%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::time::ShardedWheel&gt;&gt; (3,015,076 samples, 0.06%)</title><rect x="46.4291%" y="565" width="0.0649%" height="15" fill="rgb(229,17,7)" fg:x="2156513229" fg:w="3015076"/><text x="46.6791%" y="575.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (3,015,076 samples, 0.06%)</title><rect x="46.4291%" y="549" width="0.0649%" height="15" fill="rgb(239,72,28)" fg:x="2156513229" fg:w="3015076"/><text x="46.6791%" y="559.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (3,015,076 samples, 0.06%)</title><rect x="46.4291%" y="533" width="0.0649%" height="15" fill="rgb(230,47,54)" fg:x="2156513229" fg:w="3015076"/><text x="46.6791%" y="543.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_for (1,790,119 samples, 0.04%)</title><rect x="46.5242%" y="549" width="0.0385%" height="15" fill="rgb(214,50,8)" fg:x="2160930090" fg:w="1790119"/><text x="46.7742%" y="559.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (5,680,968 samples, 0.12%)</title><rect x="46.5627%" y="549" width="0.1223%" height="15" fill="rgb(216,198,43)" fg:x="2162720209" fg:w="5680968"/><text x="46.8127%" y="559.50"></text></g><g><title>&lt;tokio::runtime::time::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (19,385,710 samples, 0.42%)</title><rect x="46.3547%" y="629" width="0.4174%" height="15" fill="rgb(234,20,35)" fg:x="2153060247" fg:w="19385710"/><text x="46.6047%" y="639.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::cancel (18,222,868 samples, 0.39%)</title><rect x="46.3798%" y="613" width="0.3923%" height="15" fill="rgb(254,45,19)" fg:x="2154223089" fg:w="18222868"/><text x="46.6298%" y="623.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::clear_entry (18,222,867 samples, 0.39%)</title><rect x="46.3798%" y="597" width="0.3923%" height="15" fill="rgb(219,14,44)" fg:x="2154223090" fg:w="18222867"/><text x="46.6298%" y="607.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::remove (12,917,652 samples, 0.28%)</title><rect x="46.4940%" y="581" width="0.2781%" height="15" fill="rgb(217,220,26)" fg:x="2159528305" fg:w="12917652"/><text x="46.7440%" y="591.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::remove_entry (12,917,652 samples, 0.28%)</title><rect x="46.4940%" y="565" width="0.2781%" height="15" fill="rgb(213,158,28)" fg:x="2159528305" fg:w="12917652"/><text x="46.7440%" y="575.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (4,044,780 samples, 0.09%)</title><rect x="46.6850%" y="549" width="0.0871%" height="15" fill="rgb(252,51,52)" fg:x="2168401177" fg:w="4044780"/><text x="46.9350%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(tokio::sync::notify::Notified,tokio::time::timeout::Timeout&lt;pgdog::backend::pool::connection::Connection::read::{{closure}}&gt;,pgdog::frontend::client::Client::buffer::{{closure}})&gt; (71,212,927 samples, 1.53%)</title><rect x="45.2971%" y="693" width="1.5332%" height="15" fill="rgb(246,89,16)" fg:x="2103933742" fg:w="71212927"/><text x="45.5471%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::timeout::Timeout&lt;pgdog::backend::pool::connection::Connection::read::{{closure}}&gt;&gt; (42,242,194 samples, 0.91%)</title><rect x="45.9208%" y="677" width="0.9095%" height="15" fill="rgb(216,158,49)" fg:x="2132904475" fg:w="42242194"/><text x="46.1708%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::sleep::Sleep&gt; (22,086,422 samples, 0.48%)</title><rect x="46.3547%" y="661" width="0.4755%" height="15" fill="rgb(236,107,19)" fg:x="2153060247" fg:w="22086422"/><text x="46.6047%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::time::entry::TimerEntry&gt; (22,086,422 samples, 0.48%)</title><rect x="46.3547%" y="645" width="0.4755%" height="15" fill="rgb(228,185,30)" fg:x="2153060247" fg:w="22086422"/><text x="46.6047%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::scheduler::Handle&gt; (2,700,712 samples, 0.06%)</title><rect x="46.7721%" y="629" width="0.0581%" height="15" fill="rgb(246,134,8)" fg:x="2172445957" fg:w="2700712"/><text x="47.0221%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt; (2,700,712 samples, 0.06%)</title><rect x="46.7721%" y="613" width="0.0581%" height="15" fill="rgb(214,143,50)" fg:x="2172445957" fg:w="2700712"/><text x="47.0221%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,700,712 samples, 0.06%)</title><rect x="46.7721%" y="597" width="0.0581%" height="15" fill="rgb(228,75,8)" fg:x="2172445957" fg:w="2700712"/><text x="47.0221%" y="607.50"></text></g><g><title>_rjem_je_sdallocx_default (1,340,970 samples, 0.03%)</title><rect x="46.9130%" y="661" width="0.0289%" height="15" fill="rgb(207,175,4)" fg:x="2178987665" fg:w="1340970"/><text x="47.1630%" y="671.50"></text></g><g><title>isfree (1,340,970 samples, 0.03%)</title><rect x="46.9130%" y="645" width="0.0289%" height="15" fill="rgb(205,108,24)" fg:x="2178987665" fg:w="1340970"/><text x="47.1630%" y="655.50"></text></g><g><title>thread_dalloc_event (1,340,970 samples, 0.03%)</title><rect x="46.9130%" y="629" width="0.0289%" height="15" fill="rgb(244,120,49)" fg:x="2178987665" fg:w="1340970"/><text x="47.1630%" y="639.50"></text></g><g><title>te_event_advance (1,340,970 samples, 0.03%)</title><rect x="46.9130%" y="613" width="0.0289%" height="15" fill="rgb(223,47,38)" fg:x="2178987665" fg:w="1340970"/><text x="47.1630%" y="623.50"></text></g><g><title>_rjem_je_te_event_trigger (1,340,970 samples, 0.03%)</title><rect x="46.9130%" y="597" width="0.0289%" height="15" fill="rgb(229,179,11)" fg:x="2178987665" fg:w="1340970"/><text x="47.1630%" y="607.50"></text></g><g><title>_rjem_sdallocx (3,285,479 samples, 0.07%)</title><rect x="46.9418%" y="661" width="0.0707%" height="15" fill="rgb(231,122,1)" fg:x="2180328635" fg:w="3285479"/><text x="47.1918%" y="671.50"></text></g><g><title>free_fastpath (3,285,478 samples, 0.07%)</title><rect x="46.9418%" y="645" width="0.0707%" height="15" fill="rgb(245,119,9)" fg:x="2180328636" fg:w="3285478"/><text x="47.1918%" y="655.50"></text></g><g><title>cache_bin_dalloc_easy (3,285,478 samples, 0.07%)</title><rect x="46.9418%" y="629" width="0.0707%" height="15" fill="rgb(241,163,25)" fg:x="2180328636" fg:w="3285478"/><text x="47.1918%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::client::Client::buffer::{{closure}}&gt; (10,479,054 samples, 0.23%)</title><rect x="46.8303%" y="693" width="0.2256%" height="15" fill="rgb(217,214,3)" fg:x="2175146669" fg:w="10479054"/><text x="47.0803%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::buffer::Buffer&gt; (8,498,067 samples, 0.18%)</title><rect x="46.8729%" y="677" width="0.1830%" height="15" fill="rgb(240,86,28)" fg:x="2177127656" fg:w="8498067"/><text x="47.1229%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage&gt;&gt; (2,011,609 samples, 0.04%)</title><rect x="47.0126%" y="661" width="0.0433%" height="15" fill="rgb(215,47,9)" fg:x="2183614114" fg:w="2011609"/><text x="47.2626%" y="671.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::is_empty (9,886,980 samples, 0.21%)</title><rect x="47.0559%" y="693" width="0.2129%" height="15" fill="rgb(252,25,45)" fg:x="2185625723" fg:w="9886980"/><text x="47.3059%" y="703.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::len (9,886,980 samples, 0.21%)</title><rect x="47.0559%" y="677" width="0.2129%" height="15" fill="rgb(251,164,9)" fg:x="2185625723" fg:w="9886980"/><text x="47.3059%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (9,886,980 samples, 0.21%)</title><rect x="47.0559%" y="661" width="0.2129%" height="15" fill="rgb(233,194,0)" fg:x="2185625723" fg:w="9886980"/><text x="47.3059%" y="671.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (9,886,980 samples, 0.21%)</title><rect x="47.0559%" y="645" width="0.2129%" height="15" fill="rgb(249,111,24)" fg:x="2185625723" fg:w="9886980"/><text x="47.3059%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9,886,980 samples, 0.21%)</title><rect x="47.0559%" y="629" width="0.2129%" height="15" fill="rgb(250,223,3)" fg:x="2185625723" fg:w="9886980"/><text x="47.3059%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9,886,980 samples, 0.21%)</title><rect x="47.0559%" y="613" width="0.2129%" height="15" fill="rgb(236,178,37)" fg:x="2185625723" fg:w="9886980"/><text x="47.3059%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (5,174,569 samples, 0.11%)</title><rect x="47.1573%" y="597" width="0.1114%" height="15" fill="rgb(241,158,50)" fg:x="2190338134" fg:w="5174569"/><text x="47.4073%" y="607.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::len::_{{closure}} (5,174,569 samples, 0.11%)</title><rect x="47.1573%" y="581" width="0.1114%" height="15" fill="rgb(213,121,41)" fg:x="2190338134" fg:w="5174569"/><text x="47.4073%" y="591.50"></text></g><g><title>pgdog::backend::protocol::protocol_message::ProtocolMessage::len (5,174,569 samples, 0.11%)</title><rect x="47.1573%" y="565" width="0.1114%" height="15" fill="rgb(240,92,3)" fg:x="2190338134" fg:w="5174569"/><text x="47.4073%" y="575.50"></text></g><g><title>pgdog::frontend::client::Client::client_messages::_{{closure}} (3,849,126 samples, 0.08%)</title><rect x="47.2687%" y="693" width="0.0829%" height="15" fill="rgb(205,123,3)" fg:x="2195512703" fg:w="3849126"/><text x="47.5187%" y="703.50"></text></g><g><title>&lt;pgdog::net::messages::Message as pgdog::net::messages::Protocol&gt;::code (7,416,376 samples, 0.16%)</title><rect x="48.1708%" y="677" width="0.1597%" height="15" fill="rgb(205,97,47)" fg:x="2237411227" fg:w="7416376"/><text x="48.4208%" y="687.50"></text></g><g><title>&lt;tracing_core::metadata::Level as core::cmp::PartialOrd&lt;tracing_core::metadata::LevelFilter&gt;&gt;::le (1,691,015 samples, 0.04%)</title><rect x="48.3305%" y="677" width="0.0364%" height="15" fill="rgb(247,152,14)" fg:x="2244827603" fg:w="1691015"/><text x="48.5805%" y="687.50"></text></g><g><title>[libc.so.6] (3,267,656 samples, 0.07%)</title><rect x="48.3669%" y="645" width="0.0704%" height="15" fill="rgb(248,195,53)" fg:x="2246518618" fg:w="3267656"/><text x="48.6169%" y="655.50"></text></g><g><title>[libc.so.6] (7,454,984 samples, 0.16%)</title><rect x="48.4648%" y="629" width="0.1605%" height="15" fill="rgb(226,201,16)" fg:x="2251068214" fg:w="7454984"/><text x="48.7148%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,std::collections::hash::map::HashMap&lt;pgdog::net::messages::backend_key::BackendKeyData,pgdog::frontend::connected_client::ConnectedClient,core::hash::BuildHasherDefault&lt;fnv::FnvHasher&gt;&gt;&gt;&gt; (3,404,785 samples, 0.07%)</title><rect x="48.6253%" y="629" width="0.0733%" height="15" fill="rgb(205,98,0)" fg:x="2258523198" fg:w="3404785"/><text x="48.8753%" y="639.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (3,404,785 samples, 0.07%)</title><rect x="48.6253%" y="613" width="0.0733%" height="15" fill="rgb(214,191,48)" fg:x="2258523198" fg:w="3404785"/><text x="48.8753%" y="623.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (3,404,785 samples, 0.07%)</title><rect x="48.6253%" y="597" width="0.0733%" height="15" fill="rgb(237,112,39)" fg:x="2258523198" fg:w="3404785"/><text x="48.8753%" y="607.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (8,819,046 samples, 0.19%)</title><rect x="48.6986%" y="629" width="0.1899%" height="15" fill="rgb(247,203,27)" fg:x="2261927983" fg:w="8819046"/><text x="48.9486%" y="639.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (8,819,046 samples, 0.19%)</title><rect x="48.6986%" y="613" width="0.1899%" height="15" fill="rgb(235,124,28)" fg:x="2261927983" fg:w="8819046"/><text x="48.9486%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1,811,096 samples, 0.04%)</title><rect x="48.8495%" y="597" width="0.0390%" height="15" fill="rgb(208,207,46)" fg:x="2268935933" fg:w="1811096"/><text x="49.0995%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1,811,096 samples, 0.04%)</title><rect x="48.8495%" y="581" width="0.0390%" height="15" fill="rgb(234,176,4)" fg:x="2268935933" fg:w="1811096"/><text x="49.0995%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (2,342,761 samples, 0.05%)</title><rect x="48.8885%" y="581" width="0.0504%" height="15" fill="rgb(230,133,28)" fg:x="2270747029" fg:w="2342761"/><text x="49.1385%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,342,761 samples, 0.05%)</title><rect x="48.8885%" y="565" width="0.0504%" height="15" fill="rgb(211,137,40)" fg:x="2270747029" fg:w="2342761"/><text x="49.1385%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,342,761 samples, 0.05%)</title><rect x="48.8885%" y="549" width="0.0504%" height="15" fill="rgb(254,35,13)" fg:x="2270747029" fg:w="2342761"/><text x="49.1385%" y="559.50"></text></g><g><title>&lt;pgdog::net::messages::backend_key::BackendKeyData as core::hash::Hash&gt;::hash (2,342,761 samples, 0.05%)</title><rect x="48.8885%" y="533" width="0.0504%" height="15" fill="rgb(225,49,51)" fg:x="2270747029" fg:w="2342761"/><text x="49.1385%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (2,342,761 samples, 0.05%)</title><rect x="48.8885%" y="517" width="0.0504%" height="15" fill="rgb(251,10,15)" fg:x="2270747029" fg:w="2342761"/><text x="49.1385%" y="527.50"></text></g><g><title>core::hash::Hasher::write_i32 (2,342,761 samples, 0.05%)</title><rect x="48.8885%" y="501" width="0.0504%" height="15" fill="rgb(228,207,15)" fg:x="2270747029" fg:w="2342761"/><text x="49.1385%" y="511.50"></text></g><g><title>core::hash::Hasher::write_u32 (2,342,761 samples, 0.05%)</title><rect x="48.8885%" y="485" width="0.0504%" height="15" fill="rgb(241,99,19)" fg:x="2270747029" fg:w="2342761"/><text x="49.1385%" y="495.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (2,342,761 samples, 0.05%)</title><rect x="48.8885%" y="469" width="0.0504%" height="15" fill="rgb(207,104,49)" fg:x="2270747029" fg:w="2342761"/><text x="49.1385%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (1,111,404 samples, 0.02%)</title><rect x="48.9150%" y="453" width="0.0239%" height="15" fill="rgb(234,99,18)" fg:x="2271978386" fg:w="1111404"/><text x="49.1650%" y="463.50"></text></g><g><title>core::intrinsics::likely (5,499,835 samples, 0.12%)</title><rect x="48.9390%" y="533" width="0.1184%" height="15" fill="rgb(213,191,49)" fg:x="2273089790" fg:w="5499835"/><text x="49.1890%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::client::inner::InnerBorrow&gt; (36,996,661 samples, 0.80%)</title><rect x="48.3669%" y="677" width="0.7965%" height="15" fill="rgb(210,226,19)" fg:x="2246518618" fg:w="36996661"/><text x="48.6169%" y="687.50"></text></g><g><title>&lt;pgdog::frontend::client::inner::InnerBorrow as core::ops::drop::Drop&gt;::drop (36,996,661 samples, 0.80%)</title><rect x="48.3669%" y="661" width="0.7965%" height="15" fill="rgb(229,97,18)" fg:x="2246518618" fg:w="36996661"/><text x="48.6169%" y="671.50"></text></g><g><title>pgdog::frontend::comms::Comms::stats (33,729,005 samples, 0.73%)</title><rect x="48.4372%" y="645" width="0.7262%" height="15" fill="rgb(211,167,15)" fg:x="2249786274" fg:w="33729005"/><text x="48.6872%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (12,768,250 samples, 0.27%)</title><rect x="48.8885%" y="629" width="0.2749%" height="15" fill="rgb(210,169,34)" fg:x="2270747029" fg:w="12768250"/><text x="49.1385%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (12,768,250 samples, 0.27%)</title><rect x="48.8885%" y="613" width="0.2749%" height="15" fill="rgb(241,121,31)" fg:x="2270747029" fg:w="12768250"/><text x="49.1385%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (12,768,250 samples, 0.27%)</title><rect x="48.8885%" y="597" width="0.2749%" height="15" fill="rgb(232,40,11)" fg:x="2270747029" fg:w="12768250"/><text x="49.1385%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (10,425,489 samples, 0.22%)</title><rect x="48.9390%" y="581" width="0.2245%" height="15" fill="rgb(205,86,26)" fg:x="2273089790" fg:w="10425489"/><text x="49.1890%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10,425,489 samples, 0.22%)</title><rect x="48.9390%" y="565" width="0.2245%" height="15" fill="rgb(231,126,28)" fg:x="2273089790" fg:w="10425489"/><text x="49.1890%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (10,425,489 samples, 0.22%)</title><rect x="48.9390%" y="549" width="0.2245%" height="15" fill="rgb(219,221,18)" fg:x="2273089790" fg:w="10425489"/><text x="49.1890%" y="559.50"></text></g><g><title>hashbrown::control::tag::Tag::full (4,925,555 samples, 0.11%)</title><rect x="49.0574%" y="533" width="0.1060%" height="15" fill="rgb(211,40,0)" fg:x="2278589724" fg:w="4925555"/><text x="49.3074%" y="543.50"></text></g><g><title>_rjem_je_sdallocx_default (1,487,296 samples, 0.03%)</title><rect x="49.2552%" y="629" width="0.0320%" height="15" fill="rgb(239,85,43)" fg:x="2287779093" fg:w="1487296"/><text x="49.5052%" y="639.50"></text></g><g><title>isfree (1,487,296 samples, 0.03%)</title><rect x="49.2552%" y="613" width="0.0320%" height="15" fill="rgb(231,55,21)" fg:x="2287779093" fg:w="1487296"/><text x="49.5052%" y="623.50"></text></g><g><title>thread_dalloc_event (1,487,296 samples, 0.03%)</title><rect x="49.2552%" y="597" width="0.0320%" height="15" fill="rgb(225,184,43)" fg:x="2287779093" fg:w="1487296"/><text x="49.5052%" y="607.50"></text></g><g><title>te_event_advance (1,487,296 samples, 0.03%)</title><rect x="49.2552%" y="581" width="0.0320%" height="15" fill="rgb(251,158,41)" fg:x="2287779093" fg:w="1487296"/><text x="49.5052%" y="591.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (1,487,296 samples, 0.03%)</title><rect x="49.2552%" y="565" width="0.0320%" height="15" fill="rgb(234,159,37)" fg:x="2287779093" fg:w="1487296"/><text x="49.5052%" y="575.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (1,487,296 samples, 0.03%)</title><rect x="49.2552%" y="549" width="0.0320%" height="15" fill="rgb(216,204,22)" fg:x="2287779093" fg:w="1487296"/><text x="49.5052%" y="559.50"></text></g><g><title>_rjem_sdallocx (1,174,884 samples, 0.03%)</title><rect x="49.2872%" y="629" width="0.0253%" height="15" fill="rgb(214,17,3)" fg:x="2289266389" fg:w="1174884"/><text x="49.5372%" y="639.50"></text></g><g><title>free_fastpath (1,174,884 samples, 0.03%)</title><rect x="49.2872%" y="613" width="0.0253%" height="15" fill="rgb(212,111,17)" fg:x="2289266389" fg:w="1174884"/><text x="49.5372%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,006,143 samples, 0.02%)</title><rect x="49.4319%" y="533" width="0.0217%" height="15" fill="rgb(221,157,24)" fg:x="2295987485" fg:w="1006143"/><text x="49.6819%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,006,143 samples, 0.02%)</title><rect x="49.4319%" y="517" width="0.0217%" height="15" fill="rgb(252,16,13)" fg:x="2295987485" fg:w="1006143"/><text x="49.6819%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (1,006,143 samples, 0.02%)</title><rect x="49.4319%" y="501" width="0.0217%" height="15" fill="rgb(221,62,2)" fg:x="2295987485" fg:w="1006143"/><text x="49.6819%" y="511.50"></text></g><g><title>__rust_dealloc (1,006,143 samples, 0.02%)</title><rect x="49.4319%" y="485" width="0.0217%" height="15" fill="rgb(247,87,22)" fg:x="2295987485" fg:w="1006143"/><text x="49.6819%" y="495.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1,006,143 samples, 0.02%)</title><rect x="49.4319%" y="469" width="0.0217%" height="15" fill="rgb(215,73,9)" fg:x="2295987485" fg:w="1006143"/><text x="49.6819%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::messages::Message&gt; (16,572,034 samples, 0.36%)</title><rect x="49.1634%" y="677" width="0.3568%" height="15" fill="rgb(207,175,33)" fg:x="2283515279" fg:w="16572034"/><text x="49.4134%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (16,572,034 samples, 0.36%)</title><rect x="49.1634%" y="661" width="0.3568%" height="15" fill="rgb(243,129,54)" fg:x="2283515279" fg:w="16572034"/><text x="49.4134%" y="671.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (16,572,034 samples, 0.36%)</title><rect x="49.1634%" y="645" width="0.3568%" height="15" fill="rgb(227,119,45)" fg:x="2283515279" fg:w="16572034"/><text x="49.4134%" y="655.50"></text></g><g><title>bytes::bytes::promotable_even_drop (9,646,040 samples, 0.21%)</title><rect x="49.3125%" y="629" width="0.2077%" height="15" fill="rgb(205,109,36)" fg:x="2290441273" fg:w="9646040"/><text x="49.5625%" y="639.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (9,646,040 samples, 0.21%)</title><rect x="49.3125%" y="613" width="0.2077%" height="15" fill="rgb(205,6,39)" fg:x="2290441273" fg:w="9646040"/><text x="49.5625%" y="623.50"></text></g><g><title>bytes::bytes::promotable_even_drop::_{{closure}} (9,646,040 samples, 0.21%)</title><rect x="49.3125%" y="597" width="0.2077%" height="15" fill="rgb(221,32,16)" fg:x="2290441273" fg:w="9646040"/><text x="49.5625%" y="607.50"></text></g><g><title>bytes::bytes::release_shared (9,646,040 samples, 0.21%)</title><rect x="49.3125%" y="581" width="0.2077%" height="15" fill="rgb(228,144,50)" fg:x="2290441273" fg:w="9646040"/><text x="49.5625%" y="591.50"></text></g><g><title>core::mem::drop (6,708,781 samples, 0.14%)</title><rect x="49.3758%" y="565" width="0.1444%" height="15" fill="rgb(229,201,53)" fg:x="2293378532" fg:w="6708781"/><text x="49.6258%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (6,708,781 samples, 0.14%)</title><rect x="49.3758%" y="549" width="0.1444%" height="15" fill="rgb(249,153,27)" fg:x="2293378532" fg:w="6708781"/><text x="49.6258%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (3,093,685 samples, 0.07%)</title><rect x="49.4536%" y="533" width="0.0666%" height="15" fill="rgb(227,106,25)" fg:x="2296993628" fg:w="3093685"/><text x="49.7036%" y="543.50"></text></g><g><title>&lt;bytes::bytes::Shared as core::ops::drop::Drop&gt;::drop (3,093,685 samples, 0.07%)</title><rect x="49.4536%" y="517" width="0.0666%" height="15" fill="rgb(230,65,29)" fg:x="2296993628" fg:w="3093685"/><text x="49.7036%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (3,093,685 samples, 0.07%)</title><rect x="49.4536%" y="501" width="0.0666%" height="15" fill="rgb(221,57,46)" fg:x="2296993628" fg:w="3093685"/><text x="49.7036%" y="511.50"></text></g><g><title>__rust_dealloc (3,093,685 samples, 0.07%)</title><rect x="49.4536%" y="485" width="0.0666%" height="15" fill="rgb(229,161,17)" fg:x="2296993628" fg:w="3093685"/><text x="49.7036%" y="495.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (3,093,685 samples, 0.07%)</title><rect x="49.4536%" y="469" width="0.0666%" height="15" fill="rgb(222,213,11)" fg:x="2296993628" fg:w="3093685"/><text x="49.7036%" y="479.50"></text></g><g><title>_rjem_sdallocx (3,093,685 samples, 0.07%)</title><rect x="49.4536%" y="453" width="0.0666%" height="15" fill="rgb(235,35,13)" fg:x="2296993628" fg:w="3093685"/><text x="49.7036%" y="463.50"></text></g><g><title>free_fastpath (3,093,685 samples, 0.07%)</title><rect x="49.4536%" y="437" width="0.0666%" height="15" fill="rgb(233,158,34)" fg:x="2296993628" fg:w="3093685"/><text x="49.7036%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::parameter::Parameters&gt; (3,481,630 samples, 0.07%)</title><rect x="49.5202%" y="677" width="0.0750%" height="15" fill="rgb(215,151,48)" fg:x="2300087313" fg:w="3481630"/><text x="49.7702%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,alloc::string::String&gt;&gt; (3,481,630 samples, 0.07%)</title><rect x="49.5202%" y="661" width="0.0750%" height="15" fill="rgb(229,84,14)" fg:x="2300087313" fg:w="3481630"/><text x="49.7702%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,481,630 samples, 0.07%)</title><rect x="49.5202%" y="645" width="0.0750%" height="15" fill="rgb(229,68,14)" fg:x="2300087313" fg:w="3481630"/><text x="49.7702%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (3,481,630 samples, 0.07%)</title><rect x="49.5202%" y="629" width="0.0750%" height="15" fill="rgb(243,106,26)" fg:x="2300087313" fg:w="3481630"/><text x="49.7702%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,481,630 samples, 0.07%)</title><rect x="49.5202%" y="613" width="0.0750%" height="15" fill="rgb(206,45,38)" fg:x="2300087313" fg:w="3481630"/><text x="49.7702%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,481,630 samples, 0.07%)</title><rect x="49.5202%" y="597" width="0.0750%" height="15" fill="rgb(226,6,15)" fg:x="2300087313" fg:w="3481630"/><text x="49.7702%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (3,481,630 samples, 0.07%)</title><rect x="49.5202%" y="581" width="0.0750%" height="15" fill="rgb(232,22,54)" fg:x="2300087313" fg:w="3481630"/><text x="49.7702%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,481,630 samples, 0.07%)</title><rect x="49.5202%" y="565" width="0.0750%" height="15" fill="rgb(229,222,32)" fg:x="2300087313" fg:w="3481630"/><text x="49.7702%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (1,478,222 samples, 0.03%)</title><rect x="49.5633%" y="549" width="0.0318%" height="15" fill="rgb(228,62,29)" fg:x="2302090721" fg:w="1478222"/><text x="49.8133%" y="559.50"></text></g><g><title>__rust_dealloc (1,478,222 samples, 0.03%)</title><rect x="49.5633%" y="533" width="0.0318%" height="15" fill="rgb(251,103,34)" fg:x="2302090721" fg:w="1478222"/><text x="49.8133%" y="543.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1,478,222 samples, 0.03%)</title><rect x="49.5633%" y="517" width="0.0318%" height="15" fill="rgb(233,12,30)" fg:x="2302090721" fg:w="1478222"/><text x="49.8133%" y="527.50"></text></g><g><title>_rjem_sdallocx (1,478,222 samples, 0.03%)</title><rect x="49.5633%" y="501" width="0.0318%" height="15" fill="rgb(238,52,0)" fg:x="2302090721" fg:w="1478222"/><text x="49.8133%" y="511.50"></text></g><g><title>free_fastpath (1,478,222 samples, 0.03%)</title><rect x="49.5633%" y="485" width="0.0318%" height="15" fill="rgb(223,98,5)" fg:x="2302090721" fg:w="1478222"/><text x="49.8133%" y="495.50"></text></g><g><title>cache_bin_dalloc_easy (1,478,211 samples, 0.03%)</title><rect x="49.5633%" y="469" width="0.0318%" height="15" fill="rgb(228,75,37)" fg:x="2302090732" fg:w="1478211"/><text x="49.8133%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::stream::Stream::send&lt;pgdog::net::messages::Message&gt;::{{closure}}&gt; (1,821,655 samples, 0.04%)</title><rect x="49.5952%" y="677" width="0.0392%" height="15" fill="rgb(205,115,49)" fg:x="2303568943" fg:w="1821655"/><text x="49.8452%" y="687.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::done (7,555,395 samples, 0.16%)</title><rect x="49.6344%" y="677" width="0.1627%" height="15" fill="rgb(250,154,43)" fg:x="2305390598" fg:w="7555395"/><text x="49.8844%" y="687.50"></text></g><g><title>pgdog::backend::pool::connection::binding::Binding::done (7,555,395 samples, 0.16%)</title><rect x="49.6344%" y="661" width="0.1627%" height="15" fill="rgb(226,43,29)" fg:x="2305390598" fg:w="7555395"/><text x="49.8844%" y="671.50"></text></g><g><title>core::mem::drop (1,216,035 samples, 0.03%)</title><rect x="49.8180%" y="629" width="0.0262%" height="15" fill="rgb(249,228,39)" fg:x="2313921188" fg:w="1216035"/><text x="50.0680%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;pgdog::backend::pool::guard::Guard&gt;&gt; (1,216,035 samples, 0.03%)</title><rect x="49.8180%" y="613" width="0.0262%" height="15" fill="rgb(216,79,43)" fg:x="2313921188" fg:w="1216035"/><text x="50.0680%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::pool::guard::Guard&gt; (1,216,034 samples, 0.03%)</title><rect x="49.8180%" y="597" width="0.0262%" height="15" fill="rgb(228,95,12)" fg:x="2313921189" fg:w="1216034"/><text x="50.0680%" y="607.50"></text></g><g><title>pgdog::frontend::client::inner::Inner::disconnect (2,191,233 samples, 0.05%)</title><rect x="49.7970%" y="677" width="0.0472%" height="15" fill="rgb(249,221,15)" fg:x="2312945993" fg:w="2191233"/><text x="50.0470%" y="687.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::disconnect (2,191,233 samples, 0.05%)</title><rect x="49.7970%" y="661" width="0.0472%" height="15" fill="rgb(233,34,13)" fg:x="2312945993" fg:w="2191233"/><text x="50.0470%" y="671.50"></text></g><g><title>pgdog::backend::pool::connection::binding::Binding::disconnect (1,216,038 samples, 0.03%)</title><rect x="49.8180%" y="645" width="0.0262%" height="15" fill="rgb(214,103,39)" fg:x="2313921188" fg:w="1216038"/><text x="50.0680%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::router::parser::command::Command&gt; (5,776,600 samples, 0.12%)</title><rect x="49.8917%" y="629" width="0.1244%" height="15" fill="rgb(251,126,39)" fg:x="2317344742" fg:w="5776600"/><text x="50.1417%" y="639.50"></text></g><g><title>pgdog::frontend::client::inner::Inner::reset_router (12,015,287 samples, 0.26%)</title><rect x="49.8442%" y="677" width="0.2587%" height="15" fill="rgb(214,216,36)" fg:x="2315137226" fg:w="12015287"/><text x="50.0942%" y="687.50"></text></g><g><title>pgdog::frontend::router::Router::reset (12,015,287 samples, 0.26%)</title><rect x="49.8442%" y="661" width="0.2587%" height="15" fill="rgb(220,221,8)" fg:x="2315137226" fg:w="12015287"/><text x="50.0942%" y="671.50"></text></g><g><title>pgdog::frontend::router::parser::query::QueryParser::reset (12,015,287 samples, 0.26%)</title><rect x="49.8442%" y="645" width="0.2587%" height="15" fill="rgb(240,216,3)" fg:x="2315137226" fg:w="12015287"/><text x="50.0942%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::router::parser::route::Route&gt; (4,031,171 samples, 0.09%)</title><rect x="50.0161%" y="629" width="0.0868%" height="15" fill="rgb(232,218,17)" fg:x="2323121342" fg:w="4031171"/><text x="50.2661%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::router::parser::aggregate::Aggregate&gt; (897,938 samples, 0.02%)</title><rect x="50.0836%" y="613" width="0.0193%" height="15" fill="rgb(229,163,45)" fg:x="2326254575" fg:w="897938"/><text x="50.3336%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;pgdog::frontend::router::parser::aggregate::AggregateTarget&gt;&gt; (897,938 samples, 0.02%)</title><rect x="50.0836%" y="597" width="0.0193%" height="15" fill="rgb(231,110,42)" fg:x="2326254575" fg:w="897938"/><text x="50.3336%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;pgdog::frontend::router::parser::aggregate::AggregateTarget&gt;&gt; (897,938 samples, 0.02%)</title><rect x="50.0836%" y="581" width="0.0193%" height="15" fill="rgb(208,170,48)" fg:x="2326254575" fg:w="897938"/><text x="50.3336%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (897,938 samples, 0.02%)</title><rect x="50.0836%" y="565" width="0.0193%" height="15" fill="rgb(239,116,25)" fg:x="2326254575" fg:w="897938"/><text x="50.3336%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (897,938 samples, 0.02%)</title><rect x="50.0836%" y="549" width="0.0193%" height="15" fill="rgb(219,200,50)" fg:x="2326254575" fg:w="897938"/><text x="50.3336%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (897,938 samples, 0.02%)</title><rect x="50.0836%" y="533" width="0.0193%" height="15" fill="rgb(245,200,0)" fg:x="2326254575" fg:w="897938"/><text x="50.3336%" y="543.50"></text></g><g><title>pgdog::frontend::comms::Comms::offline (1,931,610 samples, 0.04%)</title><rect x="50.1029%" y="677" width="0.0416%" height="15" fill="rgb(245,119,33)" fg:x="2327152513" fg:w="1931610"/><text x="50.3529%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1,931,610 samples, 0.04%)</title><rect x="50.1029%" y="661" width="0.0416%" height="15" fill="rgb(231,125,12)" fg:x="2327152513" fg:w="1931610"/><text x="50.3529%" y="671.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::AddAssign&gt;::add_assign (1,471,223 samples, 0.03%)</title><rect x="50.1445%" y="661" width="0.0317%" height="15" fill="rgb(216,96,41)" fg:x="2329084123" fg:w="1471223"/><text x="50.3945%" y="671.50"></text></g><g><title>std::time::Instant::duration_since (1,466,023 samples, 0.03%)</title><rect x="50.1762%" y="661" width="0.0316%" height="15" fill="rgb(248,43,45)" fg:x="2330555346" fg:w="1466023"/><text x="50.4262%" y="671.50"></text></g><g><title>std::time::Instant::checked_duration_since (1,466,023 samples, 0.03%)</title><rect x="50.1762%" y="645" width="0.0316%" height="15" fill="rgb(217,222,7)" fg:x="2330555346" fg:w="1466023"/><text x="50.4262%" y="655.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (1,466,023 samples, 0.03%)</title><rect x="50.1762%" y="629" width="0.0316%" height="15" fill="rgb(233,28,6)" fg:x="2330555346" fg:w="1466023"/><text x="50.4262%" y="639.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (1,466,023 samples, 0.03%)</title><rect x="50.1762%" y="613" width="0.0316%" height="15" fill="rgb(231,218,15)" fg:x="2330555346" fg:w="1466023"/><text x="50.4262%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (1,466,023 samples, 0.03%)</title><rect x="50.1762%" y="597" width="0.0316%" height="15" fill="rgb(226,171,48)" fg:x="2330555346" fg:w="1466023"/><text x="50.4262%" y="607.50"></text></g><g><title>core::cmp::PartialOrd::ge (1,466,023 samples, 0.03%)</title><rect x="50.1762%" y="581" width="0.0316%" height="15" fill="rgb(235,201,9)" fg:x="2330555346" fg:w="1466023"/><text x="50.4262%" y="591.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (1,466,023 samples, 0.03%)</title><rect x="50.1762%" y="565" width="0.0316%" height="15" fill="rgb(217,80,15)" fg:x="2330555346" fg:w="1466023"/><text x="50.4262%" y="575.50"></text></g><g><title>&lt;core::num::niche_types::Nanoseconds as core::cmp::PartialOrd&gt;::partial_cmp (1,466,023 samples, 0.03%)</title><rect x="50.1762%" y="549" width="0.0316%" height="15" fill="rgb(219,152,8)" fg:x="2330555346" fg:w="1466023"/><text x="50.4262%" y="559.50"></text></g><g><title>&lt;core::num::niche_types::Nanoseconds as core::cmp::Ord&gt;::cmp (1,466,023 samples, 0.03%)</title><rect x="50.1762%" y="533" width="0.0316%" height="15" fill="rgb(243,107,38)" fg:x="2330555346" fg:w="1466023"/><text x="50.4262%" y="543.50"></text></g><g><title>pgdog::frontend::stats::Stats::query (10,510,677 samples, 0.23%)</title><rect x="50.1445%" y="677" width="0.2263%" height="15" fill="rgb(231,17,5)" fg:x="2329084123" fg:w="10510677"/><text x="50.3945%" y="687.50"></text></g><g><title>std::time::Instant::now (7,573,431 samples, 0.16%)</title><rect x="50.2077%" y="661" width="0.1631%" height="15" fill="rgb(209,25,54)" fg:x="2332021369" fg:w="7573431"/><text x="50.4577%" y="671.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (7,573,431 samples, 0.16%)</title><rect x="50.2077%" y="645" width="0.1631%" height="15" fill="rgb(219,0,2)" fg:x="2332021369" fg:w="7573431"/><text x="50.4577%" y="655.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (7,573,431 samples, 0.16%)</title><rect x="50.2077%" y="629" width="0.1631%" height="15" fill="rgb(246,9,5)" fg:x="2332021369" fg:w="7573431"/><text x="50.4577%" y="639.50"></text></g><g><title>clock_gettime (7,573,431 samples, 0.16%)</title><rect x="50.2077%" y="613" width="0.1631%" height="15" fill="rgb(226,159,4)" fg:x="2332021369" fg:w="7573431"/><text x="50.4577%" y="623.50"></text></g><g><title>__vdso_clock_gettime (7,573,431 samples, 0.16%)</title><rect x="50.2077%" y="597" width="0.1631%" height="15" fill="rgb(219,175,34)" fg:x="2332021369" fg:w="7573431"/><text x="50.4577%" y="607.50"></text></g><g><title>pgdog::frontend::stats::Stats::sent (1,534,003 samples, 0.03%)</title><rect x="50.3708%" y="677" width="0.0330%" height="15" fill="rgb(236,10,46)" fg:x="2339594800" fg:w="1534003"/><text x="50.6208%" y="687.50"></text></g><g><title>pgdog::frontend::stats::Stats::transaction (1,718,475 samples, 0.04%)</title><rect x="50.4038%" y="677" width="0.0370%" height="15" fill="rgb(240,211,16)" fg:x="2341128803" fg:w="1718475"/><text x="50.6538%" y="687.50"></text></g><g><title>std::time::Instant::elapsed (1,718,475 samples, 0.04%)</title><rect x="50.4038%" y="661" width="0.0370%" height="15" fill="rgb(205,3,43)" fg:x="2341128803" fg:w="1718475"/><text x="50.6538%" y="671.50"></text></g><g><title>std::time::Instant::now (1,718,475 samples, 0.04%)</title><rect x="50.4038%" y="645" width="0.0370%" height="15" fill="rgb(245,7,22)" fg:x="2341128803" fg:w="1718475"/><text x="50.6538%" y="655.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (1,718,475 samples, 0.04%)</title><rect x="50.4038%" y="629" width="0.0370%" height="15" fill="rgb(239,132,32)" fg:x="2341128803" fg:w="1718475"/><text x="50.6538%" y="639.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1,718,475 samples, 0.04%)</title><rect x="50.4038%" y="613" width="0.0370%" height="15" fill="rgb(228,202,34)" fg:x="2341128803" fg:w="1718475"/><text x="50.6538%" y="623.50"></text></g><g><title>clock_gettime (1,718,475 samples, 0.04%)</title><rect x="50.4038%" y="597" width="0.0370%" height="15" fill="rgb(254,200,22)" fg:x="2341128803" fg:w="1718475"/><text x="50.6538%" y="607.50"></text></g><g><title>__vdso_clock_gettime (1,718,475 samples, 0.04%)</title><rect x="50.4038%" y="581" width="0.0370%" height="15" fill="rgb(219,10,39)" fg:x="2341128803" fg:w="1718475"/><text x="50.6538%" y="591.50"></text></g><g><title>pgdog::net::messages::Message::backend (820,084 samples, 0.02%)</title><rect x="50.4408%" y="677" width="0.0177%" height="15" fill="rgb(226,210,39)" fg:x="2342847278" fg:w="820084"/><text x="50.6908%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4,929,756 samples, 0.11%)</title><rect x="50.7593%" y="661" width="0.1061%" height="15" fill="rgb(208,219,16)" fg:x="2357641702" fg:w="4929756"/><text x="51.0093%" y="671.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (1,665,992 samples, 0.04%)</title><rect x="50.9131%" y="613" width="0.0359%" height="15" fill="rgb(216,158,51)" fg:x="2364782829" fg:w="1665992"/><text x="51.1631%" y="623.50"></text></g><g><title>&lt;pgdog::net::messages::Message as pgdog::net::messages::ToBytes&gt;::to_bytes (19,036,940 samples, 0.41%)</title><rect x="50.8655%" y="661" width="0.4099%" height="15" fill="rgb(233,14,44)" fg:x="2362571458" fg:w="19036940"/><text x="51.1155%" y="671.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (19,036,940 samples, 0.41%)</title><rect x="50.8655%" y="645" width="0.4099%" height="15" fill="rgb(237,97,39)" fg:x="2362571458" fg:w="19036940"/><text x="51.1155%" y="655.50"></text></g><g><title>bytes::bytes::promotable_even_clone (19,036,940 samples, 0.41%)</title><rect x="50.8655%" y="629" width="0.4099%" height="15" fill="rgb(218,198,43)" fg:x="2362571458" fg:w="19036940"/><text x="51.1155%" y="639.50"></text></g><g><title>bytes::bytes::shallow_clone_vec (15,159,577 samples, 0.33%)</title><rect x="50.9489%" y="613" width="0.3264%" height="15" fill="rgb(231,104,20)" fg:x="2366448821" fg:w="15159577"/><text x="51.1989%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (7,827,457 samples, 0.17%)</title><rect x="51.1068%" y="597" width="0.1685%" height="15" fill="rgb(254,36,13)" fg:x="2373780941" fg:w="7827457"/><text x="51.3568%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (4,558,451 samples, 0.10%)</title><rect x="51.1772%" y="581" width="0.0981%" height="15" fill="rgb(248,14,50)" fg:x="2377049947" fg:w="4558451"/><text x="51.4272%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,558,451 samples, 0.10%)</title><rect x="51.1772%" y="565" width="0.0981%" height="15" fill="rgb(217,107,29)" fg:x="2377049947" fg:w="4558451"/><text x="51.4272%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,558,451 samples, 0.10%)</title><rect x="51.1772%" y="549" width="0.0981%" height="15" fill="rgb(251,169,33)" fg:x="2377049947" fg:w="4558451"/><text x="51.4272%" y="559.50"></text></g><g><title>alloc::alloc::alloc (4,558,451 samples, 0.10%)</title><rect x="51.1772%" y="533" width="0.0981%" height="15" fill="rgb(217,108,32)" fg:x="2377049947" fg:w="4558451"/><text x="51.4272%" y="543.50"></text></g><g><title>__rust_alloc (4,558,451 samples, 0.10%)</title><rect x="51.1772%" y="517" width="0.0981%" height="15" fill="rgb(219,66,42)" fg:x="2377049947" fg:w="4558451"/><text x="51.4272%" y="527.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4,558,451 samples, 0.10%)</title><rect x="51.1772%" y="501" width="0.0981%" height="15" fill="rgb(206,180,7)" fg:x="2377049947" fg:w="4558451"/><text x="51.4272%" y="511.50"></text></g><g><title>_rjem_malloc (4,558,451 samples, 0.10%)</title><rect x="51.1772%" y="485" width="0.0981%" height="15" fill="rgb(208,226,31)" fg:x="2377049947" fg:w="4558451"/><text x="51.4272%" y="495.50"></text></g><g><title>imalloc_fastpath (4,558,451 samples, 0.10%)</title><rect x="51.1772%" y="469" width="0.0981%" height="15" fill="rgb(218,26,49)" fg:x="2377049947" fg:w="4558451"/><text x="51.4272%" y="479.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (5,466,354 samples, 0.12%)</title><rect x="51.2753%" y="661" width="0.1177%" height="15" fill="rgb(233,197,48)" fg:x="2381608398" fg:w="5466354"/><text x="51.5253%" y="671.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (5,466,354 samples, 0.12%)</title><rect x="51.2753%" y="645" width="0.1177%" height="15" fill="rgb(252,181,51)" fg:x="2381608398" fg:w="5466354"/><text x="51.5253%" y="655.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (5,466,354 samples, 0.12%)</title><rect x="51.2753%" y="629" width="0.1177%" height="15" fill="rgb(253,90,19)" fg:x="2381608398" fg:w="5466354"/><text x="51.5253%" y="639.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (5,466,354 samples, 0.12%)</title><rect x="51.2753%" y="613" width="0.1177%" height="15" fill="rgb(215,171,30)" fg:x="2381608398" fg:w="5466354"/><text x="51.5253%" y="623.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (5,466,354 samples, 0.12%)</title><rect x="51.2753%" y="597" width="0.1177%" height="15" fill="rgb(214,222,9)" fg:x="2381608398" fg:w="5466354"/><text x="51.5253%" y="607.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write (2,914,673 samples, 0.06%)</title><rect x="51.3303%" y="581" width="0.0628%" height="15" fill="rgb(223,3,22)" fg:x="2384160079" fg:w="2914673"/><text x="51.5803%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2,914,673 samples, 0.06%)</title><rect x="51.3303%" y="565" width="0.0628%" height="15" fill="rgb(225,196,46)" fg:x="2384160079" fg:w="2914673"/><text x="51.5803%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2,914,673 samples, 0.06%)</title><rect x="51.3303%" y="549" width="0.0628%" height="15" fill="rgb(209,110,37)" fg:x="2384160079" fg:w="2914673"/><text x="51.5803%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2,914,673 samples, 0.06%)</title><rect x="51.3303%" y="533" width="0.0628%" height="15" fill="rgb(249,89,12)" fg:x="2384160079" fg:w="2914673"/><text x="51.5803%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,914,673 samples, 0.06%)</title><rect x="51.3303%" y="517" width="0.0628%" height="15" fill="rgb(226,27,33)" fg:x="2384160079" fg:w="2914673"/><text x="51.5803%" y="527.50"></text></g><g><title>[libc.so.6] (2,914,673 samples, 0.06%)</title><rect x="51.3303%" y="501" width="0.0628%" height="15" fill="rgb(213,82,22)" fg:x="2384160079" fg:w="2914673"/><text x="51.5803%" y="511.50"></text></g><g><title>pgdog::net::stream::Stream::send::_{{closure}} (52,943,328 samples, 1.14%)</title><rect x="50.4585%" y="677" width="1.1399%" height="15" fill="rgb(248,140,0)" fg:x="2343667362" fg:w="52943328"/><text x="50.7085%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (9,534,041 samples, 0.21%)</title><rect x="51.3931%" y="661" width="0.2053%" height="15" fill="rgb(228,106,3)" fg:x="2387076649" fg:w="9534041"/><text x="51.6431%" y="671.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (9,534,041 samples, 0.21%)</title><rect x="51.3931%" y="645" width="0.2053%" height="15" fill="rgb(209,23,37)" fg:x="2387076649" fg:w="9534041"/><text x="51.6431%" y="655.50"></text></g><g><title>bytes::bytes::shared_drop (7,499,113 samples, 0.16%)</title><rect x="51.4369%" y="629" width="0.1615%" height="15" fill="rgb(241,93,50)" fg:x="2389111577" fg:w="7499113"/><text x="51.6869%" y="639.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (5,118,864 samples, 0.11%)</title><rect x="51.4881%" y="613" width="0.1102%" height="15" fill="rgb(253,46,43)" fg:x="2391491826" fg:w="5118864"/><text x="51.7381%" y="623.50"></text></g><g><title>bytes::bytes::shared_drop::_{{closure}} (5,118,864 samples, 0.11%)</title><rect x="51.4881%" y="597" width="0.1102%" height="15" fill="rgb(226,206,43)" fg:x="2391491826" fg:w="5118864"/><text x="51.7381%" y="607.50"></text></g><g><title>bytes::bytes::release_shared (3,996,894 samples, 0.09%)</title><rect x="51.5123%" y="581" width="0.0861%" height="15" fill="rgb(217,54,7)" fg:x="2392613796" fg:w="3996894"/><text x="51.7623%" y="591.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="661" width="0.2617%" height="15" fill="rgb(223,5,52)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="671.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::read::_{{closure}} (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="645" width="0.2617%" height="15" fill="rgb(206,52,46)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="655.50"></text></g><g><title>pgdog::backend::server::Server::read::_{{closure}} (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="629" width="0.2617%" height="15" fill="rgb(253,136,11)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="639.50"></text></g><g><title>pgdog::backend::stats::Stats::transaction (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="613" width="0.2617%" height="15" fill="rgb(208,106,33)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="623.50"></text></g><g><title>pgdog::net::stream::Stream::read::_{{closure}} (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="597" width="0.2617%" height="15" fill="rgb(206,54,4)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="607.50"></text></g><g><title>&lt;tokio::io::util::read_exact::ReadExact&lt;A&gt; as core::future::future::Future&gt;::poll (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="581" width="0.2617%" height="15" fill="rgb(213,3,15)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="591.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="565" width="0.2617%" height="15" fill="rgb(252,211,39)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="575.50"></text></g><g><title>&lt;pgdog::net::stream::Stream as tokio::io::async_read::AsyncRead&gt;::poll_read (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="549" width="0.2617%" height="15" fill="rgb(223,6,36)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="559.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="533" width="0.2617%" height="15" fill="rgb(252,169,45)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="543.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="517" width="0.2617%" height="15" fill="rgb(212,48,26)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="527.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="501" width="0.2617%" height="15" fill="rgb(251,102,48)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="485" width="0.2617%" height="15" fill="rgb(243,208,16)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="469" width="0.2617%" height="15" fill="rgb(219,96,24)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="479.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="453" width="0.2617%" height="15" fill="rgb(219,33,29)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="463.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="437" width="0.2617%" height="15" fill="rgb(223,176,5)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="447.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="421" width="0.2617%" height="15" fill="rgb(228,140,14)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="431.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="405" width="0.2617%" height="15" fill="rgb(217,179,31)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="415.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="389" width="0.2617%" height="15" fill="rgb(230,9,30)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="399.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="373" width="0.2617%" height="15" fill="rgb(230,136,20)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="383.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="357" width="0.2617%" height="15" fill="rgb(215,210,22)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="367.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="341" width="0.2617%" height="15" fill="rgb(218,43,5)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="351.50"></text></g><g><title>std::sys::net::connection::socket::TcpStream::read (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="325" width="0.2617%" height="15" fill="rgb(216,11,5)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="335.50"></text></g><g><title>std::sys::net::connection::socket::unix::Socket::read (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="309" width="0.2617%" height="15" fill="rgb(209,82,29)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="319.50"></text></g><g><title>std::sys::net::connection::socket::unix::Socket::recv_with_flags (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="293" width="0.2617%" height="15" fill="rgb(244,115,12)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="303.50"></text></g><g><title>recv (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="277" width="0.2617%" height="15" fill="rgb(222,82,18)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="287.50"></text></g><g><title>[libc.so.6] (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="261" width="0.2617%" height="15" fill="rgb(249,227,8)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="271.50"></text></g><g><title>[libc.so.6] (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="245" width="0.2617%" height="15" fill="rgb(253,141,45)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="255.50"></text></g><g><title>[libc.so.6] (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="229" width="0.2617%" height="15" fill="rgb(234,184,4)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="239.50"></text></g><g><title>[unknown] (12,155,714 samples, 0.26%)</title><rect x="51.7606%" y="213" width="0.2617%" height="15" fill="rgb(218,194,23)" fg:x="2404146876" fg:w="12155714"/><text x="52.0106%" y="223.50"></text></g><g><title>&lt;pgdog::net::messages::Message as pgdog::net::messages::ToBytes&gt;::to_bytes (2,739,674 samples, 0.06%)</title><rect x="52.0783%" y="645" width="0.0590%" height="15" fill="rgb(235,66,41)" fg:x="2418905372" fg:w="2739674"/><text x="52.3283%" y="655.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (2,739,674 samples, 0.06%)</title><rect x="52.0783%" y="629" width="0.0590%" height="15" fill="rgb(245,217,1)" fg:x="2418905372" fg:w="2739674"/><text x="52.3283%" y="639.50"></text></g><g><title>bytes::bytes::promotable_even_clone (2,739,674 samples, 0.06%)</title><rect x="52.0783%" y="613" width="0.0590%" height="15" fill="rgb(229,91,1)" fg:x="2418905372" fg:w="2739674"/><text x="52.3283%" y="623.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (1,457,637 samples, 0.03%)</title><rect x="52.1059%" y="597" width="0.0314%" height="15" fill="rgb(207,101,30)" fg:x="2420187409" fg:w="1457637"/><text x="52.3559%" y="607.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (2,721,811 samples, 0.06%)</title><rect x="52.1373%" y="645" width="0.0586%" height="15" fill="rgb(223,82,49)" fg:x="2421645046" fg:w="2721811"/><text x="52.3873%" y="655.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (2,721,811 samples, 0.06%)</title><rect x="52.1373%" y="629" width="0.0586%" height="15" fill="rgb(218,167,17)" fg:x="2421645046" fg:w="2721811"/><text x="52.3873%" y="639.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (2,721,811 samples, 0.06%)</title><rect x="52.1373%" y="613" width="0.0586%" height="15" fill="rgb(208,103,14)" fg:x="2421645046" fg:w="2721811"/><text x="52.3873%" y="623.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (2,721,811 samples, 0.06%)</title><rect x="52.1373%" y="597" width="0.0586%" height="15" fill="rgb(238,20,8)" fg:x="2421645046" fg:w="2721811"/><text x="52.3873%" y="607.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (2,721,811 samples, 0.06%)</title><rect x="52.1373%" y="581" width="0.0586%" height="15" fill="rgb(218,80,54)" fg:x="2421645046" fg:w="2721811"/><text x="52.3873%" y="591.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write (2,721,811 samples, 0.06%)</title><rect x="52.1373%" y="565" width="0.0586%" height="15" fill="rgb(240,144,17)" fg:x="2421645046" fg:w="2721811"/><text x="52.3873%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2,721,811 samples, 0.06%)</title><rect x="52.1373%" y="549" width="0.0586%" height="15" fill="rgb(245,27,50)" fg:x="2421645046" fg:w="2721811"/><text x="52.3873%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2,721,811 samples, 0.06%)</title><rect x="52.1373%" y="533" width="0.0586%" height="15" fill="rgb(251,51,7)" fg:x="2421645046" fg:w="2721811"/><text x="52.3873%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2,721,811 samples, 0.06%)</title><rect x="52.1373%" y="517" width="0.0586%" height="15" fill="rgb(245,217,29)" fg:x="2421645046" fg:w="2721811"/><text x="52.3873%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,721,811 samples, 0.06%)</title><rect x="52.1373%" y="501" width="0.0586%" height="15" fill="rgb(221,176,29)" fg:x="2421645046" fg:w="2721811"/><text x="52.3873%" y="511.50"></text></g><g><title>[libc.so.6] (2,721,811 samples, 0.06%)</title><rect x="52.1373%" y="485" width="0.0586%" height="15" fill="rgb(212,180,24)" fg:x="2421645046" fg:w="2721811"/><text x="52.3873%" y="495.50"></text></g><g><title>pgdog::net::stream::Stream::send::_{{closure}} (9,516,838 samples, 0.20%)</title><rect x="52.0223%" y="661" width="0.2049%" height="15" fill="rgb(254,24,2)" fg:x="2416302590" fg:w="9516838"/><text x="52.2723%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (1,452,571 samples, 0.03%)</title><rect x="52.1959%" y="645" width="0.0313%" height="15" fill="rgb(230,100,2)" fg:x="2424366857" fg:w="1452571"/><text x="52.4459%" y="655.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (1,452,571 samples, 0.03%)</title><rect x="52.1959%" y="629" width="0.0313%" height="15" fill="rgb(219,142,25)" fg:x="2424366857" fg:w="1452571"/><text x="52.4459%" y="639.50"></text></g><g><title>bytes::bytes::shared_drop (1,452,571 samples, 0.03%)</title><rect x="52.1959%" y="613" width="0.0313%" height="15" fill="rgb(240,73,43)" fg:x="2424366857" fg:w="1452571"/><text x="52.4459%" y="623.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1,452,571 samples, 0.03%)</title><rect x="52.1959%" y="597" width="0.0313%" height="15" fill="rgb(214,114,15)" fg:x="2424366857" fg:w="1452571"/><text x="52.4459%" y="607.50"></text></g><g><title>bytes::bytes::shared_drop::_{{closure}} (1,452,571 samples, 0.03%)</title><rect x="52.1959%" y="581" width="0.0313%" height="15" fill="rgb(207,130,4)" fg:x="2424366857" fg:w="1452571"/><text x="52.4459%" y="591.50"></text></g><g><title>bytes::bytes::release_shared (1,452,571 samples, 0.03%)</title><rect x="52.1959%" y="565" width="0.0313%" height="15" fill="rgb(221,25,40)" fg:x="2424366857" fg:w="1452571"/><text x="52.4459%" y="575.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (327,483,402 samples, 7.05%)</title><rect x="52.2272%" y="597" width="7.0506%" height="15" fill="rgb(241,184,7)" fg:x="2425819428" fg:w="327483402"/><text x="52.4772%" y="607.50">&lt;&amp;mio::ne..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (327,483,402 samples, 7.05%)</title><rect x="52.2272%" y="581" width="7.0506%" height="15" fill="rgb(235,159,4)" fg:x="2425819428" fg:w="327483402"/><text x="52.4772%" y="591.50">mio::io_s..</text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (327,483,402 samples, 7.05%)</title><rect x="52.2272%" y="565" width="7.0506%" height="15" fill="rgb(214,87,48)" fg:x="2425819428" fg:w="327483402"/><text x="52.4772%" y="575.50">mio::sys:..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (327,483,402 samples, 7.05%)</title><rect x="52.2272%" y="549" width="7.0506%" height="15" fill="rgb(246,198,24)" fg:x="2425819428" fg:w="327483402"/><text x="52.4772%" y="559.50">&lt;&amp;mio::ne..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (327,483,402 samples, 7.05%)</title><rect x="52.2272%" y="533" width="7.0506%" height="15" fill="rgb(209,66,40)" fg:x="2425819428" fg:w="327483402"/><text x="52.4772%" y="543.50">&lt;&amp;std::ne..</text></g><g><title>std::sys::net::connection::socket::TcpStream::write (327,483,402 samples, 7.05%)</title><rect x="52.2272%" y="517" width="7.0506%" height="15" fill="rgb(233,147,39)" fg:x="2425819428" fg:w="327483402"/><text x="52.4772%" y="527.50">std::sys:..</text></g><g><title>__send (327,483,402 samples, 7.05%)</title><rect x="52.2272%" y="501" width="7.0506%" height="15" fill="rgb(231,145,52)" fg:x="2425819428" fg:w="327483402"/><text x="52.4772%" y="511.50">__send</text></g><g><title>[libc.so.6] (323,763,604 samples, 6.97%)</title><rect x="52.3073%" y="485" width="6.9705%" height="15" fill="rgb(206,20,26)" fg:x="2429539226" fg:w="323763604"/><text x="52.5573%" y="495.50">[libc.so...</text></g><g><title>[libc.so.6] (323,763,604 samples, 6.97%)</title><rect x="52.3073%" y="469" width="6.9705%" height="15" fill="rgb(238,220,4)" fg:x="2429539226" fg:w="323763604"/><text x="52.5573%" y="479.50">[libc.so...</text></g><g><title>[libc.so.6] (323,763,604 samples, 6.97%)</title><rect x="52.3073%" y="453" width="6.9705%" height="15" fill="rgb(252,195,42)" fg:x="2429539226" fg:w="323763604"/><text x="52.5573%" y="463.50">[libc.so...</text></g><g><title>[unknown] (323,763,604 samples, 6.97%)</title><rect x="52.3073%" y="437" width="6.9705%" height="15" fill="rgb(209,10,6)" fg:x="2429539226" fg:w="323763604"/><text x="52.5573%" y="447.50">[unknown]</text></g><g><title>[unknown] (317,754,937 samples, 6.84%)</title><rect x="52.4366%" y="421" width="6.8412%" height="15" fill="rgb(229,3,52)" fg:x="2435547893" fg:w="317754937"/><text x="52.6866%" y="431.50">[unknown]</text></g><g><title>[unknown] (314,968,982 samples, 6.78%)</title><rect x="52.4966%" y="405" width="6.7812%" height="15" fill="rgb(253,49,37)" fg:x="2438333848" fg:w="314968982"/><text x="52.7466%" y="415.50">[unknown]</text></g><g><title>[unknown] (310,246,695 samples, 6.68%)</title><rect x="52.5983%" y="389" width="6.6795%" height="15" fill="rgb(240,103,49)" fg:x="2443056135" fg:w="310246695"/><text x="52.8483%" y="399.50">[unknown]</text></g><g><title>[unknown] (286,926,814 samples, 6.18%)</title><rect x="53.1003%" y="373" width="6.1774%" height="15" fill="rgb(250,182,30)" fg:x="2466376016" fg:w="286926814"/><text x="53.3503%" y="383.50">[unknown]</text></g><g><title>[unknown] (269,841,611 samples, 5.81%)</title><rect x="53.4682%" y="357" width="5.8096%" height="15" fill="rgb(248,8,30)" fg:x="2483461219" fg:w="269841611"/><text x="53.7182%" y="367.50">[unknow..</text></g><g><title>[unknown] (216,581,546 samples, 4.66%)</title><rect x="54.6149%" y="341" width="4.6629%" height="15" fill="rgb(237,120,30)" fg:x="2536721284" fg:w="216581546"/><text x="54.8649%" y="351.50">[unkn..</text></g><g><title>[unknown] (156,224,936 samples, 3.36%)</title><rect x="55.9143%" y="325" width="3.3635%" height="15" fill="rgb(221,146,34)" fg:x="2597077894" fg:w="156224936"/><text x="56.1643%" y="335.50">[un..</text></g><g><title>[unknown] (79,374,130 samples, 1.71%)</title><rect x="57.5689%" y="309" width="1.7089%" height="15" fill="rgb(242,55,13)" fg:x="2673928700" fg:w="79374130"/><text x="57.8189%" y="319.50"></text></g><g><title>[unknown] (47,894,430 samples, 1.03%)</title><rect x="58.2466%" y="293" width="1.0312%" height="15" fill="rgb(242,112,31)" fg:x="2705408400" fg:w="47894430"/><text x="58.4966%" y="303.50"></text></g><g><title>[unknown] (4,687,703 samples, 0.10%)</title><rect x="59.1769%" y="277" width="0.1009%" height="15" fill="rgb(249,192,27)" fg:x="2748615127" fg:w="4687703"/><text x="59.4269%" y="287.50"></text></g><g><title>pgdog::frontend::client::Client::server_message::_{{closure}} (555,958,822 samples, 11.97%)</title><rect x="47.3516%" y="693" width="11.9696%" height="15" fill="rgb(208,204,44)" fg:x="2199361829" fg:w="555958822"/><text x="47.6016%" y="703.50">pgdog::frontend::c..</text></g><g><title>pgdog::net::stream::Stream::send_flush::_{{closure}} (358,709,961 samples, 7.72%)</title><rect x="51.5983%" y="677" width="7.7229%" height="15" fill="rgb(208,93,54)" fg:x="2396610690" fg:w="358709961"/><text x="51.8483%" y="687.50">pgdog::net:..</text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (329,501,223 samples, 7.09%)</title><rect x="52.2272%" y="661" width="7.0941%" height="15" fill="rgb(242,1,31)" fg:x="2425819428" fg:w="329501223"/><text x="52.4772%" y="671.50">tokio::io:..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (329,501,223 samples, 7.09%)</title><rect x="52.2272%" y="645" width="7.0941%" height="15" fill="rgb(241,83,25)" fg:x="2425819428" fg:w="329501223"/><text x="52.4772%" y="655.50">&lt;tokio::ne..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (329,501,223 samples, 7.09%)</title><rect x="52.2272%" y="629" width="7.0941%" height="15" fill="rgb(205,169,50)" fg:x="2425819428" fg:w="329501223"/><text x="52.4772%" y="639.50">tokio::net..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (329,501,223 samples, 7.09%)</title><rect x="52.2272%" y="613" width="7.0941%" height="15" fill="rgb(239,186,37)" fg:x="2425819428" fg:w="329501223"/><text x="52.4772%" y="623.50">tokio::io:..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (2,017,821 samples, 0.04%)</title><rect x="59.2778%" y="597" width="0.0434%" height="15" fill="rgb(205,221,10)" fg:x="2753302830" fg:w="2017821"/><text x="59.5278%" y="607.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (2,017,821 samples, 0.04%)</title><rect x="59.2778%" y="581" width="0.0434%" height="15" fill="rgb(218,196,15)" fg:x="2753302830" fg:w="2017821"/><text x="59.5278%" y="591.50"></text></g><g><title>pgdog::net::stream::Stream::read::_{{closure}} (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="693" width="0.1721%" height="15" fill="rgb(218,196,35)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="703.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="677" width="0.1721%" height="15" fill="rgb(233,63,24)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="661" width="0.1721%" height="15" fill="rgb(225,8,4)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="645" width="0.1721%" height="15" fill="rgb(234,105,35)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="629" width="0.1721%" height="15" fill="rgb(236,21,32)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="613" width="0.1721%" height="15" fill="rgb(228,109,6)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="597" width="0.1721%" height="15" fill="rgb(229,215,31)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="581" width="0.1721%" height="15" fill="rgb(221,52,54)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="565" width="0.1721%" height="15" fill="rgb(252,129,43)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="575.50"></text></g><g><title>alloc::alloc::alloc (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="549" width="0.1721%" height="15" fill="rgb(248,183,27)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="559.50"></text></g><g><title>__rust_alloc (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="533" width="0.1721%" height="15" fill="rgb(250,0,22)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="543.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="517" width="0.1721%" height="15" fill="rgb(213,166,10)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="527.50"></text></g><g><title>&lt;pgdog::net::stream::Stream as tokio::io::async_read::AsyncRead&gt;::poll_read (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="501" width="0.1721%" height="15" fill="rgb(207,163,36)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="511.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="485" width="0.1721%" height="15" fill="rgb(208,122,22)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="495.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="469" width="0.1721%" height="15" fill="rgb(207,104,49)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="479.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="453" width="0.1721%" height="15" fill="rgb(248,211,50)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="437" width="0.1721%" height="15" fill="rgb(217,13,45)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="421" width="0.1721%" height="15" fill="rgb(211,216,49)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="431.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="405" width="0.1721%" height="15" fill="rgb(221,58,53)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="415.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="389" width="0.1721%" height="15" fill="rgb(220,112,41)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="399.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="373" width="0.1721%" height="15" fill="rgb(236,38,28)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="383.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="357" width="0.1721%" height="15" fill="rgb(227,195,22)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="367.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="341" width="0.1721%" height="15" fill="rgb(214,55,33)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="351.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="325" width="0.1721%" height="15" fill="rgb(248,80,13)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="335.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="309" width="0.1721%" height="15" fill="rgb(238,52,6)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="319.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="293" width="0.1721%" height="15" fill="rgb(224,198,47)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="303.50"></text></g><g><title>std::sys::net::connection::socket::TcpStream::read (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="277" width="0.1721%" height="15" fill="rgb(233,171,20)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="287.50"></text></g><g><title>std::sys::net::connection::socket::unix::Socket::read (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="261" width="0.1721%" height="15" fill="rgb(241,30,25)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="271.50"></text></g><g><title>std::sys::net::connection::socket::unix::Socket::recv_with_flags (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="245" width="0.1721%" height="15" fill="rgb(207,171,38)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="255.50"></text></g><g><title>recv (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="229" width="0.1721%" height="15" fill="rgb(234,70,1)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="239.50"></text></g><g><title>[libc.so.6] (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="213" width="0.1721%" height="15" fill="rgb(232,178,18)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="223.50"></text></g><g><title>[libc.so.6] (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="197" width="0.1721%" height="15" fill="rgb(241,78,40)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="207.50"></text></g><g><title>[libc.so.6] (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="181" width="0.1721%" height="15" fill="rgb(222,35,25)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="191.50"></text></g><g><title>[unknown] (7,991,955 samples, 0.17%)</title><rect x="59.3212%" y="165" width="0.1721%" height="15" fill="rgb(207,92,16)" fg:x="2755320651" fg:w="7991955"/><text x="59.5712%" y="175.50"></text></g><g><title>tokio::sync::notify::Notify::notified (4,161,787 samples, 0.09%)</title><rect x="59.4933%" y="693" width="0.0896%" height="15" fill="rgb(216,59,51)" fg:x="2763312606" fg:w="4161787"/><text x="59.7433%" y="703.50"></text></g><g><title>tokio::time::instant::Instant::checked_add (1,829,700 samples, 0.04%)</title><rect x="59.9983%" y="677" width="0.0394%" height="15" fill="rgb(213,80,28)" fg:x="2786767480" fg:w="1829700"/><text x="60.2483%" y="687.50"></text></g><g><title>std::time::SystemTime::checked_add (1,829,700 samples, 0.04%)</title><rect x="59.9983%" y="661" width="0.0394%" height="15" fill="rgb(220,93,7)" fg:x="2786767480" fg:w="1829700"/><text x="60.2483%" y="671.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::checked_add_duration (1,829,700 samples, 0.04%)</title><rect x="59.9983%" y="645" width="0.0394%" height="15" fill="rgb(225,24,44)" fg:x="2786767480" fg:w="1829700"/><text x="60.2483%" y="655.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::checked_add_duration (1,829,700 samples, 0.04%)</title><rect x="59.9983%" y="629" width="0.0394%" height="15" fill="rgb(243,74,40)" fg:x="2786767480" fg:w="1829700"/><text x="60.2483%" y="639.50"></text></g><g><title>core::num::&lt;impl i64&gt;::checked_add_unsigned (1,829,700 samples, 0.04%)</title><rect x="59.9983%" y="613" width="0.0394%" height="15" fill="rgb(228,39,7)" fg:x="2786767480" fg:w="1829700"/><text x="60.2483%" y="623.50"></text></g><g><title>core::num::&lt;impl i64&gt;::overflowing_add_unsigned (1,829,700 samples, 0.04%)</title><rect x="59.9983%" y="597" width="0.0394%" height="15" fill="rgb(227,79,8)" fg:x="2786767480" fg:w="1829700"/><text x="60.2483%" y="607.50"></text></g><g><title>core::num::&lt;impl i64&gt;::overflowing_add (1,829,700 samples, 0.04%)</title><rect x="59.9983%" y="581" width="0.0394%" height="15" fill="rgb(236,58,11)" fg:x="2786767480" fg:w="1829700"/><text x="60.2483%" y="591.50"></text></g><g><title>clock_gettime (38,534,646 samples, 0.83%)</title><rect x="60.0377%" y="597" width="0.8296%" height="15" fill="rgb(249,63,35)" fg:x="2788597180" fg:w="38534646"/><text x="60.2877%" y="607.50"></text></g><g><title>__vdso_clock_gettime (38,534,646 samples, 0.83%)</title><rect x="60.0377%" y="581" width="0.8296%" height="15" fill="rgb(252,114,16)" fg:x="2788597180" fg:w="38534646"/><text x="60.2877%" y="591.50"></text></g><g><title>tokio::time::instant::Instant::now (42,425,470 samples, 0.91%)</title><rect x="60.0377%" y="677" width="0.9134%" height="15" fill="rgb(254,151,24)" fg:x="2788597180" fg:w="42425470"/><text x="60.2877%" y="687.50"></text></g><g><title>tokio::time::instant::variant::now (42,425,470 samples, 0.91%)</title><rect x="60.0377%" y="661" width="0.9134%" height="15" fill="rgb(253,54,39)" fg:x="2788597180" fg:w="42425470"/><text x="60.2877%" y="671.50"></text></g><g><title>std::time::Instant::now (42,425,470 samples, 0.91%)</title><rect x="60.0377%" y="645" width="0.9134%" height="15" fill="rgb(243,25,45)" fg:x="2788597180" fg:w="42425470"/><text x="60.2877%" y="655.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (42,425,470 samples, 0.91%)</title><rect x="60.0377%" y="629" width="0.9134%" height="15" fill="rgb(234,134,9)" fg:x="2788597180" fg:w="42425470"/><text x="60.2877%" y="639.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (42,425,470 samples, 0.91%)</title><rect x="60.0377%" y="613" width="0.9134%" height="15" fill="rgb(227,166,31)" fg:x="2788597180" fg:w="42425470"/><text x="60.2877%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (3,890,824 samples, 0.08%)</title><rect x="60.8673%" y="597" width="0.0838%" height="15" fill="rgb(245,143,41)" fg:x="2827131826" fg:w="3890824"/><text x="61.1173%" y="607.50"></text></g><g><title>tokio::time::sleep::Sleep::far_future (2,766,722 samples, 0.06%)</title><rect x="60.9511%" y="677" width="0.0596%" height="15" fill="rgb(238,181,32)" fg:x="2831022650" fg:w="2766722"/><text x="61.2011%" y="687.50"></text></g><g><title>tokio::time::instant::Instant::far_future (2,766,722 samples, 0.06%)</title><rect x="60.9511%" y="661" width="0.0596%" height="15" fill="rgb(224,113,18)" fg:x="2831022650" fg:w="2766722"/><text x="61.2011%" y="671.50"></text></g><g><title>tokio::time::instant::Instant::now (2,766,722 samples, 0.06%)</title><rect x="60.9511%" y="645" width="0.0596%" height="15" fill="rgb(240,229,28)" fg:x="2831022650" fg:w="2766722"/><text x="61.2011%" y="655.50"></text></g><g><title>tokio::time::instant::variant::now (2,766,722 samples, 0.06%)</title><rect x="60.9511%" y="629" width="0.0596%" height="15" fill="rgb(250,185,3)" fg:x="2831022650" fg:w="2766722"/><text x="61.2011%" y="639.50"></text></g><g><title>std::time::Instant::now (2,766,722 samples, 0.06%)</title><rect x="60.9511%" y="613" width="0.0596%" height="15" fill="rgb(212,59,25)" fg:x="2831022650" fg:w="2766722"/><text x="61.2011%" y="623.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (2,766,722 samples, 0.06%)</title><rect x="60.9511%" y="597" width="0.0596%" height="15" fill="rgb(221,87,20)" fg:x="2831022650" fg:w="2766722"/><text x="61.2011%" y="607.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (2,766,722 samples, 0.06%)</title><rect x="60.9511%" y="581" width="0.0596%" height="15" fill="rgb(213,74,28)" fg:x="2831022650" fg:w="2766722"/><text x="61.2011%" y="591.50"></text></g><g><title>clock_gettime (2,766,722 samples, 0.06%)</title><rect x="60.9511%" y="565" width="0.0596%" height="15" fill="rgb(224,132,34)" fg:x="2831022650" fg:w="2766722"/><text x="61.2011%" y="575.50"></text></g><g><title>__vdso_clock_gettime (2,766,722 samples, 0.06%)</title><rect x="60.9511%" y="549" width="0.0596%" height="15" fill="rgb(222,101,24)" fg:x="2831022650" fg:w="2766722"/><text x="61.2011%" y="559.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (1,854,817 samples, 0.04%)</title><rect x="61.0464%" y="597" width="0.0399%" height="15" fill="rgb(254,142,4)" fg:x="2835449988" fg:w="1854817"/><text x="61.2964%" y="607.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (1,854,817 samples, 0.04%)</title><rect x="61.0464%" y="581" width="0.0399%" height="15" fill="rgb(230,229,49)" fg:x="2835449988" fg:w="1854817"/><text x="61.2964%" y="591.50"></text></g><g><title>core::cell::BorrowRef::new (1,854,817 samples, 0.04%)</title><rect x="61.0464%" y="565" width="0.0399%" height="15" fill="rgb(238,70,47)" fg:x="2835449988" fg:w="1854817"/><text x="61.2964%" y="575.50"></text></g><g><title>pgdog::frontend::client::Client::spawn::_{{closure}} (1,979,058,918 samples, 42.61%)</title><rect x="18.5730%" y="741" width="42.6086%" height="15" fill="rgb(231,160,17)" fg:x="862670163" fg:w="1979058918"/><text x="18.8230%" y="751.50">pgdog::frontend::client::Client::spawn::_{{closure}}</text></g><g><title>pgdog::frontend::client::Client::spawn_internal::_{{closure}} (1,950,537,156 samples, 41.99%)</title><rect x="19.1871%" y="725" width="41.9945%" height="15" fill="rgb(218,68,53)" fg:x="891191925" fg:w="1950537156"/><text x="19.4371%" y="735.50">pgdog::frontend::client::Client::spawn_internal::_{{closure}}</text></g><g><title>pgdog::frontend::client::Client::run::_{{closure}} (1,946,021,333 samples, 41.90%)</title><rect x="19.2843%" y="709" width="41.8973%" height="15" fill="rgb(236,111,10)" fg:x="895707748" fg:w="1946021333"/><text x="19.5343%" y="719.50">pgdog::frontend::client::Client::run::_{{closure}}</text></g><g><title>tokio::time::timeout::timeout (74,254,688 samples, 1.60%)</title><rect x="59.5829%" y="693" width="1.5987%" height="15" fill="rgb(224,34,41)" fg:x="2767474393" fg:w="74254688"/><text x="59.8329%" y="703.50"></text></g><g><title>tokio::time::sleep::Sleep::new_timeout (7,939,709 samples, 0.17%)</title><rect x="61.0106%" y="677" width="0.1709%" height="15" fill="rgb(241,118,19)" fg:x="2833789372" fg:w="7939709"/><text x="61.2606%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::Handle::current (6,279,093 samples, 0.14%)</title><rect x="61.0464%" y="661" width="0.1352%" height="15" fill="rgb(238,129,25)" fg:x="2835449988" fg:w="6279093"/><text x="61.2964%" y="671.50"></text></g><g><title>tokio::runtime::context::current::with_current (6,279,093 samples, 0.14%)</title><rect x="61.0464%" y="645" width="0.1352%" height="15" fill="rgb(238,22,31)" fg:x="2835449988" fg:w="6279093"/><text x="61.2964%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,279,093 samples, 0.14%)</title><rect x="61.0464%" y="629" width="0.1352%" height="15" fill="rgb(222,174,48)" fg:x="2835449988" fg:w="6279093"/><text x="61.2964%" y="639.50"></text></g><g><title>tokio::runtime::context::current::with_current::_{{closure}} (6,279,093 samples, 0.14%)</title><rect x="61.0464%" y="613" width="0.1352%" height="15" fill="rgb(206,152,40)" fg:x="2835449988" fg:w="6279093"/><text x="61.2964%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4,424,276 samples, 0.10%)</title><rect x="61.0863%" y="597" width="0.0953%" height="15" fill="rgb(218,99,54)" fg:x="2837304805" fg:w="4424276"/><text x="61.3363%" y="607.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,424,276 samples, 0.10%)</title><rect x="61.0863%" y="581" width="0.0953%" height="15" fill="rgb(220,174,26)" fg:x="2837304805" fg:w="4424276"/><text x="61.3363%" y="591.50"></text></g><g><title>&lt;tokio::runtime::scheduler::Handle as core::clone::Clone&gt;::clone (4,424,276 samples, 0.10%)</title><rect x="61.0863%" y="565" width="0.0953%" height="15" fill="rgb(245,116,9)" fg:x="2837304805" fg:w="4424276"/><text x="61.3363%" y="575.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,997,932,262 samples, 43.01%)</title><rect x="18.1673%" y="805" width="43.0149%" height="15" fill="rgb(209,72,35)" fg:x="843823528" fg:w="1997932262"/><text x="18.4173%" y="815.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;tokio_util::task::task_tracker::TrackedFuture&lt;F&gt; as core::future::future::Future&gt;::poll (1,997,932,262 samples, 43.01%)</title><rect x="18.1673%" y="789" width="43.0149%" height="15" fill="rgb(226,126,21)" fg:x="843823528" fg:w="1997932262"/><text x="18.4173%" y="799.50">&lt;tokio_util::task::task_tracker::TrackedFuture&lt;F&gt; as core::future::fut..</text></g><g><title>pgdog::frontend::listener::Listener::listen::_{{closure}}::_{{closure}} (1,997,932,262 samples, 43.01%)</title><rect x="18.1673%" y="773" width="43.0149%" height="15" fill="rgb(227,192,1)" fg:x="843823528" fg:w="1997932262"/><text x="18.4173%" y="783.50">pgdog::frontend::listener::Listener::listen::_{{closure}}::_{{closure}}</text></g><g><title>pgdog::frontend::listener::Listener::handle_client::_{{closure}} (1,992,346,697 samples, 42.89%)</title><rect x="18.2875%" y="757" width="42.8946%" height="15" fill="rgb(237,180,29)" fg:x="849409093" fg:w="1992346697"/><text x="18.5375%" y="767.50">pgdog::frontend::listener::Listener::handle_client::_{{closure}}</text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (1,644,524 samples, 0.04%)</title><rect x="61.1822%" y="805" width="0.0354%" height="15" fill="rgb(230,197,35)" fg:x="2841755790" fg:w="1644524"/><text x="61.4322%" y="815.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (1,644,524 samples, 0.04%)</title><rect x="61.1822%" y="789" width="0.0354%" height="15" fill="rgb(246,193,31)" fg:x="2841755790" fg:w="1644524"/><text x="61.4322%" y="799.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (1,644,524 samples, 0.04%)</title><rect x="61.1822%" y="773" width="0.0354%" height="15" fill="rgb(241,36,4)" fg:x="2841755790" fg:w="1644524"/><text x="61.4322%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,644,524 samples, 0.04%)</title><rect x="61.1822%" y="757" width="0.0354%" height="15" fill="rgb(241,130,17)" fg:x="2841755790" fg:w="1644524"/><text x="61.4322%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,644,524 samples, 0.04%)</title><rect x="61.1822%" y="741" width="0.0354%" height="15" fill="rgb(206,137,32)" fg:x="2841755790" fg:w="1644524"/><text x="61.4322%" y="751.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (1,644,524 samples, 0.04%)</title><rect x="61.1822%" y="725" width="0.0354%" height="15" fill="rgb(237,228,51)" fg:x="2841755790" fg:w="1644524"/><text x="61.4322%" y="735.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (1,644,524 samples, 0.04%)</title><rect x="61.1822%" y="709" width="0.0354%" height="15" fill="rgb(243,6,42)" fg:x="2841755790" fg:w="1644524"/><text x="61.4322%" y="719.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1,644,524 samples, 0.04%)</title><rect x="61.1822%" y="693" width="0.0354%" height="15" fill="rgb(251,74,28)" fg:x="2841755790" fg:w="1644524"/><text x="61.4322%" y="703.50"></text></g><g><title>pgdog::backend::pool::monitor::Monitor::spawn::_{{closure}}::_{{closure}} (1,386,224 samples, 0.03%)</title><rect x="61.2236%" y="805" width="0.0298%" height="15" fill="rgb(218,20,49)" fg:x="2843682191" fg:w="1386224"/><text x="61.4736%" y="815.50"></text></g><g><title>pgdog::backend::pool::monitor::Monitor::maintenance::_{{closure}} (1,386,224 samples, 0.03%)</title><rect x="61.2236%" y="789" width="0.0298%" height="15" fill="rgb(238,28,14)" fg:x="2843682191" fg:w="1386224"/><text x="61.4736%" y="799.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,386,224 samples, 0.03%)</title><rect x="61.2236%" y="773" width="0.0298%" height="15" fill="rgb(229,40,46)" fg:x="2843682191" fg:w="1386224"/><text x="61.4736%" y="783.50"></text></g><g><title>pgdog::backend::pool::monitor::Monitor::maintenance::_{{closure}}::_{{closure}} (1,386,224 samples, 0.03%)</title><rect x="61.2236%" y="757" width="0.0298%" height="15" fill="rgb(244,195,20)" fg:x="2843682191" fg:w="1386224"/><text x="61.4736%" y="767.50"></text></g><g><title>tokio::time::interval::Interval::tick::_{{closure}} (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="741" width="0.0238%" height="15" fill="rgb(253,56,35)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="751.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="725" width="0.0238%" height="15" fill="rgb(210,149,44)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="735.50"></text></g><g><title>tokio::time::interval::Interval::tick::_{{closure}}::_{{closure}} (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="709" width="0.0238%" height="15" fill="rgb(240,135,12)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="719.50"></text></g><g><title>tokio::time::interval::Interval::poll_tick (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="693" width="0.0238%" height="15" fill="rgb(251,24,50)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="677" width="0.0238%" height="15" fill="rgb(243,200,47)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="687.50"></text></g><g><title>&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="661" width="0.0238%" height="15" fill="rgb(224,166,26)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="671.50"></text></g><g><title>tokio::time::sleep::Sleep::poll_elapsed (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="645" width="0.0238%" height="15" fill="rgb(233,0,47)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="655.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::poll_elapsed (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="629" width="0.0238%" height="15" fill="rgb(253,80,5)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="639.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::reset (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="613" width="0.0238%" height="15" fill="rgb(214,133,25)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="623.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="597" width="0.0238%" height="15" fill="rgb(209,27,14)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="607.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="581" width="0.0238%" height="15" fill="rgb(219,102,51)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="591.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="565" width="0.0238%" height="15" fill="rgb(237,18,16)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="575.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="549" width="0.0238%" height="15" fill="rgb(241,85,17)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="559.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="533" width="0.0238%" height="15" fill="rgb(236,90,42)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="543.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="517" width="0.0238%" height="15" fill="rgb(249,57,21)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="527.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="501" width="0.0238%" height="15" fill="rgb(243,12,36)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="511.50"></text></g><g><title>parking_lot_core::thread_parker::imp::thread_yield (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="485" width="0.0238%" height="15" fill="rgb(253,128,47)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="495.50"></text></g><g><title>std::thread::yield_now (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="469" width="0.0238%" height="15" fill="rgb(207,33,20)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="479.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::yield_now (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="453" width="0.0238%" height="15" fill="rgb(233,215,35)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="463.50"></text></g><g><title>__sched_yield (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="437" width="0.0238%" height="15" fill="rgb(249,188,52)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="447.50"></text></g><g><title>[unknown] (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="421" width="0.0238%" height="15" fill="rgb(225,12,32)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="431.50"></text></g><g><title>[unknown] (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="405" width="0.0238%" height="15" fill="rgb(247,98,14)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="415.50"></text></g><g><title>[unknown] (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="389" width="0.0238%" height="15" fill="rgb(247,219,48)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="399.50"></text></g><g><title>[unknown] (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="373" width="0.0238%" height="15" fill="rgb(253,60,48)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="383.50"></text></g><g><title>[unknown] (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="357" width="0.0238%" height="15" fill="rgb(245,15,52)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="367.50"></text></g><g><title>[unknown] (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="341" width="0.0238%" height="15" fill="rgb(220,133,28)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="351.50"></text></g><g><title>[unknown] (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="325" width="0.0238%" height="15" fill="rgb(217,180,4)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="335.50"></text></g><g><title>[unknown] (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="309" width="0.0238%" height="15" fill="rgb(251,24,1)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="319.50"></text></g><g><title>[unknown] (1,104,347 samples, 0.02%)</title><rect x="61.2297%" y="293" width="0.0238%" height="15" fill="rgb(212,185,49)" fg:x="2843964068" fg:w="1104347"/><text x="61.4797%" y="303.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2,002,352,357 samples, 43.11%)</title><rect x="18.1673%" y="949" width="43.1101%" height="15" fill="rgb(215,175,22)" fg:x="843823528" fg:w="2002352357"/><text x="18.4173%" y="959.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (2,002,352,357 samples, 43.11%)</title><rect x="18.1673%" y="933" width="43.1101%" height="15" fill="rgb(250,205,14)" fg:x="843823528" fg:w="2002352357"/><text x="18.4173%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,002,352,357 samples, 43.11%)</title><rect x="18.1673%" y="917" width="43.1101%" height="15" fill="rgb(225,211,22)" fg:x="843823528" fg:w="2002352357"/><text x="18.4173%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,002,352,357 samples, 43.11%)</title><rect x="18.1673%" y="901" width="43.1101%" height="15" fill="rgb(251,179,42)" fg:x="843823528" fg:w="2002352357"/><text x="18.4173%" y="911.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,002,352,357 samples, 43.11%)</title><rect x="18.1673%" y="885" width="43.1101%" height="15" fill="rgb(208,216,51)" fg:x="843823528" fg:w="2002352357"/><text x="18.4173%" y="895.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::..</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (2,002,352,357 samples, 43.11%)</title><rect x="18.1673%" y="869" width="43.1101%" height="15" fill="rgb(235,36,11)" fg:x="843823528" fg:w="2002352357"/><text x="18.4173%" y="879.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2,002,352,357 samples, 43.11%)</title><rect x="18.1673%" y="853" width="43.1101%" height="15" fill="rgb(213,189,28)" fg:x="843823528" fg:w="2002352357"/><text x="18.4173%" y="863.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2,002,352,357 samples, 43.11%)</title><rect x="18.1673%" y="837" width="43.1101%" height="15" fill="rgb(227,203,42)" fg:x="843823528" fg:w="2002352357"/><text x="18.4173%" y="847.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (2,002,352,357 samples, 43.11%)</title><rect x="18.1673%" y="821" width="43.1101%" height="15" fill="rgb(244,72,36)" fg:x="843823528" fg:w="2002352357"/><text x="18.4173%" y="831.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>pgdog::stats::http_server::server::_{{closure}}::_{{closure}} (1,107,470 samples, 0.02%)</title><rect x="61.2535%" y="805" width="0.0238%" height="15" fill="rgb(213,53,17)" fg:x="2845068415" fg:w="1107470"/><text x="61.5035%" y="815.50"></text></g><g><title>&lt;hyper::server::conn::http1::Connection&lt;I,S&gt; as core::future::future::Future&gt;::poll (1,107,470 samples, 0.02%)</title><rect x="61.2535%" y="789" width="0.0238%" height="15" fill="rgb(207,167,3)" fg:x="2845068415" fg:w="1107470"/><text x="61.5035%" y="799.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (1,107,470 samples, 0.02%)</title><rect x="61.2535%" y="773" width="0.0238%" height="15" fill="rgb(216,98,30)" fg:x="2845068415" fg:w="1107470"/><text x="61.5035%" y="783.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (1,107,470 samples, 0.02%)</title><rect x="61.2535%" y="757" width="0.0238%" height="15" fill="rgb(236,123,15)" fg:x="2845068415" fg:w="1107470"/><text x="61.5035%" y="767.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (1,107,470 samples, 0.02%)</title><rect x="61.2535%" y="741" width="0.0238%" height="15" fill="rgb(248,81,50)" fg:x="2845068415" fg:w="1107470"/><text x="61.5035%" y="751.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (1,107,470 samples, 0.02%)</title><rect x="61.2535%" y="725" width="0.0238%" height="15" fill="rgb(214,120,4)" fg:x="2845068415" fg:w="1107470"/><text x="61.5035%" y="735.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (1,107,470 samples, 0.02%)</title><rect x="61.2535%" y="709" width="0.0238%" height="15" fill="rgb(208,179,34)" fg:x="2845068415" fg:w="1107470"/><text x="61.5035%" y="719.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (1,107,470 samples, 0.02%)</title><rect x="61.2535%" y="693" width="0.0238%" height="15" fill="rgb(227,140,7)" fg:x="2845068415" fg:w="1107470"/><text x="61.5035%" y="703.50"></text></g><g><title>pgdog::stats::http_server::metrics::_{{closure}} (1,107,470 samples, 0.02%)</title><rect x="61.2535%" y="677" width="0.0238%" height="15" fill="rgb(214,22,6)" fg:x="2845068415" fg:w="1107470"/><text x="61.5035%" y="687.50"></text></g><g><title>pgdog::stats::clients::Clients::load (1,107,470 samples, 0.02%)</title><rect x="61.2535%" y="661" width="0.0238%" height="15" fill="rgb(207,137,27)" fg:x="2845068415" fg:w="1107470"/><text x="61.5035%" y="671.50"></text></g><g><title>pgdog::frontend::comms::comms (1,107,470 samples, 0.02%)</title><rect x="61.2535%" y="645" width="0.0238%" height="15" fill="rgb(210,8,46)" fg:x="2845068415" fg:w="1107470"/><text x="61.5035%" y="655.50"></text></g><g><title>&lt;pgdog::frontend::comms::Comms as core::clone::Clone&gt;::clone (1,107,470 samples, 0.02%)</title><rect x="61.2535%" y="629" width="0.0238%" height="15" fill="rgb(240,16,54)" fg:x="2845068415" fg:w="1107470"/><text x="61.5035%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,107,470 samples, 0.02%)</title><rect x="61.2535%" y="613" width="0.0238%" height="15" fill="rgb(211,209,29)" fg:x="2845068415" fg:w="1107470"/><text x="61.5035%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1,107,470 samples, 0.02%)</title><rect x="61.2535%" y="597" width="0.0238%" height="15" fill="rgb(226,228,24)" fg:x="2845068415" fg:w="1107470"/><text x="61.5035%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (1,107,470 samples, 0.02%)</title><rect x="61.2535%" y="581" width="0.0238%" height="15" fill="rgb(222,84,9)" fg:x="2845068415" fg:w="1107470"/><text x="61.5035%" y="591.50"></text></g><g><title>tokio::runtime::task::state::State::load (1,366,588 samples, 0.03%)</title><rect x="61.3280%" y="917" width="0.0294%" height="15" fill="rgb(234,203,30)" fg:x="2848529922" fg:w="1366588"/><text x="61.5780%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,366,588 samples, 0.03%)</title><rect x="61.3280%" y="901" width="0.0294%" height="15" fill="rgb(238,109,14)" fg:x="2848529922" fg:w="1366588"/><text x="61.5780%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (1,366,588 samples, 0.03%)</title><rect x="61.3280%" y="885" width="0.0294%" height="15" fill="rgb(233,206,34)" fg:x="2848529922" fg:w="1366588"/><text x="61.5780%" y="895.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (11,777,819 samples, 0.25%)</title><rect x="61.2773%" y="949" width="0.2536%" height="15" fill="rgb(220,167,47)" fg:x="2846175885" fg:w="11777819"/><text x="61.5273%" y="959.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (11,777,819 samples, 0.25%)</title><rect x="61.2773%" y="933" width="0.2536%" height="15" fill="rgb(238,105,10)" fg:x="2846175885" fg:w="11777819"/><text x="61.5273%" y="943.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle::_{{closure}} (8,057,194 samples, 0.17%)</title><rect x="61.3574%" y="917" width="0.1735%" height="15" fill="rgb(213,227,17)" fg:x="2849896510" fg:w="8057194"/><text x="61.6074%" y="927.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::ref_dec (2,207,516 samples, 0.05%)</title><rect x="61.4834%" y="901" width="0.0475%" height="15" fill="rgb(217,132,38)" fg:x="2855746188" fg:w="2207516"/><text x="61.7334%" y="911.50"></text></g><g><title>tokio::runtime::coop::budget (2,035,882,354 samples, 43.83%)</title><rect x="17.7315%" y="1077" width="43.8319%" height="15" fill="rgb(242,146,4)" fg:x="823582976" fg:w="2035882354"/><text x="17.9815%" y="1087.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (2,035,882,354 samples, 43.83%)</title><rect x="17.7315%" y="1061" width="43.8319%" height="15" fill="rgb(212,61,9)" fg:x="823582976" fg:w="2035882354"/><text x="17.9815%" y="1071.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (2,033,425,817 samples, 43.78%)</title><rect x="17.7844%" y="1045" width="43.7791%" height="15" fill="rgb(247,126,22)" fg:x="826039513" fg:w="2033425817"/><text x="18.0344%" y="1055.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{c..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (2,021,696,821 samples, 43.53%)</title><rect x="18.0369%" y="1029" width="43.5265%" height="15" fill="rgb(220,196,2)" fg:x="837768509" fg:w="2021696821"/><text x="18.2869%" y="1039.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2,021,696,821 samples, 43.53%)</title><rect x="18.0369%" y="1013" width="43.5265%" height="15" fill="rgb(208,46,4)" fg:x="837768509" fg:w="2021696821"/><text x="18.2869%" y="1023.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (2,021,696,821 samples, 43.53%)</title><rect x="18.0369%" y="997" width="43.5265%" height="15" fill="rgb(252,104,46)" fg:x="837768509" fg:w="2021696821"/><text x="18.2869%" y="1007.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2,018,796,768 samples, 43.46%)</title><rect x="18.0993%" y="981" width="43.4641%" height="15" fill="rgb(237,152,48)" fg:x="840668562" fg:w="2018796768"/><text x="18.3493%" y="991.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2,018,796,768 samples, 43.46%)</title><rect x="18.0993%" y="965" width="43.4641%" height="15" fill="rgb(221,59,37)" fg:x="840668562" fg:w="2018796768"/><text x="18.3493%" y="975.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (1,511,626 samples, 0.03%)</title><rect x="61.5309%" y="949" width="0.0325%" height="15" fill="rgb(209,202,51)" fg:x="2857953704" fg:w="1511626"/><text x="61.7809%" y="959.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1,511,626 samples, 0.03%)</title><rect x="61.5309%" y="933" width="0.0325%" height="15" fill="rgb(228,81,30)" fg:x="2857953704" fg:w="1511626"/><text x="61.7809%" y="943.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running::_{{closure}} (1,511,626 samples, 0.03%)</title><rect x="61.5309%" y="917" width="0.0325%" height="15" fill="rgb(227,42,39)" fg:x="2857953704" fg:w="1511626"/><text x="61.7809%" y="927.50"></text></g><g><title>syscall (1,429,765 samples, 0.03%)</title><rect x="61.5634%" y="1045" width="0.0308%" height="15" fill="rgb(221,26,2)" fg:x="2859465330" fg:w="1429765"/><text x="61.8134%" y="1055.50"></text></g><g><title>[unknown] (1,429,765 samples, 0.03%)</title><rect x="61.5634%" y="1029" width="0.0308%" height="15" fill="rgb(254,61,31)" fg:x="2859465330" fg:w="1429765"/><text x="61.8134%" y="1039.50"></text></g><g><title>[unknown] (1,429,765 samples, 0.03%)</title><rect x="61.5634%" y="1013" width="0.0308%" height="15" fill="rgb(222,173,38)" fg:x="2859465330" fg:w="1429765"/><text x="61.8134%" y="1023.50"></text></g><g><title>[unknown] (1,429,765 samples, 0.03%)</title><rect x="61.5634%" y="997" width="0.0308%" height="15" fill="rgb(218,50,12)" fg:x="2859465330" fg:w="1429765"/><text x="61.8134%" y="1007.50"></text></g><g><title>[unknown] (1,429,765 samples, 0.03%)</title><rect x="61.5634%" y="981" width="0.0308%" height="15" fill="rgb(223,88,40)" fg:x="2859465330" fg:w="1429765"/><text x="61.8134%" y="991.50"></text></g><g><title>[unknown] (1,429,748 samples, 0.03%)</title><rect x="61.5634%" y="965" width="0.0308%" height="15" fill="rgb(237,54,19)" fg:x="2859465347" fg:w="1429748"/><text x="61.8134%" y="975.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (2,037,312,121 samples, 43.86%)</title><rect x="17.7315%" y="1093" width="43.8627%" height="15" fill="rgb(251,129,25)" fg:x="823582975" fg:w="2037312121"/><text x="17.9815%" y="1103.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (1,429,766 samples, 0.03%)</title><rect x="61.5634%" y="1077" width="0.0308%" height="15" fill="rgb(238,97,19)" fg:x="2859465330" fg:w="1429766"/><text x="61.8134%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (1,429,766 samples, 0.03%)</title><rect x="61.5634%" y="1061" width="0.0308%" height="15" fill="rgb(240,169,18)" fg:x="2859465330" fg:w="1429766"/><text x="61.8134%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (1,821,655 samples, 0.04%)</title><rect x="61.6231%" y="1077" width="0.0392%" height="15" fill="rgb(230,187,49)" fg:x="2862234215" fg:w="1821655"/><text x="61.8731%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1,821,655 samples, 0.04%)</title><rect x="61.6231%" y="1061" width="0.0392%" height="15" fill="rgb(209,44,26)" fg:x="2862234215" fg:w="1821655"/><text x="61.8731%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (1,821,655 samples, 0.04%)</title><rect x="61.6231%" y="1045" width="0.0392%" height="15" fill="rgb(244,0,6)" fg:x="2862234215" fg:w="1821655"/><text x="61.8731%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (1,821,655 samples, 0.04%)</title><rect x="61.6231%" y="1029" width="0.0392%" height="15" fill="rgb(248,18,21)" fg:x="2862234215" fg:w="1821655"/><text x="61.8731%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (1,821,655 samples, 0.04%)</title><rect x="61.6231%" y="1013" width="0.0392%" height="15" fill="rgb(245,180,19)" fg:x="2862234215" fg:w="1821655"/><text x="61.8731%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (4,508,053 samples, 0.10%)</title><rect x="61.5942%" y="1093" width="0.0971%" height="15" fill="rgb(252,118,36)" fg:x="2860895096" fg:w="4508053"/><text x="61.8442%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tune_global_queue_interval (1,347,279 samples, 0.03%)</title><rect x="61.6623%" y="1077" width="0.0290%" height="15" fill="rgb(210,224,19)" fg:x="2864055870" fg:w="1347279"/><text x="61.9123%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::tuned_global_queue_interval (1,347,279 samples, 0.03%)</title><rect x="61.6623%" y="1061" width="0.0290%" height="15" fill="rgb(218,30,24)" fg:x="2864055870" fg:w="1347279"/><text x="61.9123%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (1,123,451 samples, 0.02%)</title><rect x="61.7210%" y="1045" width="0.0242%" height="15" fill="rgb(219,75,50)" fg:x="2866782091" fg:w="1123451"/><text x="61.9710%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (1,123,451 samples, 0.02%)</title><rect x="61.7210%" y="1029" width="0.0242%" height="15" fill="rgb(234,72,50)" fg:x="2866782091" fg:w="1123451"/><text x="61.9710%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (2,270,383 samples, 0.05%)</title><rect x="61.7210%" y="1077" width="0.0489%" height="15" fill="rgb(219,100,48)" fg:x="2866782091" fg:w="2270383"/><text x="61.9710%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (2,270,383 samples, 0.05%)</title><rect x="61.7210%" y="1061" width="0.0489%" height="15" fill="rgb(253,5,41)" fg:x="2866782091" fg:w="2270383"/><text x="61.9710%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (1,146,932 samples, 0.02%)</title><rect x="61.7452%" y="1045" width="0.0247%" height="15" fill="rgb(247,181,11)" fg:x="2867905542" fg:w="1146932"/><text x="61.9952%" y="1055.50"></text></g><g><title>[libc.so.6] (2,857,309,253 samples, 61.52%)</title><rect x="0.3114%" y="1765" width="61.5170%" height="15" fill="rgb(222,223,25)" fg:x="14462047" fg:w="2857309253"/><text x="0.5614%" y="1775.50">[libc.so.6]</text></g><g><title>[libc.so.6] (2,857,309,253 samples, 61.52%)</title><rect x="0.3114%" y="1749" width="61.5170%" height="15" fill="rgb(214,198,28)" fg:x="14462047" fg:w="2857309253"/><text x="0.5614%" y="1759.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1733" width="61.4396%" height="15" fill="rgb(230,46,43)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1743.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1717" width="61.4396%" height="15" fill="rgb(233,65,53)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1727.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1701" width="61.4396%" height="15" fill="rgb(221,121,27)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1711.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1685" width="61.4396%" height="15" fill="rgb(247,70,47)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1695.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1669" width="61.4396%" height="15" fill="rgb(228,85,35)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1679.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>std::panic::catch_unwind (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1653" width="61.4396%" height="15" fill="rgb(209,50,18)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1663.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1637" width="61.4396%" height="15" fill="rgb(250,19,35)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1647.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1621" width="61.4396%" height="15" fill="rgb(253,107,29)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1631.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1605" width="61.4396%" height="15" fill="rgb(252,179,29)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1615.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1589" width="61.4396%" height="15" fill="rgb(238,194,6)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1599.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1573" width="61.4396%" height="15" fill="rgb(238,164,29)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1583.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1557" width="61.4396%" height="15" fill="rgb(224,25,9)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1567.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1541" width="61.4396%" height="15" fill="rgb(244,153,23)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1551.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1525" width="61.4396%" height="15" fill="rgb(212,203,14)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1535.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1509" width="61.4396%" height="15" fill="rgb(220,164,20)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1519.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1493" width="61.4396%" height="15" fill="rgb(222,203,48)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1503.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1477" width="61.4396%" height="15" fill="rgb(215,159,22)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1487.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1461" width="61.4396%" height="15" fill="rgb(216,183,47)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1471.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1445" width="61.4396%" height="15" fill="rgb(229,195,25)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1455.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1429" width="61.4396%" height="15" fill="rgb(224,132,51)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1439.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1413" width="61.4396%" height="15" fill="rgb(240,63,7)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1423.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1397" width="61.4396%" height="15" fill="rgb(249,182,41)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1407.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1381" width="61.4396%" height="15" fill="rgb(243,47,26)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1391.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1365" width="61.4396%" height="15" fill="rgb(233,48,2)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1375.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1349" width="61.4396%" height="15" fill="rgb(244,165,34)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1359.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1333" width="61.4396%" height="15" fill="rgb(207,89,7)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1343.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1317" width="61.4396%" height="15" fill="rgb(244,117,36)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1327.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1301" width="61.4396%" height="15" fill="rgb(226,144,34)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1311.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1285" width="61.4396%" height="15" fill="rgb(213,23,19)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1295.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1269" width="61.4396%" height="15" fill="rgb(217,75,12)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1279.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1253" width="61.4396%" height="15" fill="rgb(224,159,17)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1263.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (2,853,711,606 samples, 61.44%)</title><rect x="0.3888%" y="1237" width="61.4396%" height="15" fill="rgb(217,118,1)" fg:x="18059694" fg:w="2853711606"/><text x="0.6388%" y="1247.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (2,853,380,293 samples, 61.43%)</title><rect x="0.3960%" y="1221" width="61.4324%" height="15" fill="rgb(232,180,48)" fg:x="18391007" fg:w="2853380293"/><text x="0.6460%" y="1231.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}</text></g><g><title>tokio::runtime::context::set_scheduler (2,853,380,293 samples, 61.43%)</title><rect x="0.3960%" y="1205" width="61.4324%" height="15" fill="rgb(230,27,33)" fg:x="18391007" fg:w="2853380293"/><text x="0.6460%" y="1215.50">tokio::runtime::context::set_scheduler</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,853,380,293 samples, 61.43%)</title><rect x="0.3960%" y="1189" width="61.4324%" height="15" fill="rgb(205,31,21)" fg:x="18391007" fg:w="2853380293"/><text x="0.6460%" y="1199.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,853,380,293 samples, 61.43%)</title><rect x="0.3960%" y="1173" width="61.4324%" height="15" fill="rgb(253,59,4)" fg:x="18391007" fg:w="2853380293"/><text x="0.6460%" y="1183.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (2,853,380,293 samples, 61.43%)</title><rect x="0.3960%" y="1157" width="61.4324%" height="15" fill="rgb(224,201,9)" fg:x="18391007" fg:w="2853380293"/><text x="0.6460%" y="1167.50">tokio::runtime::context::set_scheduler::_{{closure}}</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (2,853,380,293 samples, 61.43%)</title><rect x="0.3960%" y="1141" width="61.4324%" height="15" fill="rgb(229,206,30)" fg:x="18391007" fg:w="2853380293"/><text x="0.6460%" y="1151.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (2,853,380,293 samples, 61.43%)</title><rect x="0.3960%" y="1125" width="61.4324%" height="15" fill="rgb(212,67,47)" fg:x="18391007" fg:w="2853380293"/><text x="0.6460%" y="1135.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (2,853,380,293 samples, 61.43%)</title><rect x="0.3960%" y="1109" width="61.4324%" height="15" fill="rgb(211,96,50)" fg:x="18391007" fg:w="2853380293"/><text x="0.6460%" y="1119.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (6,368,151 samples, 0.14%)</title><rect x="61.6913%" y="1093" width="0.1371%" height="15" fill="rgb(252,114,18)" fg:x="2865403149" fg:w="6368151"/><text x="61.9413%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_searching (2,718,826 samples, 0.06%)</title><rect x="61.7699%" y="1077" width="0.0585%" height="15" fill="rgb(223,58,37)" fg:x="2869052474" fg:w="2718826"/><text x="62.0199%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_searching (2,718,826 samples, 0.06%)</title><rect x="61.7699%" y="1061" width="0.0585%" height="15" fill="rgb(237,70,4)" fg:x="2869052474" fg:w="2718826"/><text x="62.0199%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::inc_num_searching (1,748,403 samples, 0.04%)</title><rect x="61.7907%" y="1045" width="0.0376%" height="15" fill="rgb(244,85,46)" fg:x="2870022897" fg:w="1748403"/><text x="62.0407%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1,748,403 samples, 0.04%)</title><rect x="61.7907%" y="1029" width="0.0376%" height="15" fill="rgb(223,39,52)" fg:x="2870022897" fg:w="1748403"/><text x="62.0407%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_add (1,748,403 samples, 0.04%)</title><rect x="61.7907%" y="1013" width="0.0376%" height="15" fill="rgb(218,200,14)" fg:x="2870022897" fg:w="1748403"/><text x="62.0407%" y="1023.50"></text></g><g><title>[unknown] (24,218,473 samples, 0.52%)</title><rect x="61.8284%" y="1765" width="0.5214%" height="15" fill="rgb(208,171,16)" fg:x="2871771300" fg:w="24218473"/><text x="62.0784%" y="1775.50"></text></g><g><title>[libc.so.6] (15,538,982 samples, 0.33%)</title><rect x="62.0153%" y="1749" width="0.3345%" height="15" fill="rgb(234,200,18)" fg:x="2880450791" fg:w="15538982"/><text x="62.2653%" y="1759.50"></text></g><g><title>[unknown] (15,538,982 samples, 0.33%)</title><rect x="62.0153%" y="1733" width="0.3345%" height="15" fill="rgb(228,45,11)" fg:x="2880450791" fg:w="15538982"/><text x="62.2653%" y="1743.50"></text></g><g><title>[libc.so.6] (55,984,078 samples, 1.21%)</title><rect x="62.5668%" y="1589" width="1.2053%" height="15" fill="rgb(237,182,11)" fg:x="2906066730" fg:w="55984078"/><text x="62.8168%" y="1599.50"></text></g><g><title>[libc.so.6] (32,331,043 samples, 0.70%)</title><rect x="63.8364%" y="1573" width="0.6961%" height="15" fill="rgb(241,175,49)" fg:x="2965036530" fg:w="32331043"/><text x="64.0864%" y="1583.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_back (12,590,710 samples, 0.27%)</title><rect x="64.5324%" y="1573" width="0.2711%" height="15" fill="rgb(247,38,35)" fg:x="2997367573" fg:w="12590710"/><text x="64.7824%" y="1583.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (12,590,710 samples, 0.27%)</title><rect x="64.5324%" y="1557" width="0.2711%" height="15" fill="rgb(228,39,49)" fg:x="2997367573" fg:w="12590710"/><text x="64.7824%" y="1567.50"></text></g><g><title>core::ptr::read (12,590,710 samples, 0.27%)</title><rect x="64.5324%" y="1541" width="0.2711%" height="15" fill="rgb(226,101,26)" fg:x="2997367573" fg:w="12590710"/><text x="64.7824%" y="1551.50"></text></g><g><title>[libc.so.6] (12,590,710 samples, 0.27%)</title><rect x="64.5324%" y="1525" width="0.2711%" height="15" fill="rgb(206,141,19)" fg:x="2997367573" fg:w="12590710"/><text x="64.7824%" y="1535.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (6,602,810 samples, 0.14%)</title><rect x="64.8035%" y="1477" width="0.1422%" height="15" fill="rgb(211,200,13)" fg:x="3009958283" fg:w="6602810"/><text x="65.0535%" y="1487.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (6,602,810 samples, 0.14%)</title><rect x="64.8035%" y="1461" width="0.1422%" height="15" fill="rgb(241,121,6)" fg:x="3009958283" fg:w="6602810"/><text x="65.0535%" y="1471.50"></text></g><g><title>hashbrown::control::tag::Tag::full (1,526,932 samples, 0.03%)</title><rect x="64.9457%" y="1477" width="0.0329%" height="15" fill="rgb(234,221,29)" fg:x="3016561093" fg:w="1526932"/><text x="65.1957%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (1,306,257 samples, 0.03%)</title><rect x="64.9785%" y="1477" width="0.0281%" height="15" fill="rgb(229,136,5)" fg:x="3018088025" fg:w="1306257"/><text x="65.2285%" y="1487.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1,306,257 samples, 0.03%)</title><rect x="64.9785%" y="1461" width="0.0281%" height="15" fill="rgb(238,36,11)" fg:x="3018088025" fg:w="1306257"/><text x="65.2285%" y="1471.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (12,436,117 samples, 0.27%)</title><rect x="64.8035%" y="1525" width="0.2677%" height="15" fill="rgb(251,55,41)" fg:x="3009958283" fg:w="12436117"/><text x="65.0535%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (12,436,117 samples, 0.27%)</title><rect x="64.8035%" y="1509" width="0.2677%" height="15" fill="rgb(242,34,40)" fg:x="3009958283" fg:w="12436117"/><text x="65.0535%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (12,436,117 samples, 0.27%)</title><rect x="64.8035%" y="1493" width="0.2677%" height="15" fill="rgb(215,42,17)" fg:x="3009958283" fg:w="12436117"/><text x="65.0535%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (3,000,118 samples, 0.06%)</title><rect x="65.0067%" y="1477" width="0.0646%" height="15" fill="rgb(207,44,46)" fg:x="3019394282" fg:w="3000118"/><text x="65.2567%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (3,000,118 samples, 0.06%)</title><rect x="65.0067%" y="1461" width="0.0646%" height="15" fill="rgb(211,206,28)" fg:x="3019394282" fg:w="3000118"/><text x="65.2567%" y="1471.50"></text></g><g><title>hashbrown::control::tag::Tag::is_full (3,000,118 samples, 0.06%)</title><rect x="65.0067%" y="1445" width="0.0646%" height="15" fill="rgb(237,167,16)" fg:x="3019394282" fg:w="3000118"/><text x="65.2567%" y="1455.50"></text></g><g><title>pgdog::backend::pool::inner::Inner::take (61,646,106 samples, 1.33%)</title><rect x="63.7721%" y="1589" width="1.3272%" height="15" fill="rgb(233,66,6)" fg:x="2962050808" fg:w="61646106"/><text x="64.0221%" y="1599.50"></text></g><g><title>pgdog::backend::pool::taken::Taken::take (13,738,631 samples, 0.30%)</title><rect x="64.8035%" y="1573" width="0.2958%" height="15" fill="rgb(246,123,29)" fg:x="3009958283" fg:w="13738631"/><text x="65.0535%" y="1583.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (13,738,631 samples, 0.30%)</title><rect x="64.8035%" y="1557" width="0.2958%" height="15" fill="rgb(209,62,40)" fg:x="3009958283" fg:w="13738631"/><text x="65.0535%" y="1567.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13,738,631 samples, 0.30%)</title><rect x="64.8035%" y="1541" width="0.2958%" height="15" fill="rgb(218,4,25)" fg:x="3009958283" fg:w="13738631"/><text x="65.0535%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (1,302,514 samples, 0.03%)</title><rect x="65.0713%" y="1525" width="0.0280%" height="15" fill="rgb(253,91,49)" fg:x="3022394400" fg:w="1302514"/><text x="65.3213%" y="1535.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,302,514 samples, 0.03%)</title><rect x="65.0713%" y="1509" width="0.0280%" height="15" fill="rgb(228,155,29)" fg:x="3022394400" fg:w="1302514"/><text x="65.3213%" y="1519.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,302,514 samples, 0.03%)</title><rect x="65.0713%" y="1493" width="0.0280%" height="15" fill="rgb(243,57,37)" fg:x="3022394400" fg:w="1302514"/><text x="65.3213%" y="1503.50"></text></g><g><title>&lt;pgdog::net::messages::backend_key::BackendKeyData as core::hash::Hash&gt;::hash (1,302,514 samples, 0.03%)</title><rect x="65.0713%" y="1477" width="0.0280%" height="15" fill="rgb(244,167,17)" fg:x="3022394400" fg:w="1302514"/><text x="65.3213%" y="1487.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (1,302,514 samples, 0.03%)</title><rect x="65.0713%" y="1461" width="0.0280%" height="15" fill="rgb(207,181,38)" fg:x="3022394400" fg:w="1302514"/><text x="65.3213%" y="1471.50"></text></g><g><title>core::hash::Hasher::write_i32 (1,302,514 samples, 0.03%)</title><rect x="65.0713%" y="1445" width="0.0280%" height="15" fill="rgb(211,8,23)" fg:x="3022394400" fg:w="1302514"/><text x="65.3213%" y="1455.50"></text></g><g><title>core::hash::Hasher::write_u32 (1,302,514 samples, 0.03%)</title><rect x="65.0713%" y="1429" width="0.0280%" height="15" fill="rgb(235,11,44)" fg:x="3022394400" fg:w="1302514"/><text x="65.3213%" y="1439.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (1,302,514 samples, 0.03%)</title><rect x="65.0713%" y="1413" width="0.0280%" height="15" fill="rgb(248,18,52)" fg:x="3022394400" fg:w="1302514"/><text x="65.3213%" y="1423.50"></text></g><g><title>pgdog::backend::pool::pool_impl::Pool::lock (1,961,036 samples, 0.04%)</title><rect x="65.0993%" y="1589" width="0.0422%" height="15" fill="rgb(208,4,7)" fg:x="3023696914" fg:w="1961036"/><text x="65.3493%" y="1599.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1,961,036 samples, 0.04%)</title><rect x="65.0993%" y="1573" width="0.0422%" height="15" fill="rgb(240,17,39)" fg:x="3023696914" fg:w="1961036"/><text x="65.3493%" y="1583.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1,961,036 samples, 0.04%)</title><rect x="65.0993%" y="1557" width="0.0422%" height="15" fill="rgb(207,170,3)" fg:x="3023696914" fg:w="1961036"/><text x="65.3493%" y="1567.50"></text></g><g><title>[libc.so.6] (22,141,677 samples, 0.48%)</title><rect x="65.1415%" y="1573" width="0.4767%" height="15" fill="rgb(236,100,52)" fg:x="3025657950" fg:w="22141677"/><text x="65.3915%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::pool::healthcheck::Healtcheck::healthcheck::{{closure}}&gt; (1,444,534 samples, 0.03%)</title><rect x="65.6182%" y="1573" width="0.0311%" height="15" fill="rgb(246,78,51)" fg:x="3047799627" fg:w="1444534"/><text x="65.8682%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::pool::healthcheck::Healtcheck&gt; (1,092,187 samples, 0.02%)</title><rect x="65.6493%" y="1573" width="0.0235%" height="15" fill="rgb(211,17,15)" fg:x="3049244161" fg:w="1092187"/><text x="65.8993%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::pool::pool_impl::Pool&gt; (1,092,187 samples, 0.02%)</title><rect x="65.6493%" y="1557" width="0.0235%" height="15" fill="rgb(209,59,46)" fg:x="3049244161" fg:w="1092187"/><text x="65.8993%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;pgdog::backend::pool::pool_impl::InnerSync&gt;&gt; (1,092,187 samples, 0.02%)</title><rect x="65.6493%" y="1541" width="0.0235%" height="15" fill="rgb(210,92,25)" fg:x="3049244161" fg:w="1092187"/><text x="65.8993%" y="1551.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,092,187 samples, 0.02%)</title><rect x="65.6493%" y="1525" width="0.0235%" height="15" fill="rgb(238,174,52)" fg:x="3049244161" fg:w="1092187"/><text x="65.8993%" y="1535.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_default (3,708,162 samples, 0.08%)</title><rect x="65.9776%" y="1525" width="0.0798%" height="15" fill="rgb(230,73,7)" fg:x="3064490376" fg:w="3708162"/><text x="66.2276%" y="1535.50"></text></g><g><title>pgdog::backend::server::Server::healthcheck_age (4,889,350 samples, 0.11%)</title><rect x="65.9776%" y="1557" width="0.1053%" height="15" fill="rgb(243,124,40)" fg:x="3064490376" fg:w="4889350"/><text x="66.2276%" y="1567.50"></text></g><g><title>std::time::Instant::duration_since (4,889,350 samples, 0.11%)</title><rect x="65.9776%" y="1541" width="0.1053%" height="15" fill="rgb(244,170,11)" fg:x="3064490376" fg:w="4889350"/><text x="66.2276%" y="1551.50"></text></g><g><title>std::time::Instant::checked_duration_since (1,181,188 samples, 0.03%)</title><rect x="66.0574%" y="1525" width="0.0254%" height="15" fill="rgb(207,114,54)" fg:x="3068198538" fg:w="1181188"/><text x="66.3074%" y="1535.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (1,181,188 samples, 0.03%)</title><rect x="66.0574%" y="1509" width="0.0254%" height="15" fill="rgb(205,42,20)" fg:x="3068198538" fg:w="1181188"/><text x="66.3074%" y="1519.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (1,181,188 samples, 0.03%)</title><rect x="66.0574%" y="1493" width="0.0254%" height="15" fill="rgb(230,30,28)" fg:x="3068198538" fg:w="1181188"/><text x="66.3074%" y="1503.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (1,181,188 samples, 0.03%)</title><rect x="66.0574%" y="1477" width="0.0254%" height="15" fill="rgb(205,73,54)" fg:x="3068198538" fg:w="1181188"/><text x="66.3074%" y="1487.50"></text></g><g><title>core::cmp::PartialOrd::ge (1,181,188 samples, 0.03%)</title><rect x="66.0574%" y="1461" width="0.0254%" height="15" fill="rgb(254,227,23)" fg:x="3068198538" fg:w="1181188"/><text x="66.3074%" y="1471.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (1,181,188 samples, 0.03%)</title><rect x="66.0574%" y="1445" width="0.0254%" height="15" fill="rgb(228,202,34)" fg:x="3068198538" fg:w="1181188"/><text x="66.3074%" y="1455.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (1,181,188 samples, 0.03%)</title><rect x="66.0574%" y="1429" width="0.0254%" height="15" fill="rgb(222,225,37)" fg:x="3068198538" fg:w="1181188"/><text x="66.3074%" y="1439.50"></text></g><g><title>pgdog::frontend::client::Client::client_messages::_{{closure}} (182,149,421 samples, 3.92%)</title><rect x="62.3498%" y="1765" width="3.9216%" height="15" fill="rgb(221,14,54)" fg:x="2895989773" fg:w="182149421"/><text x="62.5998%" y="1775.50">pgdo..</text></g><g><title>pgdog::frontend::client::inner::Inner::connect::_{{closure}} (182,149,421 samples, 3.92%)</title><rect x="62.3498%" y="1749" width="3.9216%" height="15" fill="rgb(254,102,2)" fg:x="2895989773" fg:w="182149421"/><text x="62.5998%" y="1759.50">pgdo..</text></g><g><title>pgdog::backend::pool::connection::Connection::connect::_{{closure}} (182,149,421 samples, 3.92%)</title><rect x="62.3498%" y="1733" width="3.9216%" height="15" fill="rgb(232,104,17)" fg:x="2895989773" fg:w="182149421"/><text x="62.5998%" y="1743.50">pgdo..</text></g><g><title>pgdog::backend::pool::connection::Connection::try_conn::_{{closure}} (182,149,421 samples, 3.92%)</title><rect x="62.3498%" y="1717" width="3.9216%" height="15" fill="rgb(250,220,14)" fg:x="2895989773" fg:w="182149421"/><text x="62.5998%" y="1727.50">pgdo..</text></g><g><title>pgdog::backend::pool::cluster::Cluster::replica::_{{closure}} (182,149,421 samples, 3.92%)</title><rect x="62.3498%" y="1701" width="3.9216%" height="15" fill="rgb(241,158,9)" fg:x="2895989773" fg:w="182149421"/><text x="62.5998%" y="1711.50">pgdo..</text></g><g><title>pgdog::backend::pool::shard::Shard::replica::_{{closure}} (182,149,421 samples, 3.92%)</title><rect x="62.3498%" y="1685" width="3.9216%" height="15" fill="rgb(246,9,43)" fg:x="2895989773" fg:w="182149421"/><text x="62.5998%" y="1695.50">pgdo..</text></g><g><title>pgdog::backend::pool::replicas::Replicas::get::_{{closure}} (182,149,421 samples, 3.92%)</title><rect x="62.3498%" y="1669" width="3.9216%" height="15" fill="rgb(206,73,33)" fg:x="2895989773" fg:w="182149421"/><text x="62.5998%" y="1679.50">pgdo..</text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (182,149,421 samples, 3.92%)</title><rect x="62.3498%" y="1653" width="3.9216%" height="15" fill="rgb(222,79,8)" fg:x="2895989773" fg:w="182149421"/><text x="62.5998%" y="1663.50">&lt;tok..</text></g><g><title>pgdog::backend::pool::replicas::Replicas::get_internal::_{{closure}} (182,149,421 samples, 3.92%)</title><rect x="62.3498%" y="1637" width="3.9216%" height="15" fill="rgb(234,8,54)" fg:x="2895989773" fg:w="182149421"/><text x="62.5998%" y="1647.50">pgdo..</text></g><g><title>pgdog::backend::pool::pool_impl::Pool::get::_{{closure}} (182,149,421 samples, 3.92%)</title><rect x="62.3498%" y="1621" width="3.9216%" height="15" fill="rgb(209,134,38)" fg:x="2895989773" fg:w="182149421"/><text x="62.5998%" y="1631.50">pgdo..</text></g><g><title>pgdog::backend::pool::pool_impl::Pool::get_internal::_{{closure}} (182,149,421 samples, 3.92%)</title><rect x="62.3498%" y="1605" width="3.9216%" height="15" fill="rgb(230,127,29)" fg:x="2895989773" fg:w="182149421"/><text x="62.5998%" y="1615.50">pgdo..</text></g><g><title>pgdog::backend::pool::pool_impl::Pool::maybe_healthcheck::_{{closure}} (52,481,244 samples, 1.13%)</title><rect x="65.1415%" y="1589" width="1.1299%" height="15" fill="rgb(242,44,41)" fg:x="3025657950" fg:w="52481244"/><text x="65.3915%" y="1599.50"></text></g><g><title>pgdog::backend::pool::healthcheck::Healtcheck::healthcheck::_{{closure}} (27,802,846 samples, 0.60%)</title><rect x="65.6728%" y="1573" width="0.5986%" height="15" fill="rgb(222,56,43)" fg:x="3050336348" fg:w="27802846"/><text x="65.9228%" y="1583.50"></text></g><g><title>std::time::Instant::now (8,759,468 samples, 0.19%)</title><rect x="66.0828%" y="1557" width="0.1886%" height="15" fill="rgb(238,39,47)" fg:x="3069379726" fg:w="8759468"/><text x="66.3328%" y="1567.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (8,759,468 samples, 0.19%)</title><rect x="66.0828%" y="1541" width="0.1886%" height="15" fill="rgb(226,79,43)" fg:x="3069379726" fg:w="8759468"/><text x="66.3328%" y="1551.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (8,759,468 samples, 0.19%)</title><rect x="66.0828%" y="1525" width="0.1886%" height="15" fill="rgb(242,105,53)" fg:x="3069379726" fg:w="8759468"/><text x="66.3328%" y="1535.50"></text></g><g><title>clock_gettime (8,759,468 samples, 0.19%)</title><rect x="66.0828%" y="1509" width="0.1886%" height="15" fill="rgb(251,132,46)" fg:x="3069379726" fg:w="8759468"/><text x="66.3328%" y="1519.50"></text></g><g><title>__vdso_clock_gettime (8,759,468 samples, 0.19%)</title><rect x="66.0828%" y="1493" width="0.1886%" height="15" fill="rgb(231,77,14)" fg:x="3069379726" fg:w="8759468"/><text x="66.3328%" y="1503.50"></text></g><g><title>[libc.so.6] (27,034,670 samples, 0.58%)</title><rect x="66.3350%" y="1653" width="0.5820%" height="15" fill="rgb(240,135,9)" fg:x="3081090966" fg:w="27034670"/><text x="66.5850%" y="1663.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (49,834,010 samples, 1.07%)</title><rect x="66.9617%" y="1637" width="1.0729%" height="15" fill="rgb(248,109,14)" fg:x="3110200560" fg:w="49834010"/><text x="67.2117%" y="1647.50"></text></g><g><title>[libc.so.6] (49,834,010 samples, 1.07%)</title><rect x="66.9617%" y="1621" width="1.0729%" height="15" fill="rgb(227,146,52)" fg:x="3110200560" fg:w="49834010"/><text x="67.2117%" y="1631.50"></text></g><g><title>[libc.so.6] (7,607,882 samples, 0.16%)</title><rect x="68.2301%" y="1605" width="0.1638%" height="15" fill="rgb(232,54,3)" fg:x="3169115739" fg:w="7607882"/><text x="68.4801%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,pgdog::backend::pool::inner::Inner&gt;&gt; (2,278,309 samples, 0.05%)</title><rect x="68.3939%" y="1413" width="0.0491%" height="15" fill="rgb(229,201,43)" fg:x="3176723621" fg:w="2278309"/><text x="68.6439%" y="1423.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2,278,309 samples, 0.05%)</title><rect x="68.3939%" y="1397" width="0.0491%" height="15" fill="rgb(252,161,33)" fg:x="3176723621" fg:w="2278309"/><text x="68.6439%" y="1407.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2,278,309 samples, 0.05%)</title><rect x="68.3939%" y="1381" width="0.0491%" height="15" fill="rgb(226,146,40)" fg:x="3176723621" fg:w="2278309"/><text x="68.6439%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5,409,438 samples, 0.12%)</title><rect x="68.3939%" y="1541" width="0.1165%" height="15" fill="rgb(219,47,25)" fg:x="3176723621" fg:w="5409438"/><text x="68.6439%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (5,409,438 samples, 0.12%)</title><rect x="68.3939%" y="1525" width="0.1165%" height="15" fill="rgb(250,135,13)" fg:x="3176723621" fg:w="5409438"/><text x="68.6439%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5,409,438 samples, 0.12%)</title><rect x="68.3939%" y="1509" width="0.1165%" height="15" fill="rgb(219,229,18)" fg:x="3176723621" fg:w="5409438"/><text x="68.6439%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,409,438 samples, 0.12%)</title><rect x="68.3939%" y="1493" width="0.1165%" height="15" fill="rgb(217,152,27)" fg:x="3176723621" fg:w="5409438"/><text x="68.6439%" y="1503.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,409,438 samples, 0.12%)</title><rect x="68.3939%" y="1477" width="0.1165%" height="15" fill="rgb(225,71,47)" fg:x="3176723621" fg:w="5409438"/><text x="68.6439%" y="1487.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (5,409,438 samples, 0.12%)</title><rect x="68.3939%" y="1461" width="0.1165%" height="15" fill="rgb(220,139,14)" fg:x="3176723621" fg:w="5409438"/><text x="68.6439%" y="1471.50"></text></g><g><title>pgdog::backend::pool::replicas::Replicas::get_internal::_{{closure}}::_{{closure}} (5,409,438 samples, 0.12%)</title><rect x="68.3939%" y="1445" width="0.1165%" height="15" fill="rgb(247,54,32)" fg:x="3176723621" fg:w="5409438"/><text x="68.6439%" y="1455.50"></text></g><g><title>pgdog::backend::pool::pool_impl::Pool::banned (5,409,438 samples, 0.12%)</title><rect x="68.3939%" y="1429" width="0.1165%" height="15" fill="rgb(252,131,39)" fg:x="3176723621" fg:w="5409438"/><text x="68.6439%" y="1439.50"></text></g><g><title>pgdog::backend::pool::pool_impl::Pool::lock (3,131,129 samples, 0.07%)</title><rect x="68.4430%" y="1413" width="0.0674%" height="15" fill="rgb(210,108,39)" fg:x="3179001930" fg:w="3131129"/><text x="68.6930%" y="1423.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3,131,129 samples, 0.07%)</title><rect x="68.4430%" y="1397" width="0.0674%" height="15" fill="rgb(205,23,29)" fg:x="3179001930" fg:w="3131129"/><text x="68.6930%" y="1407.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3,131,129 samples, 0.07%)</title><rect x="68.4430%" y="1381" width="0.0674%" height="15" fill="rgb(246,139,46)" fg:x="3179001930" fg:w="3131129"/><text x="68.6930%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9,905,524 samples, 0.21%)</title><rect x="68.3939%" y="1605" width="0.2133%" height="15" fill="rgb(250,81,26)" fg:x="3176723621" fg:w="9905524"/><text x="68.6439%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9,905,524 samples, 0.21%)</title><rect x="68.3939%" y="1589" width="0.2133%" height="15" fill="rgb(214,104,7)" fg:x="3176723621" fg:w="9905524"/><text x="68.6439%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9,905,524 samples, 0.21%)</title><rect x="68.3939%" y="1573" width="0.2133%" height="15" fill="rgb(233,189,8)" fg:x="3176723621" fg:w="9905524"/><text x="68.6439%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9,905,524 samples, 0.21%)</title><rect x="68.3939%" y="1557" width="0.2133%" height="15" fill="rgb(228,141,17)" fg:x="3176723621" fg:w="9905524"/><text x="68.6439%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4,496,086 samples, 0.10%)</title><rect x="68.5104%" y="1541" width="0.0968%" height="15" fill="rgb(247,157,1)" fg:x="3182133059" fg:w="4496086"/><text x="68.7604%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,496,086 samples, 0.10%)</title><rect x="68.5104%" y="1525" width="0.0968%" height="15" fill="rgb(249,225,5)" fg:x="3182133059" fg:w="4496086"/><text x="68.7604%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,496,086 samples, 0.10%)</title><rect x="68.5104%" y="1509" width="0.0968%" height="15" fill="rgb(242,55,13)" fg:x="3182133059" fg:w="4496086"/><text x="68.7604%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,496,086 samples, 0.10%)</title><rect x="68.5104%" y="1493" width="0.0968%" height="15" fill="rgb(230,49,50)" fg:x="3182133059" fg:w="4496086"/><text x="68.7604%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,496,086 samples, 0.10%)</title><rect x="68.5104%" y="1477" width="0.0968%" height="15" fill="rgb(241,111,38)" fg:x="3182133059" fg:w="4496086"/><text x="68.7604%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,496,086 samples, 0.10%)</title><rect x="68.5104%" y="1461" width="0.0968%" height="15" fill="rgb(252,155,4)" fg:x="3182133059" fg:w="4496086"/><text x="68.7604%" y="1471.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,496,086 samples, 0.10%)</title><rect x="68.5104%" y="1445" width="0.0968%" height="15" fill="rgb(212,69,32)" fg:x="3182133059" fg:w="4496086"/><text x="68.7604%" y="1455.50"></text></g><g><title>alloc::alloc::alloc (4,496,086 samples, 0.10%)</title><rect x="68.5104%" y="1429" width="0.0968%" height="15" fill="rgb(243,107,47)" fg:x="3182133059" fg:w="4496086"/><text x="68.7604%" y="1439.50"></text></g><g><title>__rust_alloc (4,496,086 samples, 0.10%)</title><rect x="68.5104%" y="1413" width="0.0968%" height="15" fill="rgb(247,130,12)" fg:x="3182133059" fg:w="4496086"/><text x="68.7604%" y="1423.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4,496,086 samples, 0.10%)</title><rect x="68.5104%" y="1397" width="0.0968%" height="15" fill="rgb(233,74,16)" fg:x="3182133059" fg:w="4496086"/><text x="68.7604%" y="1407.50"></text></g><g><title>_rjem_malloc (4,496,086 samples, 0.10%)</title><rect x="68.5104%" y="1381" width="0.0968%" height="15" fill="rgb(208,58,18)" fg:x="3182133059" fg:w="4496086"/><text x="68.7604%" y="1391.50"></text></g><g><title>imalloc_fastpath (4,496,086 samples, 0.10%)</title><rect x="68.5104%" y="1365" width="0.0968%" height="15" fill="rgb(242,225,1)" fg:x="3182133059" fg:w="4496086"/><text x="68.7604%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(bool,&amp;pgdog::backend::pool::pool_impl::Pool)&gt;&gt; (2,621,792 samples, 0.06%)</title><rect x="68.6072%" y="1605" width="0.0564%" height="15" fill="rgb(249,39,40)" fg:x="3186629145" fg:w="2621792"/><text x="68.8572%" y="1615.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,621,792 samples, 0.06%)</title><rect x="68.6072%" y="1589" width="0.0564%" height="15" fill="rgb(207,72,44)" fg:x="3186629145" fg:w="2621792"/><text x="68.8572%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(bool,&amp;pgdog::backend::pool::pool_impl::Pool),alloc::alloc::Global&gt;&gt; (2,621,792 samples, 0.06%)</title><rect x="68.6072%" y="1573" width="0.0564%" height="15" fill="rgb(215,193,12)" fg:x="3186629145" fg:w="2621792"/><text x="68.8572%" y="1583.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,621,792 samples, 0.06%)</title><rect x="68.6072%" y="1557" width="0.0564%" height="15" fill="rgb(248,41,39)" fg:x="3186629145" fg:w="2621792"/><text x="68.8572%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(bool,&amp;pgdog::backend::pool::pool_impl::Pool)&gt;&gt; (2,621,792 samples, 0.06%)</title><rect x="68.6072%" y="1541" width="0.0564%" height="15" fill="rgb(253,85,4)" fg:x="3186629145" fg:w="2621792"/><text x="68.8572%" y="1551.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,621,792 samples, 0.06%)</title><rect x="68.6072%" y="1525" width="0.0564%" height="15" fill="rgb(243,70,31)" fg:x="3186629145" fg:w="2621792"/><text x="68.8572%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,621,792 samples, 0.06%)</title><rect x="68.6072%" y="1509" width="0.0564%" height="15" fill="rgb(253,195,26)" fg:x="3186629145" fg:w="2621792"/><text x="68.8572%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,621,792 samples, 0.06%)</title><rect x="68.6072%" y="1493" width="0.0564%" height="15" fill="rgb(243,42,11)" fg:x="3186629145" fg:w="2621792"/><text x="68.8572%" y="1503.50"></text></g><g><title>alloc::alloc::dealloc (2,621,792 samples, 0.06%)</title><rect x="68.6072%" y="1477" width="0.0564%" height="15" fill="rgb(239,66,17)" fg:x="3186629145" fg:w="2621792"/><text x="68.8572%" y="1487.50"></text></g><g><title>__rust_dealloc (2,621,792 samples, 0.06%)</title><rect x="68.6072%" y="1461" width="0.0564%" height="15" fill="rgb(217,132,21)" fg:x="3186629145" fg:w="2621792"/><text x="68.8572%" y="1471.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2,621,792 samples, 0.06%)</title><rect x="68.6072%" y="1445" width="0.0564%" height="15" fill="rgb(252,202,21)" fg:x="3186629145" fg:w="2621792"/><text x="68.8572%" y="1455.50"></text></g><g><title>_rjem_sdallocx (2,621,792 samples, 0.06%)</title><rect x="68.6072%" y="1429" width="0.0564%" height="15" fill="rgb(233,98,36)" fg:x="3186629145" fg:w="2621792"/><text x="68.8572%" y="1439.50"></text></g><g><title>free_fastpath (2,621,790 samples, 0.06%)</title><rect x="68.6072%" y="1413" width="0.0564%" height="15" fill="rgb(216,153,54)" fg:x="3186629147" fg:w="2621790"/><text x="68.8572%" y="1423.50"></text></g><g><title>[libc.so.6] (24,560,390 samples, 0.53%)</title><rect x="68.7011%" y="1589" width="0.5288%" height="15" fill="rgb(250,99,7)" fg:x="3190989658" fg:w="24560390"/><text x="68.9511%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::pool::pool_impl::Pool::get_internal::{{closure}}&gt; (3,168,889 samples, 0.07%)</title><rect x="69.2298%" y="1589" width="0.0682%" height="15" fill="rgb(207,56,50)" fg:x="3215550048" fg:w="3168889"/><text x="69.4798%" y="1599.50"></text></g><g><title>pgdog::backend::pool::pool_impl::Pool::get::_{{closure}} (30,483,652 samples, 0.66%)</title><rect x="68.6636%" y="1605" width="0.6563%" height="15" fill="rgb(244,61,34)" fg:x="3189250937" fg:w="30483652"/><text x="68.9136%" y="1615.50"></text></g><g><title>pgdog::backend::pool::pool_impl::Pool::get_internal::_{{closure}} (1,015,652 samples, 0.02%)</title><rect x="69.2981%" y="1589" width="0.0219%" height="15" fill="rgb(241,50,38)" fg:x="3218718937" fg:w="1015652"/><text x="69.5481%" y="1599.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (64,546,292 samples, 1.39%)</title><rect x="68.0346%" y="1637" width="1.3897%" height="15" fill="rgb(212,166,30)" fg:x="3160034570" fg:w="64546292"/><text x="68.2846%" y="1647.50"></text></g><g><title>pgdog::backend::pool::replicas::Replicas::get_internal::_{{closure}} (64,546,292 samples, 1.39%)</title><rect x="68.0346%" y="1621" width="1.3897%" height="15" fill="rgb(249,127,32)" fg:x="3160034570" fg:w="64546292"/><text x="68.2846%" y="1631.50"></text></g><g><title>rand::rngs::thread::thread_rng (4,846,273 samples, 0.10%)</title><rect x="69.3199%" y="1605" width="0.1043%" height="15" fill="rgb(209,103,0)" fg:x="3219734589" fg:w="4846273"/><text x="69.5699%" y="1615.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,846,273 samples, 0.10%)</title><rect x="69.3199%" y="1589" width="0.1043%" height="15" fill="rgb(238,209,51)" fg:x="3219734589" fg:w="4846273"/><text x="69.5699%" y="1599.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,846,273 samples, 0.10%)</title><rect x="69.3199%" y="1573" width="0.1043%" height="15" fill="rgb(237,56,23)" fg:x="3219734589" fg:w="4846273"/><text x="69.5699%" y="1583.50"></text></g><g><title>rand::rngs::thread::thread_rng::_{{closure}} (4,846,273 samples, 0.10%)</title><rect x="69.3199%" y="1557" width="0.1043%" height="15" fill="rgb(215,153,46)" fg:x="3219734589" fg:w="4846273"/><text x="69.5699%" y="1567.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,846,273 samples, 0.10%)</title><rect x="69.3199%" y="1541" width="0.1043%" height="15" fill="rgb(224,49,31)" fg:x="3219734589" fg:w="4846273"/><text x="69.5699%" y="1551.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (4,846,273 samples, 0.10%)</title><rect x="69.3199%" y="1525" width="0.1043%" height="15" fill="rgb(250,18,42)" fg:x="3219734589" fg:w="4846273"/><text x="69.5699%" y="1535.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (4,846,273 samples, 0.10%)</title><rect x="69.3199%" y="1509" width="0.1043%" height="15" fill="rgb(215,176,39)" fg:x="3219734589" fg:w="4846273"/><text x="69.5699%" y="1519.50"></text></g><g><title>[libc.so.6] (53,796,518 samples, 1.16%)</title><rect x="69.4243%" y="1637" width="1.1582%" height="15" fill="rgb(223,77,29)" fg:x="3224580862" fg:w="53796518"/><text x="69.6743%" y="1647.50"></text></g><g><title>&lt;tokio::runtime::time::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (2,461,743 samples, 0.05%)</title><rect x="70.6222%" y="1605" width="0.0530%" height="15" fill="rgb(234,94,52)" fg:x="3280220842" fg:w="2461743"/><text x="70.8722%" y="1615.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::cancel (928,055 samples, 0.02%)</title><rect x="70.6552%" y="1589" width="0.0200%" height="15" fill="rgb(220,154,50)" fg:x="3281754530" fg:w="928055"/><text x="70.9052%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::sleep::Sleep&gt; (6,225,150 samples, 0.13%)</title><rect x="70.5825%" y="1637" width="0.1340%" height="15" fill="rgb(212,11,10)" fg:x="3278377380" fg:w="6225150"/><text x="70.8325%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::time::entry::TimerEntry&gt; (4,381,688 samples, 0.09%)</title><rect x="70.6222%" y="1621" width="0.0943%" height="15" fill="rgb(205,166,19)" fg:x="3280220842" fg:w="4381688"/><text x="70.8722%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::scheduler::Handle&gt; (1,919,945 samples, 0.04%)</title><rect x="70.6752%" y="1605" width="0.0413%" height="15" fill="rgb(244,198,16)" fg:x="3282682585" fg:w="1919945"/><text x="70.9252%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::timeout::Timeout&lt;pgdog::backend::pool::replicas::Replicas::get_internal::{{closure}}&gt;&gt; (2,040,116 samples, 0.04%)</title><rect x="70.7165%" y="1637" width="0.0439%" height="15" fill="rgb(219,69,12)" fg:x="3284602530" fg:w="2040116"/><text x="70.9665%" y="1647.50"></text></g><g><title>[libc.so.6] (97,903,476 samples, 2.11%)</title><rect x="70.7868%" y="1621" width="2.1078%" height="15" fill="rgb(245,30,7)" fg:x="3287865747" fg:w="97903476"/><text x="71.0368%" y="1631.50">[..</text></g><g><title>clock_gettime (4,026,827 samples, 0.09%)</title><rect x="72.8946%" y="1541" width="0.0867%" height="15" fill="rgb(218,221,48)" fg:x="3385769223" fg:w="4026827"/><text x="73.1446%" y="1551.50"></text></g><g><title>__vdso_clock_gettime (4,026,827 samples, 0.09%)</title><rect x="72.8946%" y="1525" width="0.0867%" height="15" fill="rgb(216,66,15)" fg:x="3385769223" fg:w="4026827"/><text x="73.1446%" y="1535.50"></text></g><g><title>tokio::time::instant::Instant::now (5,096,657 samples, 0.11%)</title><rect x="72.8946%" y="1621" width="0.1097%" height="15" fill="rgb(226,122,50)" fg:x="3385769223" fg:w="5096657"/><text x="73.1446%" y="1631.50"></text></g><g><title>tokio::time::instant::variant::now (5,096,657 samples, 0.11%)</title><rect x="72.8946%" y="1605" width="0.1097%" height="15" fill="rgb(239,156,16)" fg:x="3385769223" fg:w="5096657"/><text x="73.1446%" y="1615.50"></text></g><g><title>std::time::Instant::now (5,096,657 samples, 0.11%)</title><rect x="72.8946%" y="1589" width="0.1097%" height="15" fill="rgb(224,27,38)" fg:x="3385769223" fg:w="5096657"/><text x="73.1446%" y="1599.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (5,096,657 samples, 0.11%)</title><rect x="72.8946%" y="1573" width="0.1097%" height="15" fill="rgb(224,39,27)" fg:x="3385769223" fg:w="5096657"/><text x="73.1446%" y="1583.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (5,096,657 samples, 0.11%)</title><rect x="72.8946%" y="1557" width="0.1097%" height="15" fill="rgb(215,92,29)" fg:x="3385769223" fg:w="5096657"/><text x="73.1446%" y="1567.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1,069,830 samples, 0.02%)</title><rect x="72.9813%" y="1541" width="0.0230%" height="15" fill="rgb(207,159,16)" fg:x="3389796050" fg:w="1069830"/><text x="73.2313%" y="1551.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,606,396 samples, 0.03%)</title><rect x="73.0401%" y="1557" width="0.0346%" height="15" fill="rgb(238,163,47)" fg:x="3392524785" fg:w="1606396"/><text x="73.2901%" y="1567.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (1,606,396 samples, 0.03%)</title><rect x="73.0401%" y="1541" width="0.0346%" height="15" fill="rgb(219,91,49)" fg:x="3392524785" fg:w="1606396"/><text x="73.2901%" y="1551.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (1,606,396 samples, 0.03%)</title><rect x="73.0401%" y="1525" width="0.0346%" height="15" fill="rgb(227,167,31)" fg:x="3392524785" fg:w="1606396"/><text x="73.2901%" y="1535.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,324,083 samples, 0.03%)</title><rect x="73.0746%" y="1541" width="0.0285%" height="15" fill="rgb(234,80,54)" fg:x="3394131181" fg:w="1324083"/><text x="73.3246%" y="1551.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,324,083 samples, 0.03%)</title><rect x="73.0746%" y="1525" width="0.0285%" height="15" fill="rgb(212,114,2)" fg:x="3394131181" fg:w="1324083"/><text x="73.3246%" y="1535.50"></text></g><g><title>&lt;tokio::runtime::scheduler::Handle as core::clone::Clone&gt;::clone (1,324,083 samples, 0.03%)</title><rect x="73.0746%" y="1509" width="0.0285%" height="15" fill="rgb(234,50,24)" fg:x="3394131181" fg:w="1324083"/><text x="73.3246%" y="1519.50"></text></g><g><title>pgdog::frontend::client::Client::run::_{{closure}} (318,588,674 samples, 6.86%)</title><rect x="66.2714%" y="1765" width="6.8591%" height="15" fill="rgb(221,68,8)" fg:x="3078139194" fg:w="318588674"/><text x="66.5214%" y="1775.50">pgdog::fr..</text></g><g><title>pgdog::frontend::client::Client::client_messages::_{{closure}} (318,588,674 samples, 6.86%)</title><rect x="66.2714%" y="1749" width="6.8591%" height="15" fill="rgb(254,180,31)" fg:x="3078139194" fg:w="318588674"/><text x="66.5214%" y="1759.50">pgdog::fr..</text></g><g><title>pgdog::frontend::client::inner::Inner::connect::_{{closure}} (318,588,674 samples, 6.86%)</title><rect x="66.2714%" y="1733" width="6.8591%" height="15" fill="rgb(247,130,50)" fg:x="3078139194" fg:w="318588674"/><text x="66.5214%" y="1743.50">pgdog::fr..</text></g><g><title>pgdog::backend::pool::connection::Connection::connect::_{{closure}} (318,588,674 samples, 6.86%)</title><rect x="66.2714%" y="1717" width="6.8591%" height="15" fill="rgb(211,109,4)" fg:x="3078139194" fg:w="318588674"/><text x="66.5214%" y="1727.50">pgdog::ba..</text></g><g><title>pgdog::backend::pool::connection::Connection::try_conn::_{{closure}} (318,588,674 samples, 6.86%)</title><rect x="66.2714%" y="1701" width="6.8591%" height="15" fill="rgb(238,50,21)" fg:x="3078139194" fg:w="318588674"/><text x="66.5214%" y="1711.50">pgdog::ba..</text></g><g><title>pgdog::backend::pool::cluster::Cluster::replica::_{{closure}} (318,588,674 samples, 6.86%)</title><rect x="66.2714%" y="1685" width="6.8591%" height="15" fill="rgb(225,57,45)" fg:x="3078139194" fg:w="318588674"/><text x="66.5214%" y="1695.50">pgdog::ba..</text></g><g><title>pgdog::backend::pool::shard::Shard::replica::_{{closure}} (318,588,674 samples, 6.86%)</title><rect x="66.2714%" y="1669" width="6.8591%" height="15" fill="rgb(209,196,50)" fg:x="3078139194" fg:w="318588674"/><text x="66.5214%" y="1679.50">pgdog::ba..</text></g><g><title>pgdog::backend::pool::replicas::Replicas::get::_{{closure}} (288,602,232 samples, 6.21%)</title><rect x="66.9170%" y="1653" width="6.2135%" height="15" fill="rgb(242,140,13)" fg:x="3108125636" fg:w="288602232"/><text x="67.1670%" y="1663.50">pgdog::b..</text></g><g><title>tokio::time::timeout::timeout (110,085,222 samples, 2.37%)</title><rect x="70.7604%" y="1637" width="2.3701%" height="15" fill="rgb(217,111,7)" fg:x="3286642646" fg:w="110085222"/><text x="71.0104%" y="1647.50">to..</text></g><g><title>tokio::time::sleep::Sleep::new_timeout (5,861,988 samples, 0.13%)</title><rect x="73.0043%" y="1621" width="0.1262%" height="15" fill="rgb(253,193,51)" fg:x="3390865880" fg:w="5861988"/><text x="73.2543%" y="1631.50"></text></g><g><title>tokio::runtime::scheduler::Handle::current (4,203,083 samples, 0.09%)</title><rect x="73.0401%" y="1605" width="0.0905%" height="15" fill="rgb(252,70,29)" fg:x="3392524785" fg:w="4203083"/><text x="73.2901%" y="1615.50"></text></g><g><title>tokio::runtime::context::current::with_current (4,203,083 samples, 0.09%)</title><rect x="73.0401%" y="1589" width="0.0905%" height="15" fill="rgb(232,127,12)" fg:x="3392524785" fg:w="4203083"/><text x="73.2901%" y="1599.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,203,083 samples, 0.09%)</title><rect x="73.0401%" y="1573" width="0.0905%" height="15" fill="rgb(211,180,21)" fg:x="3392524785" fg:w="4203083"/><text x="73.2901%" y="1583.50"></text></g><g><title>tokio::runtime::context::current::with_current::_{{closure}} (2,596,687 samples, 0.06%)</title><rect x="73.0746%" y="1557" width="0.0559%" height="15" fill="rgb(229,72,13)" fg:x="3394131181" fg:w="2596687"/><text x="73.3246%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;core::option::Option&lt;tokio::runtime::scheduler::Handle&gt;&gt;&gt; (1,272,604 samples, 0.03%)</title><rect x="73.1031%" y="1541" width="0.0274%" height="15" fill="rgb(240,211,49)" fg:x="3395455264" fg:w="1272604"/><text x="73.3531%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (1,272,604 samples, 0.03%)</title><rect x="73.1031%" y="1525" width="0.0274%" height="15" fill="rgb(219,149,40)" fg:x="3395455264" fg:w="1272604"/><text x="73.3531%" y="1535.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (1,272,604 samples, 0.03%)</title><rect x="73.1031%" y="1509" width="0.0274%" height="15" fill="rgb(210,127,46)" fg:x="3395455264" fg:w="1272604"/><text x="73.3531%" y="1519.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1,272,604 samples, 0.03%)</title><rect x="73.1031%" y="1493" width="0.0274%" height="15" fill="rgb(220,106,7)" fg:x="3395455264" fg:w="1272604"/><text x="73.3531%" y="1503.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1,272,604 samples, 0.03%)</title><rect x="73.1031%" y="1477" width="0.0274%" height="15" fill="rgb(249,31,22)" fg:x="3395455264" fg:w="1272604"/><text x="73.3531%" y="1487.50"></text></g><g><title>core::mem::replace (1,272,604 samples, 0.03%)</title><rect x="73.1031%" y="1461" width="0.0274%" height="15" fill="rgb(253,1,49)" fg:x="3395455264" fg:w="1272604"/><text x="73.3531%" y="1471.50"></text></g><g><title>core::ptr::write (1,272,604 samples, 0.03%)</title><rect x="73.1031%" y="1445" width="0.0274%" height="15" fill="rgb(227,144,33)" fg:x="3395455264" fg:w="1272604"/><text x="73.3531%" y="1455.50"></text></g><g><title>pgdog::frontend::client::Client::spawn::_{{closure}} (1,277,951 samples, 0.03%)</title><rect x="73.1305%" y="1765" width="0.0275%" height="15" fill="rgb(249,163,44)" fg:x="3396727868" fg:w="1277951"/><text x="73.3805%" y="1775.50"></text></g><g><title>pgdog::frontend::client::Client::spawn_internal::_{{closure}} (1,277,951 samples, 0.03%)</title><rect x="73.1305%" y="1749" width="0.0275%" height="15" fill="rgb(234,15,39)" fg:x="3396727868" fg:w="1277951"/><text x="73.3805%" y="1759.50"></text></g><g><title>pgdog::frontend::client::Client::run::_{{closure}} (1,277,951 samples, 0.03%)</title><rect x="73.1305%" y="1733" width="0.0275%" height="15" fill="rgb(207,66,16)" fg:x="3396727868" fg:w="1277951"/><text x="73.3805%" y="1743.50"></text></g><g><title>pgdog::frontend::client::Client::client_messages::_{{closure}} (1,277,951 samples, 0.03%)</title><rect x="73.1305%" y="1717" width="0.0275%" height="15" fill="rgb(233,112,24)" fg:x="3396727868" fg:w="1277951"/><text x="73.3805%" y="1727.50"></text></g><g><title>pgdog::frontend::client::inner::Inner::connect::_{{closure}} (1,277,951 samples, 0.03%)</title><rect x="73.1305%" y="1701" width="0.0275%" height="15" fill="rgb(230,90,22)" fg:x="3396727868" fg:w="1277951"/><text x="73.3805%" y="1711.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::connect::_{{closure}} (1,277,951 samples, 0.03%)</title><rect x="73.1305%" y="1685" width="0.0275%" height="15" fill="rgb(229,61,13)" fg:x="3396727868" fg:w="1277951"/><text x="73.3805%" y="1695.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::try_conn::_{{closure}} (1,277,951 samples, 0.03%)</title><rect x="73.1305%" y="1669" width="0.0275%" height="15" fill="rgb(225,57,24)" fg:x="3396727868" fg:w="1277951"/><text x="73.3805%" y="1679.50"></text></g><g><title>pgdog::backend::pool::cluster::Cluster::replica::_{{closure}} (1,277,951 samples, 0.03%)</title><rect x="73.1305%" y="1653" width="0.0275%" height="15" fill="rgb(208,169,48)" fg:x="3396727868" fg:w="1277951"/><text x="73.3805%" y="1663.50"></text></g><g><title>pgdog::backend::pool::shard::Shard::replica::_{{closure}} (1,277,951 samples, 0.03%)</title><rect x="73.1305%" y="1637" width="0.0275%" height="15" fill="rgb(244,218,51)" fg:x="3396727868" fg:w="1277951"/><text x="73.3805%" y="1647.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1653" width="0.0250%" height="15" fill="rgb(214,148,10)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1663.50"></text></g><g><title>pgdog::frontend::client::Client::client_messages::_{{closure}} (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1637" width="0.0250%" height="15" fill="rgb(225,174,27)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::client::inner::InnerBorrow&gt; (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1621" width="0.0250%" height="15" fill="rgb(230,96,26)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1631.50"></text></g><g><title>&lt;pgdog::frontend::client::inner::InnerBorrow as core::ops::drop::Drop&gt;::drop (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1605" width="0.0250%" height="15" fill="rgb(232,10,30)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1615.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::send::_{{closure}} (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1589" width="0.0250%" height="15" fill="rgb(222,8,50)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1599.50"></text></g><g><title>pgdog::backend::server::Server::send::_{{closure}} (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1573" width="0.0250%" height="15" fill="rgb(213,81,27)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1583.50"></text></g><g><title>pgdog::backend::server::Server::flush::_{{closure}} (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1557" width="0.0250%" height="15" fill="rgb(245,50,10)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1567.50"></text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1541" width="0.0250%" height="15" fill="rgb(216,100,18)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1551.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1525" width="0.0250%" height="15" fill="rgb(236,147,54)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1535.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1509" width="0.0250%" height="15" fill="rgb(205,143,26)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1519.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1493" width="0.0250%" height="15" fill="rgb(236,26,9)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1503.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1477" width="0.0250%" height="15" fill="rgb(221,165,53)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1487.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1461" width="0.0250%" height="15" fill="rgb(214,110,17)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1471.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1445" width="0.0250%" height="15" fill="rgb(237,197,12)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1455.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1429" width="0.0250%" height="15" fill="rgb(205,84,17)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1439.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1413" width="0.0250%" height="15" fill="rgb(237,18,45)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1423.50"></text></g><g><title>std::sys::net::connection::socket::TcpStream::write (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1397" width="0.0250%" height="15" fill="rgb(221,87,14)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1407.50"></text></g><g><title>__send (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1381" width="0.0250%" height="15" fill="rgb(238,186,15)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1391.50"></text></g><g><title>[libc.so.6] (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1365" width="0.0250%" height="15" fill="rgb(208,115,11)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1375.50"></text></g><g><title>[libc.so.6] (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1349" width="0.0250%" height="15" fill="rgb(254,175,0)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1359.50"></text></g><g><title>[libc.so.6] (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1333" width="0.0250%" height="15" fill="rgb(227,24,42)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1343.50"></text></g><g><title>[unknown] (1,159,739 samples, 0.02%)</title><rect x="73.1581%" y="1317" width="0.0250%" height="15" fill="rgb(223,211,37)" fg:x="3398005819" fg:w="1159739"/><text x="73.4081%" y="1327.50"></text></g><g><title>pgdog::frontend::client::Client::buffer::_{{closure}} (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1653" width="0.0793%" height="15" fill="rgb(235,49,27)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1663.50"></text></g><g><title>pgdog::frontend::client::Client::client_messages::_{{closure}} (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1637" width="0.0793%" height="15" fill="rgb(254,97,51)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::client::inner::InnerBorrow&gt; (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1621" width="0.0793%" height="15" fill="rgb(249,51,40)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1631.50"></text></g><g><title>&lt;pgdog::frontend::client::inner::InnerBorrow as core::ops::drop::Drop&gt;::drop (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1605" width="0.0793%" height="15" fill="rgb(210,128,45)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1615.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::send::_{{closure}} (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1589" width="0.0793%" height="15" fill="rgb(224,137,50)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1599.50"></text></g><g><title>pgdog::backend::server::Server::send::_{{closure}} (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1573" width="0.0793%" height="15" fill="rgb(242,15,9)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1583.50"></text></g><g><title>pgdog::backend::server::Server::flush::_{{closure}} (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1557" width="0.0793%" height="15" fill="rgb(233,187,41)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1567.50"></text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1541" width="0.0793%" height="15" fill="rgb(227,2,29)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1551.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1525" width="0.0793%" height="15" fill="rgb(222,70,3)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1535.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1509" width="0.0793%" height="15" fill="rgb(213,11,42)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1519.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1493" width="0.0793%" height="15" fill="rgb(225,150,9)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1503.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1477" width="0.0793%" height="15" fill="rgb(230,162,45)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1487.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1461" width="0.0793%" height="15" fill="rgb(222,14,52)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1471.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1445" width="0.0793%" height="15" fill="rgb(254,198,14)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1455.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1429" width="0.0793%" height="15" fill="rgb(220,217,30)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1439.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1413" width="0.0793%" height="15" fill="rgb(215,146,41)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1423.50"></text></g><g><title>std::sys::net::connection::socket::TcpStream::write (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1397" width="0.0793%" height="15" fill="rgb(217,27,36)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1407.50"></text></g><g><title>__send (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1381" width="0.0793%" height="15" fill="rgb(219,218,39)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1391.50"></text></g><g><title>[libc.so.6] (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1365" width="0.0793%" height="15" fill="rgb(219,4,42)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1375.50"></text></g><g><title>[libc.so.6] (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1349" width="0.0793%" height="15" fill="rgb(249,119,36)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1359.50"></text></g><g><title>[libc.so.6] (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1333" width="0.0793%" height="15" fill="rgb(209,23,33)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1343.50"></text></g><g><title>[unknown] (3,684,824 samples, 0.08%)</title><rect x="73.1830%" y="1317" width="0.0793%" height="15" fill="rgb(211,10,0)" fg:x="3399165558" fg:w="3684824"/><text x="73.4330%" y="1327.50"></text></g><g><title>&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (9,523,214 samples, 0.21%)</title><rect x="73.1581%" y="1685" width="0.2050%" height="15" fill="rgb(208,99,37)" fg:x="3398005819" fg:w="9523214"/><text x="73.4081%" y="1695.50"></text></g><g><title>pgdog::frontend::client::Client::run::_{{closure}}::_{{closure}} (9,523,214 samples, 0.21%)</title><rect x="73.1581%" y="1669" width="0.2050%" height="15" fill="rgb(213,132,31)" fg:x="3398005819" fg:w="9523214"/><text x="73.4081%" y="1679.50"></text></g><g><title>pgdog::frontend::client::Client::client_messages::_{{closure}} (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1653" width="0.1007%" height="15" fill="rgb(243,129,40)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::client::inner::InnerBorrow&gt; (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1637" width="0.1007%" height="15" fill="rgb(210,66,33)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1647.50"></text></g><g><title>&lt;pgdog::frontend::client::inner::InnerBorrow as core::ops::drop::Drop&gt;::drop (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1621" width="0.1007%" height="15" fill="rgb(209,189,4)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1631.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::send::_{{closure}} (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1605" width="0.1007%" height="15" fill="rgb(214,107,37)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1615.50"></text></g><g><title>pgdog::backend::server::Server::send::_{{closure}} (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1589" width="0.1007%" height="15" fill="rgb(245,88,54)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1599.50"></text></g><g><title>pgdog::backend::server::Server::flush::_{{closure}} (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1573" width="0.1007%" height="15" fill="rgb(205,146,20)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1583.50"></text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1557" width="0.1007%" height="15" fill="rgb(220,161,25)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1567.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1541" width="0.1007%" height="15" fill="rgb(215,152,15)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1551.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1525" width="0.1007%" height="15" fill="rgb(233,192,44)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1535.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1509" width="0.1007%" height="15" fill="rgb(240,170,46)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1519.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1493" width="0.1007%" height="15" fill="rgb(207,104,33)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1503.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1477" width="0.1007%" height="15" fill="rgb(219,21,39)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1487.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1461" width="0.1007%" height="15" fill="rgb(214,133,29)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1471.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1445" width="0.1007%" height="15" fill="rgb(226,93,6)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1455.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1429" width="0.1007%" height="15" fill="rgb(252,222,34)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1439.50"></text></g><g><title>std::sys::net::connection::socket::TcpStream::write (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1413" width="0.1007%" height="15" fill="rgb(252,92,48)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1423.50"></text></g><g><title>__send (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1397" width="0.1007%" height="15" fill="rgb(245,223,24)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1407.50"></text></g><g><title>[libc.so.6] (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1381" width="0.1007%" height="15" fill="rgb(205,176,3)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1391.50"></text></g><g><title>[libc.so.6] (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1365" width="0.1007%" height="15" fill="rgb(235,151,15)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1375.50"></text></g><g><title>[libc.so.6] (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1349" width="0.1007%" height="15" fill="rgb(237,209,11)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1359.50"></text></g><g><title>[unknown] (4,678,651 samples, 0.10%)</title><rect x="73.2624%" y="1333" width="0.1007%" height="15" fill="rgb(243,227,24)" fg:x="3402850382" fg:w="4678651"/><text x="73.5124%" y="1343.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (6,429,870 samples, 0.14%)</title><rect x="73.6964%" y="1669" width="0.1384%" height="15" fill="rgb(239,193,16)" fg:x="3423009039" fg:w="6429870"/><text x="73.9464%" y="1679.50"></text></g><g><title>[libc.so.6] (6,429,870 samples, 0.14%)</title><rect x="73.6964%" y="1653" width="0.1384%" height="15" fill="rgb(231,27,9)" fg:x="3423009039" fg:w="6429870"/><text x="73.9464%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::server::Server::link_client::{{closure}}&gt; (5,289,643 samples, 0.11%)</title><rect x="74.0764%" y="1621" width="0.1139%" height="15" fill="rgb(219,169,10)" fg:x="3440662246" fg:w="5289643"/><text x="74.3264%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::parameter::MergeResult&gt; (6,027,246 samples, 0.13%)</title><rect x="74.2503%" y="1605" width="0.1298%" height="15" fill="rgb(244,229,43)" fg:x="3448737411" fg:w="6027246"/><text x="74.5003%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;pgdog::net::messages::query::Query&gt;&gt; (6,027,246 samples, 0.13%)</title><rect x="74.2503%" y="1589" width="0.1298%" height="15" fill="rgb(254,38,20)" fg:x="3448737411" fg:w="6027246"/><text x="74.5003%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;pgdog::net::messages::query::Query&gt;&gt; (2,886,335 samples, 0.06%)</title><rect x="74.3179%" y="1573" width="0.0621%" height="15" fill="rgb(250,47,30)" fg:x="3451878322" fg:w="2886335"/><text x="74.5679%" y="1583.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,886,335 samples, 0.06%)</title><rect x="74.3179%" y="1557" width="0.0621%" height="15" fill="rgb(224,124,36)" fg:x="3451878322" fg:w="2886335"/><text x="74.5679%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,886,335 samples, 0.06%)</title><rect x="74.3179%" y="1541" width="0.0621%" height="15" fill="rgb(246,68,51)" fg:x="3451878322" fg:w="2886335"/><text x="74.5679%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (2,886,335 samples, 0.06%)</title><rect x="74.3179%" y="1525" width="0.0621%" height="15" fill="rgb(253,43,49)" fg:x="3451878322" fg:w="2886335"/><text x="74.5679%" y="1535.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,581,169 samples, 0.03%)</title><rect x="74.4425%" y="1589" width="0.0340%" height="15" fill="rgb(219,54,36)" fg:x="3457662688" fg:w="1581169"/><text x="74.6925%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,581,169 samples, 0.03%)</title><rect x="74.4425%" y="1573" width="0.0340%" height="15" fill="rgb(227,133,34)" fg:x="3457662688" fg:w="1581169"/><text x="74.6925%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,581,169 samples, 0.03%)</title><rect x="74.4425%" y="1557" width="0.0340%" height="15" fill="rgb(247,227,15)" fg:x="3457662688" fg:w="1581169"/><text x="74.6925%" y="1567.50"></text></g><g><title>&lt;&amp;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,104,381 samples, 0.02%)</title><rect x="74.4765%" y="1589" width="0.0238%" height="15" fill="rgb(229,96,14)" fg:x="3459243857" fg:w="1104381"/><text x="74.7265%" y="1599.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1,104,381 samples, 0.02%)</title><rect x="74.4765%" y="1573" width="0.0238%" height="15" fill="rgb(220,79,17)" fg:x="3459243857" fg:w="1104381"/><text x="74.7265%" y="1583.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1,104,381 samples, 0.02%)</title><rect x="74.4765%" y="1557" width="0.0238%" height="15" fill="rgb(205,131,53)" fg:x="3459243857" fg:w="1104381"/><text x="74.7265%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1,104,381 samples, 0.02%)</title><rect x="74.4765%" y="1541" width="0.0238%" height="15" fill="rgb(209,50,29)" fg:x="3459243857" fg:w="1104381"/><text x="74.7265%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1,104,381 samples, 0.02%)</title><rect x="74.4765%" y="1525" width="0.0238%" height="15" fill="rgb(245,86,46)" fg:x="3459243857" fg:w="1104381"/><text x="74.7265%" y="1535.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1,104,381 samples, 0.02%)</title><rect x="74.4765%" y="1509" width="0.0238%" height="15" fill="rgb(235,66,46)" fg:x="3459243857" fg:w="1104381"/><text x="74.7265%" y="1519.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_full (1,104,381 samples, 0.02%)</title><rect x="74.4765%" y="1493" width="0.0238%" height="15" fill="rgb(232,148,31)" fg:x="3459243857" fg:w="1104381"/><text x="74.7265%" y="1503.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty_or_deleted (1,104,381 samples, 0.02%)</title><rect x="74.4765%" y="1477" width="0.0238%" height="15" fill="rgb(217,149,8)" fg:x="3459243857" fg:w="1104381"/><text x="74.7265%" y="1487.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,104,381 samples, 0.02%)</title><rect x="74.4765%" y="1461" width="0.0238%" height="15" fill="rgb(209,183,11)" fg:x="3459243857" fg:w="1104381"/><text x="74.7265%" y="1471.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (16,382,066 samples, 0.35%)</title><rect x="74.5003%" y="1589" width="0.3527%" height="15" fill="rgb(208,55,20)" fg:x="3460348238" fg:w="16382066"/><text x="74.7503%" y="1599.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (9,590,302 samples, 0.21%)</title><rect x="74.6465%" y="1573" width="0.2065%" height="15" fill="rgb(218,39,14)" fg:x="3467140002" fg:w="9590302"/><text x="74.8965%" y="1583.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (9,590,302 samples, 0.21%)</title><rect x="74.6465%" y="1557" width="0.2065%" height="15" fill="rgb(216,169,33)" fg:x="3467140002" fg:w="9590302"/><text x="74.8965%" y="1567.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (9,590,302 samples, 0.21%)</title><rect x="74.6465%" y="1541" width="0.2065%" height="15" fill="rgb(233,80,24)" fg:x="3467140002" fg:w="9590302"/><text x="74.8965%" y="1551.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (9,590,302 samples, 0.21%)</title><rect x="74.6465%" y="1525" width="0.2065%" height="15" fill="rgb(213,179,31)" fg:x="3467140002" fg:w="9590302"/><text x="74.8965%" y="1535.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (9,590,302 samples, 0.21%)</title><rect x="74.6465%" y="1509" width="0.2065%" height="15" fill="rgb(209,19,5)" fg:x="3467140002" fg:w="9590302"/><text x="74.8965%" y="1519.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (9,590,302 samples, 0.21%)</title><rect x="74.6465%" y="1493" width="0.2065%" height="15" fill="rgb(219,18,35)" fg:x="3467140002" fg:w="9590302"/><text x="74.8965%" y="1503.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (9,590,302 samples, 0.21%)</title><rect x="74.6465%" y="1477" width="0.2065%" height="15" fill="rgb(209,169,16)" fg:x="3467140002" fg:w="9590302"/><text x="74.8965%" y="1487.50"></text></g><g><title>[libc.so.6] (5,674,512 samples, 0.12%)</title><rect x="74.7308%" y="1461" width="0.1222%" height="15" fill="rgb(245,90,51)" fg:x="3471055792" fg:w="5674512"/><text x="74.9808%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,601,048 samples, 0.03%)</title><rect x="74.9885%" y="1461" width="0.0345%" height="15" fill="rgb(220,99,45)" fg:x="3483024760" fg:w="1601048"/><text x="75.2385%" y="1471.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,601,048 samples, 0.03%)</title><rect x="74.9885%" y="1445" width="0.0345%" height="15" fill="rgb(249,89,25)" fg:x="3483024760" fg:w="1601048"/><text x="75.2385%" y="1455.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,040,680 samples, 0.02%)</title><rect x="75.0669%" y="1445" width="0.0224%" height="15" fill="rgb(239,193,0)" fg:x="3486667728" fg:w="1040680"/><text x="75.3169%" y="1455.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (7,475,471 samples, 0.16%)</title><rect x="74.9576%" y="1509" width="0.1609%" height="15" fill="rgb(231,126,1)" fg:x="3481590416" fg:w="7475471"/><text x="75.2076%" y="1519.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7,475,471 samples, 0.16%)</title><rect x="74.9576%" y="1493" width="0.1609%" height="15" fill="rgb(243,166,3)" fg:x="3481590416" fg:w="7475471"/><text x="75.2076%" y="1503.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7,475,471 samples, 0.16%)</title><rect x="74.9576%" y="1477" width="0.1609%" height="15" fill="rgb(223,22,34)" fg:x="3481590416" fg:w="7475471"/><text x="75.2076%" y="1487.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4,440,079 samples, 0.10%)</title><rect x="75.0230%" y="1461" width="0.0956%" height="15" fill="rgb(251,52,51)" fg:x="3484625808" fg:w="4440079"/><text x="75.2730%" y="1471.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,357,479 samples, 0.03%)</title><rect x="75.0893%" y="1445" width="0.0292%" height="15" fill="rgb(221,165,28)" fg:x="3487708408" fg:w="1357479"/><text x="75.3393%" y="1455.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (1,707,511 samples, 0.04%)</title><rect x="75.1186%" y="1509" width="0.0368%" height="15" fill="rgb(218,121,47)" fg:x="3489065887" fg:w="1707511"/><text x="75.3686%" y="1519.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (791,582 samples, 0.02%)</title><rect x="75.1383%" y="1493" width="0.0170%" height="15" fill="rgb(209,120,9)" fg:x="3489981816" fg:w="791582"/><text x="75.3883%" y="1503.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (791,582 samples, 0.02%)</title><rect x="75.1383%" y="1477" width="0.0170%" height="15" fill="rgb(236,68,12)" fg:x="3489981816" fg:w="791582"/><text x="75.3883%" y="1487.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (791,582 samples, 0.02%)</title><rect x="75.1383%" y="1461" width="0.0170%" height="15" fill="rgb(225,194,26)" fg:x="3489981816" fg:w="791582"/><text x="75.3883%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7,777,311 samples, 0.17%)</title><rect x="75.1553%" y="1413" width="0.1674%" height="15" fill="rgb(231,84,39)" fg:x="3490773398" fg:w="7777311"/><text x="75.4053%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (921,300 samples, 0.02%)</title><rect x="75.3029%" y="1397" width="0.0198%" height="15" fill="rgb(210,11,45)" fg:x="3497629409" fg:w="921300"/><text x="75.5529%" y="1407.50"></text></g><g><title>hashbrown::map::make_hash (29,118,897 samples, 0.63%)</title><rect x="74.8530%" y="1541" width="0.6269%" height="15" fill="rgb(224,54,52)" fg:x="3476730304" fg:w="29118897"/><text x="75.1030%" y="1551.50"></text></g><g><title>core::hash::BuildHasher::hash_one (27,755,586 samples, 0.60%)</title><rect x="74.8823%" y="1525" width="0.5976%" height="15" fill="rgb(238,102,14)" fg:x="3478093615" fg:w="27755586"/><text x="75.1323%" y="1535.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (15,075,803 samples, 0.32%)</title><rect x="75.1553%" y="1509" width="0.3246%" height="15" fill="rgb(243,160,52)" fg:x="3490773398" fg:w="15075803"/><text x="75.4053%" y="1519.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (15,075,803 samples, 0.32%)</title><rect x="75.1553%" y="1493" width="0.3246%" height="15" fill="rgb(216,114,19)" fg:x="3490773398" fg:w="15075803"/><text x="75.4053%" y="1503.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (15,075,803 samples, 0.32%)</title><rect x="75.1553%" y="1477" width="0.3246%" height="15" fill="rgb(244,166,37)" fg:x="3490773398" fg:w="15075803"/><text x="75.4053%" y="1487.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (15,075,803 samples, 0.32%)</title><rect x="75.1553%" y="1461" width="0.3246%" height="15" fill="rgb(246,29,44)" fg:x="3490773398" fg:w="15075803"/><text x="75.4053%" y="1471.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (15,075,803 samples, 0.32%)</title><rect x="75.1553%" y="1445" width="0.3246%" height="15" fill="rgb(215,56,53)" fg:x="3490773398" fg:w="15075803"/><text x="75.4053%" y="1455.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (15,075,803 samples, 0.32%)</title><rect x="75.1553%" y="1429" width="0.3246%" height="15" fill="rgb(217,60,2)" fg:x="3490773398" fg:w="15075803"/><text x="75.4053%" y="1439.50"></text></g><g><title>core::hash::Hasher::write_u8 (7,298,492 samples, 0.16%)</title><rect x="75.3228%" y="1413" width="0.1571%" height="15" fill="rgb(207,26,24)" fg:x="3498550709" fg:w="7298492"/><text x="75.5728%" y="1423.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7,298,492 samples, 0.16%)</title><rect x="75.3228%" y="1397" width="0.1571%" height="15" fill="rgb(252,210,15)" fg:x="3498550709" fg:w="7298492"/><text x="75.5728%" y="1407.50"></text></g><g><title>core::hash::sip::u8to64_le (5,797,679 samples, 0.12%)</title><rect x="75.3551%" y="1381" width="0.1248%" height="15" fill="rgb(253,209,26)" fg:x="3500051522" fg:w="5797679"/><text x="75.6051%" y="1391.50"></text></g><g><title>hashbrown::control::tag::Tag::full (1,769,708 samples, 0.04%)</title><rect x="75.4799%" y="1493" width="0.0381%" height="15" fill="rgb(238,170,14)" fg:x="3505849201" fg:w="1769708"/><text x="75.7299%" y="1503.50"></text></g><g><title>&lt;tokio::time::timeout::Timeout&lt;T&gt; as core::future::future::Future&gt;::poll (90,464,420 samples, 1.95%)</title><rect x="73.8348%" y="1669" width="1.9477%" height="15" fill="rgb(216,178,15)" fg:x="3429438909" fg:w="90464420"/><text x="74.0848%" y="1679.50">&lt;..</text></g><g><title>pgdog::backend::pool::connection::Connection::link_client::_{{closure}} (90,464,420 samples, 1.95%)</title><rect x="73.8348%" y="1653" width="1.9477%" height="15" fill="rgb(250,197,2)" fg:x="3429438909" fg:w="90464420"/><text x="74.0848%" y="1663.50">p..</text></g><g><title>pgdog::backend::pool::connection::binding::Binding::link_client::_{{closure}} (86,570,668 samples, 1.86%)</title><rect x="73.9186%" y="1637" width="1.8638%" height="15" fill="rgb(212,70,42)" fg:x="3433332661" fg:w="86570668"/><text x="74.1686%" y="1647.50">p..</text></g><g><title>pgdog::backend::server::Server::link_client::_{{closure}} (73,951,440 samples, 1.59%)</title><rect x="74.1903%" y="1621" width="1.5922%" height="15" fill="rgb(227,213,9)" fg:x="3445951889" fg:w="73951440"/><text x="74.4403%" y="1631.50"></text></g><g><title>pgdog::net::parameter::Parameters::merge (65,138,672 samples, 1.40%)</title><rect x="74.3801%" y="1605" width="1.4024%" height="15" fill="rgb(245,99,25)" fg:x="3454764657" fg:w="65138672"/><text x="74.6301%" y="1615.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (43,173,025 samples, 0.93%)</title><rect x="74.8530%" y="1589" width="0.9295%" height="15" fill="rgb(250,82,29)" fg:x="3476730304" fg:w="43173025"/><text x="75.1030%" y="1599.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (43,173,025 samples, 0.93%)</title><rect x="74.8530%" y="1573" width="0.9295%" height="15" fill="rgb(241,226,54)" fg:x="3476730304" fg:w="43173025"/><text x="75.1030%" y="1583.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (43,173,025 samples, 0.93%)</title><rect x="74.8530%" y="1557" width="0.9295%" height="15" fill="rgb(221,99,41)" fg:x="3476730304" fg:w="43173025"/><text x="75.1030%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (14,054,128 samples, 0.30%)</title><rect x="75.4799%" y="1541" width="0.3026%" height="15" fill="rgb(213,90,21)" fg:x="3505849201" fg:w="14054128"/><text x="75.7299%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14,054,128 samples, 0.30%)</title><rect x="75.4799%" y="1525" width="0.3026%" height="15" fill="rgb(205,208,24)" fg:x="3505849201" fg:w="14054128"/><text x="75.7299%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (14,054,128 samples, 0.30%)</title><rect x="75.4799%" y="1509" width="0.3026%" height="15" fill="rgb(246,31,12)" fg:x="3505849201" fg:w="14054128"/><text x="75.7299%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (12,284,420 samples, 0.26%)</title><rect x="75.5180%" y="1493" width="0.2645%" height="15" fill="rgb(213,154,6)" fg:x="3507618909" fg:w="12284420"/><text x="75.7680%" y="1503.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (12,284,420 samples, 0.26%)</title><rect x="75.5180%" y="1477" width="0.2645%" height="15" fill="rgb(222,163,29)" fg:x="3507618909" fg:w="12284420"/><text x="75.7680%" y="1487.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (12,284,420 samples, 0.26%)</title><rect x="75.5180%" y="1461" width="0.2645%" height="15" fill="rgb(227,201,8)" fg:x="3507618909" fg:w="12284420"/><text x="75.7680%" y="1471.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12,284,420 samples, 0.26%)</title><rect x="75.5180%" y="1445" width="0.2645%" height="15" fill="rgb(233,9,32)" fg:x="3507618909" fg:w="12284420"/><text x="75.7680%" y="1455.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (12,284,420 samples, 0.26%)</title><rect x="75.5180%" y="1429" width="0.2645%" height="15" fill="rgb(217,54,24)" fg:x="3507618909" fg:w="12284420"/><text x="75.7680%" y="1439.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (12,284,420 samples, 0.26%)</title><rect x="75.5180%" y="1413" width="0.2645%" height="15" fill="rgb(235,192,0)" fg:x="3507618909" fg:w="12284420"/><text x="75.7680%" y="1423.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (12,284,420 samples, 0.26%)</title><rect x="75.5180%" y="1397" width="0.2645%" height="15" fill="rgb(235,45,9)" fg:x="3507618909" fg:w="12284420"/><text x="75.7680%" y="1407.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (12,284,420 samples, 0.26%)</title><rect x="75.5180%" y="1381" width="0.2645%" height="15" fill="rgb(246,42,40)" fg:x="3507618909" fg:w="12284420"/><text x="75.7680%" y="1391.50"></text></g><g><title>[libc.so.6] (5,246,795 samples, 0.11%)</title><rect x="75.6695%" y="1365" width="0.1130%" height="15" fill="rgb(248,111,24)" fg:x="3514656534" fg:w="5246795"/><text x="75.9195%" y="1375.50"></text></g><g><title>[libc.so.6] (7,573,538 samples, 0.16%)</title><rect x="75.7825%" y="1669" width="0.1631%" height="15" fill="rgb(249,65,22)" fg:x="3519903329" fg:w="7573538"/><text x="76.0325%" y="1679.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1,363,595 samples, 0.03%)</title><rect x="75.9455%" y="1669" width="0.0294%" height="15" fill="rgb(238,111,51)" fg:x="3527476867" fg:w="1363595"/><text x="76.1955%" y="1679.50"></text></g><g><title>core::mem::replace (1,363,595 samples, 0.03%)</title><rect x="75.9455%" y="1653" width="0.0294%" height="15" fill="rgb(250,118,22)" fg:x="3527476867" fg:w="1363595"/><text x="76.1955%" y="1663.50"></text></g><g><title>core::ptr::read (1,363,595 samples, 0.03%)</title><rect x="75.9455%" y="1637" width="0.0294%" height="15" fill="rgb(234,84,26)" fg:x="3527476867" fg:w="1363595"/><text x="76.1955%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::timeout::Timeout&lt;pgdog::backend::pool::connection::Connection::link_client::{{closure}}&gt;&gt; (1,342,021 samples, 0.03%)</title><rect x="75.9749%" y="1669" width="0.0289%" height="15" fill="rgb(243,172,12)" fg:x="3528840462" fg:w="1342021"/><text x="76.2249%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::time::sleep::Sleep&gt; (1,342,021 samples, 0.03%)</title><rect x="75.9749%" y="1653" width="0.0289%" height="15" fill="rgb(236,150,49)" fg:x="3528840462" fg:w="1342021"/><text x="76.2249%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::time::entry::TimerEntry&gt; (1,342,021 samples, 0.03%)</title><rect x="75.9749%" y="1637" width="0.0289%" height="15" fill="rgb(225,197,26)" fg:x="3528840462" fg:w="1342021"/><text x="76.2249%" y="1647.50"></text></g><g><title>&lt;tokio::runtime::time::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (1,342,021 samples, 0.03%)</title><rect x="75.9749%" y="1621" width="0.0289%" height="15" fill="rgb(214,17,42)" fg:x="3528840462" fg:w="1342021"/><text x="76.2249%" y="1631.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::cancel (1,342,021 samples, 0.03%)</title><rect x="75.9749%" y="1605" width="0.0289%" height="15" fill="rgb(224,165,40)" fg:x="3528840462" fg:w="1342021"/><text x="76.2249%" y="1615.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::link_client (1,681,113 samples, 0.04%)</title><rect x="76.0038%" y="1669" width="0.0362%" height="15" fill="rgb(246,100,4)" fg:x="3530182483" fg:w="1681113"/><text x="76.2538%" y="1679.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (19,267,485 samples, 0.41%)</title><rect x="77.1311%" y="1621" width="0.4148%" height="15" fill="rgb(222,103,0)" fg:x="3582545723" fg:w="19267485"/><text x="77.3811%" y="1631.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (17,794,702 samples, 0.38%)</title><rect x="77.1629%" y="1605" width="0.3831%" height="15" fill="rgb(227,189,26)" fg:x="3584018506" fg:w="17794702"/><text x="77.4129%" y="1615.50"></text></g><g><title>core::ptr::read (17,794,702 samples, 0.38%)</title><rect x="77.1629%" y="1589" width="0.3831%" height="15" fill="rgb(214,202,17)" fg:x="3584018506" fg:w="17794702"/><text x="77.4129%" y="1599.50"></text></g><g><title>[libc.so.6] (17,794,702 samples, 0.38%)</title><rect x="77.1629%" y="1573" width="0.3831%" height="15" fill="rgb(229,111,3)" fg:x="3584018506" fg:w="17794702"/><text x="77.4129%" y="1583.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,357,916 samples, 0.03%)</title><rect x="77.5460%" y="1621" width="0.0292%" height="15" fill="rgb(229,172,15)" fg:x="3601813208" fg:w="1357916"/><text x="77.7960%" y="1631.50"></text></g><g><title>[libc.so.6] (4,646,447 samples, 0.10%)</title><rect x="77.5752%" y="1621" width="0.1000%" height="15" fill="rgb(230,224,35)" fg:x="3603171124" fg:w="4646447"/><text x="77.8252%" y="1631.50"></text></g><g><title>_rjem_sdallocx (9,571,255 samples, 0.21%)</title><rect x="77.6752%" y="1621" width="0.2061%" height="15" fill="rgb(251,141,6)" fg:x="3607817571" fg:w="9571255"/><text x="77.9252%" y="1631.50"></text></g><g><title>free_fastpath (9,571,255 samples, 0.21%)</title><rect x="77.6752%" y="1605" width="0.2061%" height="15" fill="rgb(225,208,6)" fg:x="3607817571" fg:w="9571255"/><text x="77.9252%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage&gt;&gt; (1,265,195 samples, 0.03%)</title><rect x="77.8813%" y="1621" width="0.0272%" height="15" fill="rgb(246,181,16)" fg:x="3617388826" fg:w="1265195"/><text x="78.1313%" y="1631.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,265,195 samples, 0.03%)</title><rect x="77.8813%" y="1605" width="0.0272%" height="15" fill="rgb(227,129,36)" fg:x="3617388826" fg:w="1265195"/><text x="78.1313%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;[pgdog::backend::protocol::protocol_message::ProtocolMessage]&gt; (1,265,195 samples, 0.03%)</title><rect x="77.8813%" y="1589" width="0.0272%" height="15" fill="rgb(248,117,24)" fg:x="3617388826" fg:w="1265195"/><text x="78.1313%" y="1599.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (332,627,392 samples, 7.16%)</title><rect x="78.0867%" y="1541" width="7.1614%" height="15" fill="rgb(214,185,35)" fg:x="3626929900" fg:w="332627392"/><text x="78.3367%" y="1551.50">&lt;&amp;mio::net..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (332,627,392 samples, 7.16%)</title><rect x="78.0867%" y="1525" width="7.1614%" height="15" fill="rgb(236,150,34)" fg:x="3626929900" fg:w="332627392"/><text x="78.3367%" y="1535.50">mio::io_so..</text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (332,627,392 samples, 7.16%)</title><rect x="78.0867%" y="1509" width="7.1614%" height="15" fill="rgb(243,228,27)" fg:x="3626929900" fg:w="332627392"/><text x="78.3367%" y="1519.50">mio::sys::..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (332,627,392 samples, 7.16%)</title><rect x="78.0867%" y="1493" width="7.1614%" height="15" fill="rgb(245,77,44)" fg:x="3626929900" fg:w="332627392"/><text x="78.3367%" y="1503.50">&lt;&amp;mio::net..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (332,627,392 samples, 7.16%)</title><rect x="78.0867%" y="1477" width="7.1614%" height="15" fill="rgb(235,214,42)" fg:x="3626929900" fg:w="332627392"/><text x="78.3367%" y="1487.50">&lt;&amp;std::net..</text></g><g><title>std::sys::net::connection::socket::TcpStream::write (332,627,392 samples, 7.16%)</title><rect x="78.0867%" y="1461" width="7.1614%" height="15" fill="rgb(221,74,3)" fg:x="3626929900" fg:w="332627392"/><text x="78.3367%" y="1471.50">std::sys::..</text></g><g><title>__send (332,627,392 samples, 7.16%)</title><rect x="78.0867%" y="1445" width="7.1614%" height="15" fill="rgb(206,121,29)" fg:x="3626929900" fg:w="332627392"/><text x="78.3367%" y="1455.50">__send</text></g><g><title>[libc.so.6] (332,627,392 samples, 7.16%)</title><rect x="78.0867%" y="1429" width="7.1614%" height="15" fill="rgb(249,131,53)" fg:x="3626929900" fg:w="332627392"/><text x="78.3367%" y="1439.50">[libc.so.6]</text></g><g><title>[libc.so.6] (332,627,392 samples, 7.16%)</title><rect x="78.0867%" y="1413" width="7.1614%" height="15" fill="rgb(236,170,29)" fg:x="3626929900" fg:w="332627392"/><text x="78.3367%" y="1423.50">[libc.so.6]</text></g><g><title>[libc.so.6] (332,627,392 samples, 7.16%)</title><rect x="78.0867%" y="1397" width="7.1614%" height="15" fill="rgb(247,96,15)" fg:x="3626929900" fg:w="332627392"/><text x="78.3367%" y="1407.50">[libc.so.6]</text></g><g><title>[unknown] (332,627,392 samples, 7.16%)</title><rect x="78.0867%" y="1381" width="7.1614%" height="15" fill="rgb(211,210,7)" fg:x="3626929900" fg:w="332627392"/><text x="78.3367%" y="1391.50">[unknown]</text></g><g><title>[unknown] (327,417,337 samples, 7.05%)</title><rect x="78.1989%" y="1365" width="7.0492%" height="15" fill="rgb(240,88,50)" fg:x="3632139955" fg:w="327417337"/><text x="78.4489%" y="1375.50">[unknown]</text></g><g><title>[unknown] (321,481,287 samples, 6.92%)</title><rect x="78.3267%" y="1349" width="6.9214%" height="15" fill="rgb(209,229,26)" fg:x="3638076005" fg:w="321481287"/><text x="78.5767%" y="1359.50">[unknown]</text></g><g><title>[unknown] (321,481,287 samples, 6.92%)</title><rect x="78.3267%" y="1333" width="6.9214%" height="15" fill="rgb(210,68,23)" fg:x="3638076005" fg:w="321481287"/><text x="78.5767%" y="1343.50">[unknown]</text></g><g><title>[unknown] (292,545,406 samples, 6.30%)</title><rect x="78.9497%" y="1317" width="6.2984%" height="15" fill="rgb(229,180,13)" fg:x="3667011886" fg:w="292545406"/><text x="79.1997%" y="1327.50">[unknown]</text></g><g><title>[unknown] (259,506,966 samples, 5.59%)</title><rect x="79.6610%" y="1301" width="5.5871%" height="15" fill="rgb(236,53,44)" fg:x="3700050326" fg:w="259506966"/><text x="79.9110%" y="1311.50">[unknow..</text></g><g><title>[unknown] (219,117,846 samples, 4.72%)</title><rect x="80.5306%" y="1285" width="4.7175%" height="15" fill="rgb(244,214,29)" fg:x="3740439446" fg:w="219117846"/><text x="80.7806%" y="1295.50">[unkn..</text></g><g><title>[unknown] (180,863,549 samples, 3.89%)</title><rect x="81.3542%" y="1269" width="3.8939%" height="15" fill="rgb(220,75,29)" fg:x="3778693743" fg:w="180863549"/><text x="81.6042%" y="1279.50">[unk..</text></g><g><title>[unknown] (88,994,609 samples, 1.92%)</title><rect x="83.3321%" y="1253" width="1.9160%" height="15" fill="rgb(214,183,37)" fg:x="3870562683" fg:w="88994609"/><text x="83.5821%" y="1263.50">[..</text></g><g><title>[unknown] (39,978,690 samples, 0.86%)</title><rect x="84.3874%" y="1237" width="0.8607%" height="15" fill="rgb(239,117,29)" fg:x="3919578602" fg:w="39978690"/><text x="84.6374%" y="1247.50"></text></g><g><title>[unknown] (10,961,204 samples, 0.24%)</title><rect x="85.0121%" y="1221" width="0.2360%" height="15" fill="rgb(237,171,35)" fg:x="3948596088" fg:w="10961204"/><text x="85.2621%" y="1231.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (1,641,800 samples, 0.04%)</title><rect x="85.3905%" y="1509" width="0.0353%" height="15" fill="rgb(229,178,53)" fg:x="3966170110" fg:w="1641800"/><text x="85.6405%" y="1519.50"></text></g><g><title>tokio::runtime::context::budget (1,641,800 samples, 0.04%)</title><rect x="85.3905%" y="1493" width="0.0353%" height="15" fill="rgb(210,102,19)" fg:x="3966170110" fg:w="1641800"/><text x="85.6405%" y="1503.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,641,800 samples, 0.04%)</title><rect x="85.3905%" y="1477" width="0.0353%" height="15" fill="rgb(235,127,22)" fg:x="3966170110" fg:w="1641800"/><text x="85.6405%" y="1487.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (1,641,800 samples, 0.04%)</title><rect x="85.3905%" y="1461" width="0.0353%" height="15" fill="rgb(244,31,31)" fg:x="3966170110" fg:w="1641800"/><text x="85.6405%" y="1471.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (1,641,800 samples, 0.04%)</title><rect x="85.3905%" y="1445" width="0.0353%" height="15" fill="rgb(231,43,21)" fg:x="3966170110" fg:w="1641800"/><text x="85.6405%" y="1455.50"></text></g><g><title>tokio::runtime::coop::Budget::decrement (1,641,800 samples, 0.04%)</title><rect x="85.3905%" y="1429" width="0.0353%" height="15" fill="rgb(217,131,35)" fg:x="3966170110" fg:w="1641800"/><text x="85.6405%" y="1439.50"></text></g><g><title>pgdog::backend::server::Server::flush::_{{closure}} (350,726,656 samples, 7.55%)</title><rect x="77.9085%" y="1621" width="7.5510%" height="15" fill="rgb(221,149,4)" fg:x="3618654021" fg:w="350726656"/><text x="78.1585%" y="1631.50">pgdog::bac..</text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (350,726,656 samples, 7.55%)</title><rect x="77.9085%" y="1605" width="7.5510%" height="15" fill="rgb(232,170,28)" fg:x="3618654021" fg:w="350726656"/><text x="78.1585%" y="1615.50">tokio::io:..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (350,726,656 samples, 7.55%)</title><rect x="77.9085%" y="1589" width="7.5510%" height="15" fill="rgb(238,56,10)" fg:x="3618654021" fg:w="350726656"/><text x="78.1585%" y="1599.50">&lt;tokio::ne..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (347,363,870 samples, 7.48%)</title><rect x="77.9809%" y="1573" width="7.4786%" height="15" fill="rgb(235,196,14)" fg:x="3622016807" fg:w="347363870"/><text x="78.2309%" y="1583.50">tokio::net..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (347,363,870 samples, 7.48%)</title><rect x="77.9809%" y="1557" width="7.4786%" height="15" fill="rgb(216,45,48)" fg:x="3622016807" fg:w="347363870"/><text x="78.2309%" y="1567.50">tokio::io:..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (9,823,385 samples, 0.21%)</title><rect x="85.2481%" y="1541" width="0.2115%" height="15" fill="rgb(238,213,17)" fg:x="3959557292" fg:w="9823385"/><text x="85.4981%" y="1551.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (3,210,567 samples, 0.07%)</title><rect x="85.3905%" y="1525" width="0.0691%" height="15" fill="rgb(212,13,2)" fg:x="3966170110" fg:w="3210567"/><text x="85.6405%" y="1535.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1,568,767 samples, 0.03%)</title><rect x="85.4258%" y="1509" width="0.0338%" height="15" fill="rgb(240,114,20)" fg:x="3967811910" fg:w="1568767"/><text x="85.6758%" y="1519.50"></text></g><g><title>tokio::runtime::io::driver::Direction::mask (1,568,767 samples, 0.03%)</title><rect x="85.4258%" y="1493" width="0.0338%" height="15" fill="rgb(228,41,40)" fg:x="3967811910" fg:w="1568767"/><text x="85.6758%" y="1503.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (30,473,292 samples, 0.66%)</title><rect x="86.0507%" y="1605" width="0.6561%" height="15" fill="rgb(244,132,35)" fg:x="3996837869" fg:w="30473292"/><text x="86.3007%" y="1615.50"></text></g><g><title>&lt;T as core::convert::From&lt;T&gt;&gt;::from (30,473,292 samples, 0.66%)</title><rect x="86.0507%" y="1589" width="0.6561%" height="15" fill="rgb(253,189,4)" fg:x="3996837869" fg:w="30473292"/><text x="86.3007%" y="1599.50"></text></g><g><title>[libc.so.6] (30,473,292 samples, 0.66%)</title><rect x="86.0507%" y="1573" width="0.6561%" height="15" fill="rgb(224,37,19)" fg:x="3996837869" fg:w="30473292"/><text x="86.3007%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,727,601 samples, 0.06%)</title><rect x="86.7606%" y="1573" width="0.0587%" height="15" fill="rgb(235,223,18)" fg:x="4029811070" fg:w="2727601"/><text x="87.0106%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2,727,601 samples, 0.06%)</title><rect x="86.7606%" y="1557" width="0.0587%" height="15" fill="rgb(235,163,25)" fg:x="4029811070" fg:w="2727601"/><text x="87.0106%" y="1567.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,727,601 samples, 0.06%)</title><rect x="86.7606%" y="1541" width="0.0587%" height="15" fill="rgb(217,145,28)" fg:x="4029811070" fg:w="2727601"/><text x="87.0106%" y="1551.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (2,727,601 samples, 0.06%)</title><rect x="86.7606%" y="1525" width="0.0587%" height="15" fill="rgb(223,223,32)" fg:x="4029811070" fg:w="2727601"/><text x="87.0106%" y="1535.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (2,727,601 samples, 0.06%)</title><rect x="86.7606%" y="1509" width="0.0587%" height="15" fill="rgb(227,189,39)" fg:x="4029811070" fg:w="2727601"/><text x="87.0106%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (36,633,363 samples, 0.79%)</title><rect x="86.7068%" y="1605" width="0.7887%" height="15" fill="rgb(248,10,22)" fg:x="4027311161" fg:w="36633363"/><text x="86.9568%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (36,633,363 samples, 0.79%)</title><rect x="86.7068%" y="1589" width="0.7887%" height="15" fill="rgb(248,46,39)" fg:x="4027311161" fg:w="36633363"/><text x="86.9568%" y="1599.50"></text></g><g><title>[libc.so.6] (31,405,853 samples, 0.68%)</title><rect x="86.8194%" y="1573" width="0.6762%" height="15" fill="rgb(248,113,48)" fg:x="4032538671" fg:w="31405853"/><text x="87.0694%" y="1583.50"></text></g><g><title>[libc.so.6] (70,802,693 samples, 1.52%)</title><rect x="87.4955%" y="1605" width="1.5244%" height="15" fill="rgb(245,16,25)" fg:x="4063944524" fg:w="70802693"/><text x="87.7455%" y="1615.50"></text></g><g><title>_rjem_sdallocx (3,110,254 samples, 0.07%)</title><rect x="89.0199%" y="1605" width="0.0670%" height="15" fill="rgb(249,152,16)" fg:x="4134747217" fg:w="3110254"/><text x="89.2699%" y="1615.50"></text></g><g><title>free_fastpath (3,110,254 samples, 0.07%)</title><rect x="89.0199%" y="1589" width="0.0670%" height="15" fill="rgb(250,16,1)" fg:x="4134747217" fg:w="3110254"/><text x="89.2699%" y="1599.50"></text></g><g><title>cache_bin_dalloc_easy (3,110,254 samples, 0.07%)</title><rect x="89.0199%" y="1573" width="0.0670%" height="15" fill="rgb(249,138,3)" fg:x="4134747217" fg:w="3110254"/><text x="89.2699%" y="1583.50"></text></g><g><title>bytes::bytes::shared_drop (10,346,564 samples, 0.22%)</title><rect x="89.0868%" y="1605" width="0.2228%" height="15" fill="rgb(227,71,41)" fg:x="4137857471" fg:w="10346564"/><text x="89.3368%" y="1615.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (10,346,564 samples, 0.22%)</title><rect x="89.0868%" y="1589" width="0.2228%" height="15" fill="rgb(209,184,23)" fg:x="4137857471" fg:w="10346564"/><text x="89.3368%" y="1599.50"></text></g><g><title>bytes::bytes::shared_drop::_{{closure}} (10,346,564 samples, 0.22%)</title><rect x="89.0868%" y="1573" width="0.2228%" height="15" fill="rgb(223,215,31)" fg:x="4137857471" fg:w="10346564"/><text x="89.3368%" y="1583.50"></text></g><g><title>bytes::bytes::release_shared (9,600,510 samples, 0.21%)</title><rect x="89.1029%" y="1557" width="0.2067%" height="15" fill="rgb(210,146,28)" fg:x="4138603525" fg:w="9600510"/><text x="89.3529%" y="1567.50"></text></g><g><title>core::mem::drop (8,287,032 samples, 0.18%)</title><rect x="89.1312%" y="1541" width="0.1784%" height="15" fill="rgb(209,183,41)" fg:x="4139917003" fg:w="8287032"/><text x="89.3812%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (8,287,032 samples, 0.18%)</title><rect x="89.1312%" y="1525" width="0.1784%" height="15" fill="rgb(209,224,45)" fg:x="4139917003" fg:w="8287032"/><text x="89.3812%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (7,031,085 samples, 0.15%)</title><rect x="89.1582%" y="1509" width="0.1514%" height="15" fill="rgb(224,209,51)" fg:x="4141172950" fg:w="7031085"/><text x="89.4082%" y="1519.50"></text></g><g><title>&lt;bytes::bytes::Shared as core::ops::drop::Drop&gt;::drop (7,031,085 samples, 0.15%)</title><rect x="89.1582%" y="1493" width="0.1514%" height="15" fill="rgb(223,17,39)" fg:x="4141172950" fg:w="7031085"/><text x="89.4082%" y="1503.50"></text></g><g><title>alloc::alloc::dealloc (7,031,085 samples, 0.15%)</title><rect x="89.1582%" y="1477" width="0.1514%" height="15" fill="rgb(234,204,37)" fg:x="4141172950" fg:w="7031085"/><text x="89.4082%" y="1487.50"></text></g><g><title>__rust_dealloc (7,031,085 samples, 0.15%)</title><rect x="89.1582%" y="1461" width="0.1514%" height="15" fill="rgb(236,120,5)" fg:x="4141172950" fg:w="7031085"/><text x="89.4082%" y="1471.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (7,031,085 samples, 0.15%)</title><rect x="89.1582%" y="1445" width="0.1514%" height="15" fill="rgb(248,97,27)" fg:x="4141172950" fg:w="7031085"/><text x="89.4082%" y="1455.50"></text></g><g><title>_rjem_sdallocx (7,031,085 samples, 0.15%)</title><rect x="89.1582%" y="1429" width="0.1514%" height="15" fill="rgb(240,66,17)" fg:x="4141172950" fg:w="7031085"/><text x="89.4082%" y="1439.50"></text></g><g><title>free_fastpath (7,031,085 samples, 0.15%)</title><rect x="89.1582%" y="1413" width="0.1514%" height="15" fill="rgb(210,79,3)" fg:x="4141172950" fg:w="7031085"/><text x="89.4082%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;core::array::iter::IntoIter&lt;core::option::Option&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage&gt;,2_usize&gt;&gt;&gt; (3,162,773 samples, 0.07%)</title><rect x="89.3096%" y="1605" width="0.0681%" height="15" fill="rgb(214,176,27)" fg:x="4148204035" fg:w="3162773"/><text x="89.5596%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::messages::describe::Describe&gt; (2,608,953 samples, 0.06%)</title><rect x="89.5214%" y="1589" width="0.0562%" height="15" fill="rgb(235,185,3)" fg:x="4158043281" fg:w="2608953"/><text x="89.7714%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,608,953 samples, 0.06%)</title><rect x="89.5214%" y="1573" width="0.0562%" height="15" fill="rgb(227,24,12)" fg:x="4158043281" fg:w="2608953"/><text x="89.7714%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,608,953 samples, 0.06%)</title><rect x="89.5214%" y="1557" width="0.0562%" height="15" fill="rgb(252,169,48)" fg:x="4158043281" fg:w="2608953"/><text x="89.7714%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,608,953 samples, 0.06%)</title><rect x="89.5214%" y="1541" width="0.0562%" height="15" fill="rgb(212,65,1)" fg:x="4158043281" fg:w="2608953"/><text x="89.7714%" y="1551.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,608,953 samples, 0.06%)</title><rect x="89.5214%" y="1525" width="0.0562%" height="15" fill="rgb(242,39,24)" fg:x="4158043281" fg:w="2608953"/><text x="89.7714%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,608,953 samples, 0.06%)</title><rect x="89.5214%" y="1509" width="0.0562%" height="15" fill="rgb(249,32,23)" fg:x="4158043281" fg:w="2608953"/><text x="89.7714%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,608,953 samples, 0.06%)</title><rect x="89.5214%" y="1493" width="0.0562%" height="15" fill="rgb(251,195,23)" fg:x="4158043281" fg:w="2608953"/><text x="89.7714%" y="1503.50"></text></g><g><title>alloc::alloc::dealloc (2,608,953 samples, 0.06%)</title><rect x="89.5214%" y="1477" width="0.0562%" height="15" fill="rgb(236,174,8)" fg:x="4158043281" fg:w="2608953"/><text x="89.7714%" y="1487.50"></text></g><g><title>__rust_dealloc (2,608,953 samples, 0.06%)</title><rect x="89.5214%" y="1461" width="0.0562%" height="15" fill="rgb(220,197,8)" fg:x="4158043281" fg:w="2608953"/><text x="89.7714%" y="1471.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2,608,953 samples, 0.06%)</title><rect x="89.5214%" y="1445" width="0.0562%" height="15" fill="rgb(240,108,37)" fg:x="4158043281" fg:w="2608953"/><text x="89.7714%" y="1455.50"></text></g><g><title>_rjem_sdallocx (2,686,943 samples, 0.06%)</title><rect x="89.6586%" y="1541" width="0.0578%" height="15" fill="rgb(232,176,24)" fg:x="4164415437" fg:w="2686943"/><text x="89.9086%" y="1551.50"></text></g><g><title>free_fastpath (2,686,943 samples, 0.06%)</title><rect x="89.6586%" y="1525" width="0.0578%" height="15" fill="rgb(243,35,29)" fg:x="4164415437" fg:w="2686943"/><text x="89.9086%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;rustls::msgs::base::PayloadU16,&amp;alloc::alloc::Global&gt;&gt; (1,124,270 samples, 0.02%)</title><rect x="89.7165%" y="1525" width="0.0242%" height="15" fill="rgb(210,37,18)" fg:x="4167102380" fg:w="1124270"/><text x="89.9665%" y="1535.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,124,270 samples, 0.02%)</title><rect x="89.7165%" y="1509" width="0.0242%" height="15" fill="rgb(224,184,40)" fg:x="4167102380" fg:w="1124270"/><text x="89.9665%" y="1519.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (6,892,200 samples, 0.15%)</title><rect x="89.7165%" y="1541" width="0.1484%" height="15" fill="rgb(236,39,29)" fg:x="4167102380" fg:w="6892200"/><text x="89.9665%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;rustls::msgs::base::PayloadU16&gt; (5,767,930 samples, 0.12%)</title><rect x="89.7407%" y="1525" width="0.1242%" height="15" fill="rgb(232,48,39)" fg:x="4168226650" fg:w="5767930"/><text x="89.9907%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5,767,930 samples, 0.12%)</title><rect x="89.7407%" y="1509" width="0.1242%" height="15" fill="rgb(236,34,42)" fg:x="4168226650" fg:w="5767930"/><text x="89.9907%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5,767,930 samples, 0.12%)</title><rect x="89.7407%" y="1493" width="0.1242%" height="15" fill="rgb(243,106,37)" fg:x="4168226650" fg:w="5767930"/><text x="89.9907%" y="1503.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,767,930 samples, 0.12%)</title><rect x="89.7407%" y="1477" width="0.1242%" height="15" fill="rgb(218,96,6)" fg:x="4168226650" fg:w="5767930"/><text x="89.9907%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,767,930 samples, 0.12%)</title><rect x="89.7407%" y="1461" width="0.1242%" height="15" fill="rgb(235,130,12)" fg:x="4168226650" fg:w="5767930"/><text x="89.9907%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,767,930 samples, 0.12%)</title><rect x="89.7407%" y="1445" width="0.1242%" height="15" fill="rgb(231,95,0)" fg:x="4168226650" fg:w="5767930"/><text x="89.9907%" y="1455.50"></text></g><g><title>alloc::alloc::dealloc (5,767,930 samples, 0.12%)</title><rect x="89.7407%" y="1429" width="0.1242%" height="15" fill="rgb(228,12,23)" fg:x="4168226650" fg:w="5767930"/><text x="89.9907%" y="1439.50"></text></g><g><title>__rust_dealloc (5,767,930 samples, 0.12%)</title><rect x="89.7407%" y="1413" width="0.1242%" height="15" fill="rgb(216,12,1)" fg:x="4168226650" fg:w="5767930"/><text x="89.9907%" y="1423.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (5,767,930 samples, 0.12%)</title><rect x="89.7407%" y="1397" width="0.1242%" height="15" fill="rgb(219,59,3)" fg:x="4168226650" fg:w="5767930"/><text x="89.9907%" y="1407.50"></text></g><g><title>_rjem_sdallocx (5,767,930 samples, 0.12%)</title><rect x="89.7407%" y="1381" width="0.1242%" height="15" fill="rgb(215,208,46)" fg:x="4168226650" fg:w="5767930"/><text x="89.9907%" y="1391.50"></text></g><g><title>free_fastpath (4,430,385 samples, 0.10%)</title><rect x="89.7695%" y="1365" width="0.0954%" height="15" fill="rgb(254,224,29)" fg:x="4169564195" fg:w="4430385"/><text x="90.0195%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage&gt; (24,247,245 samples, 0.52%)</title><rect x="89.3777%" y="1605" width="0.5220%" height="15" fill="rgb(232,14,29)" fg:x="4151366808" fg:w="24247245"/><text x="89.6277%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::messages::parse::Parse&gt; (14,961,819 samples, 0.32%)</title><rect x="89.5776%" y="1589" width="0.3221%" height="15" fill="rgb(208,45,52)" fg:x="4160652234" fg:w="14961819"/><text x="89.8276%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::string::String&gt;&gt; (14,961,819 samples, 0.32%)</title><rect x="89.5776%" y="1573" width="0.3221%" height="15" fill="rgb(234,191,28)" fg:x="4160652234" fg:w="14961819"/><text x="89.8276%" y="1583.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,961,819 samples, 0.32%)</title><rect x="89.5776%" y="1557" width="0.3221%" height="15" fill="rgb(244,67,43)" fg:x="4160652234" fg:w="14961819"/><text x="89.8276%" y="1567.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,619,473 samples, 0.03%)</title><rect x="89.8649%" y="1541" width="0.0349%" height="15" fill="rgb(236,189,24)" fg:x="4173994580" fg:w="1619473"/><text x="90.1149%" y="1551.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,619,473 samples, 0.03%)</title><rect x="89.8649%" y="1525" width="0.0349%" height="15" fill="rgb(239,214,33)" fg:x="4173994580" fg:w="1619473"/><text x="90.1149%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,486,581 samples, 0.03%)</title><rect x="89.9371%" y="1589" width="0.0320%" height="15" fill="rgb(226,176,41)" fg:x="4177348036" fg:w="1486581"/><text x="90.1871%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,486,581 samples, 0.03%)</title><rect x="89.9371%" y="1573" width="0.0320%" height="15" fill="rgb(248,47,8)" fg:x="4177348036" fg:w="1486581"/><text x="90.1871%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,486,581 samples, 0.03%)</title><rect x="89.9371%" y="1557" width="0.0320%" height="15" fill="rgb(218,81,44)" fg:x="4177348036" fg:w="1486581"/><text x="90.1871%" y="1567.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,486,581 samples, 0.03%)</title><rect x="89.9371%" y="1541" width="0.0320%" height="15" fill="rgb(213,98,6)" fg:x="4177348036" fg:w="1486581"/><text x="90.1871%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,486,581 samples, 0.03%)</title><rect x="89.9371%" y="1525" width="0.0320%" height="15" fill="rgb(222,85,22)" fg:x="4177348036" fg:w="1486581"/><text x="90.1871%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1,486,581 samples, 0.03%)</title><rect x="89.9371%" y="1509" width="0.0320%" height="15" fill="rgb(239,46,39)" fg:x="4177348036" fg:w="1486581"/><text x="90.1871%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;i16&gt;&gt; (4,743,686 samples, 0.10%)</title><rect x="89.9691%" y="1589" width="0.1021%" height="15" fill="rgb(237,12,29)" fg:x="4178834617" fg:w="4743686"/><text x="90.2191%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;i16&gt;&gt; (1,865,589 samples, 0.04%)</title><rect x="90.0310%" y="1573" width="0.0402%" height="15" fill="rgb(214,77,8)" fg:x="4181712714" fg:w="1865589"/><text x="90.2810%" y="1583.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,865,589 samples, 0.04%)</title><rect x="90.0310%" y="1557" width="0.0402%" height="15" fill="rgb(217,168,37)" fg:x="4181712714" fg:w="1865589"/><text x="90.2810%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,865,589 samples, 0.04%)</title><rect x="90.0310%" y="1541" width="0.0402%" height="15" fill="rgb(221,217,23)" fg:x="4181712714" fg:w="1865589"/><text x="90.2810%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,865,589 samples, 0.04%)</title><rect x="90.0310%" y="1525" width="0.0402%" height="15" fill="rgb(243,229,36)" fg:x="4181712714" fg:w="1865589"/><text x="90.2810%" y="1535.50"></text></g><g><title>alloc::alloc::dealloc (1,865,589 samples, 0.04%)</title><rect x="90.0310%" y="1509" width="0.0402%" height="15" fill="rgb(251,163,40)" fg:x="4181712714" fg:w="1865589"/><text x="90.2810%" y="1519.50"></text></g><g><title>__rust_dealloc (1,865,589 samples, 0.04%)</title><rect x="90.0310%" y="1493" width="0.0402%" height="15" fill="rgb(237,222,12)" fg:x="4181712714" fg:w="1865589"/><text x="90.2810%" y="1503.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1,865,589 samples, 0.04%)</title><rect x="90.0310%" y="1477" width="0.0402%" height="15" fill="rgb(248,132,6)" fg:x="4181712714" fg:w="1865589"/><text x="90.2810%" y="1487.50"></text></g><g><title>_rjem_sdallocx (1,865,589 samples, 0.04%)</title><rect x="90.0310%" y="1461" width="0.0402%" height="15" fill="rgb(227,167,50)" fg:x="4181712714" fg:w="1865589"/><text x="90.2810%" y="1471.50"></text></g><g><title>free_fastpath (1,865,589 samples, 0.04%)</title><rect x="90.0310%" y="1445" width="0.0402%" height="15" fill="rgb(242,84,37)" fg:x="4181712714" fg:w="1865589"/><text x="90.2810%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,813,781 samples, 0.08%)</title><rect x="90.0712%" y="1461" width="0.0821%" height="15" fill="rgb(212,4,50)" fg:x="4183578303" fg:w="3813781"/><text x="90.3212%" y="1471.50"></text></g><g><title>alloc::alloc::dealloc (3,813,781 samples, 0.08%)</title><rect x="90.0712%" y="1445" width="0.0821%" height="15" fill="rgb(230,228,32)" fg:x="4183578303" fg:w="3813781"/><text x="90.3212%" y="1455.50"></text></g><g><title>__rust_dealloc (3,813,781 samples, 0.08%)</title><rect x="90.0712%" y="1429" width="0.0821%" height="15" fill="rgb(248,217,23)" fg:x="4183578303" fg:w="3813781"/><text x="90.3212%" y="1439.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (3,813,781 samples, 0.08%)</title><rect x="90.0712%" y="1413" width="0.0821%" height="15" fill="rgb(238,197,32)" fg:x="4183578303" fg:w="3813781"/><text x="90.3212%" y="1423.50"></text></g><g><title>_rjem_sdallocx (3,813,781 samples, 0.08%)</title><rect x="90.0712%" y="1397" width="0.0821%" height="15" fill="rgb(236,106,1)" fg:x="4183578303" fg:w="3813781"/><text x="90.3212%" y="1407.50"></text></g><g><title>free_fastpath (3,813,781 samples, 0.08%)</title><rect x="90.0712%" y="1381" width="0.0821%" height="15" fill="rgb(219,228,13)" fg:x="4183578303" fg:w="3813781"/><text x="90.3212%" y="1391.50"></text></g><g><title>cache_bin_dalloc_easy (1,416,050 samples, 0.03%)</title><rect x="90.1228%" y="1365" width="0.0305%" height="15" fill="rgb(238,30,35)" fg:x="4185976034" fg:w="1416050"/><text x="90.3728%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,799,632 samples, 0.10%)</title><rect x="90.0712%" y="1573" width="0.1033%" height="15" fill="rgb(236,70,23)" fg:x="4183578303" fg:w="4799632"/><text x="90.3212%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;[pgdog::net::messages::bind::Parameter]&gt; (4,799,632 samples, 0.10%)</title><rect x="90.0712%" y="1557" width="0.1033%" height="15" fill="rgb(249,104,48)" fg:x="4183578303" fg:w="4799632"/><text x="90.3212%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::messages::bind::Parameter&gt; (4,799,632 samples, 0.10%)</title><rect x="90.0712%" y="1541" width="0.1033%" height="15" fill="rgb(254,117,50)" fg:x="4183578303" fg:w="4799632"/><text x="90.3212%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4,799,632 samples, 0.10%)</title><rect x="90.0712%" y="1525" width="0.1033%" height="15" fill="rgb(223,152,4)" fg:x="4183578303" fg:w="4799632"/><text x="90.3212%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4,799,632 samples, 0.10%)</title><rect x="90.0712%" y="1509" width="0.1033%" height="15" fill="rgb(245,6,2)" fg:x="4183578303" fg:w="4799632"/><text x="90.3212%" y="1519.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,799,632 samples, 0.10%)</title><rect x="90.0712%" y="1493" width="0.1033%" height="15" fill="rgb(249,150,24)" fg:x="4183578303" fg:w="4799632"/><text x="90.3212%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,799,632 samples, 0.10%)</title><rect x="90.0712%" y="1477" width="0.1033%" height="15" fill="rgb(228,185,42)" fg:x="4183578303" fg:w="4799632"/><text x="90.3212%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (985,851 samples, 0.02%)</title><rect x="90.1533%" y="1461" width="0.0212%" height="15" fill="rgb(226,39,33)" fg:x="4187392084" fg:w="985851"/><text x="90.4033%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,706,968 samples, 0.04%)</title><rect x="90.1745%" y="1525" width="0.0368%" height="15" fill="rgb(221,166,19)" fg:x="4188377935" fg:w="1706968"/><text x="90.4245%" y="1535.50"></text></g><g><title>alloc::alloc::dealloc (1,706,968 samples, 0.04%)</title><rect x="90.1745%" y="1509" width="0.0368%" height="15" fill="rgb(209,109,2)" fg:x="4188377935" fg:w="1706968"/><text x="90.4245%" y="1519.50"></text></g><g><title>__rust_dealloc (1,706,968 samples, 0.04%)</title><rect x="90.1745%" y="1493" width="0.0368%" height="15" fill="rgb(252,216,26)" fg:x="4188377935" fg:w="1706968"/><text x="90.4245%" y="1503.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1,706,968 samples, 0.04%)</title><rect x="90.1745%" y="1477" width="0.0368%" height="15" fill="rgb(227,173,36)" fg:x="4188377935" fg:w="1706968"/><text x="90.4245%" y="1487.50"></text></g><g><title>_rjem_sdallocx (1,706,968 samples, 0.04%)</title><rect x="90.1745%" y="1461" width="0.0368%" height="15" fill="rgb(209,90,7)" fg:x="4188377935" fg:w="1706968"/><text x="90.4245%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::messages::bind::Bind&gt; (16,942,463 samples, 0.36%)</title><rect x="89.8997%" y="1605" width="0.3648%" height="15" fill="rgb(250,194,11)" fg:x="4175614053" fg:w="16942463"/><text x="90.1497%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;pgdog::net::messages::bind::Parameter&gt;&gt; (8,978,213 samples, 0.19%)</title><rect x="90.0712%" y="1589" width="0.1933%" height="15" fill="rgb(220,72,50)" fg:x="4183578303" fg:w="8978213"/><text x="90.3212%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;pgdog::net::messages::bind::Parameter&gt;&gt; (4,178,581 samples, 0.09%)</title><rect x="90.1745%" y="1573" width="0.0900%" height="15" fill="rgb(222,106,48)" fg:x="4188377935" fg:w="4178581"/><text x="90.4245%" y="1583.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,178,581 samples, 0.09%)</title><rect x="90.1745%" y="1557" width="0.0900%" height="15" fill="rgb(216,220,45)" fg:x="4188377935" fg:w="4178581"/><text x="90.4245%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,178,581 samples, 0.09%)</title><rect x="90.1745%" y="1541" width="0.0900%" height="15" fill="rgb(234,112,18)" fg:x="4188377935" fg:w="4178581"/><text x="90.4245%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (2,471,613 samples, 0.05%)</title><rect x="90.2113%" y="1525" width="0.0532%" height="15" fill="rgb(206,179,9)" fg:x="4190084903" fg:w="2471613"/><text x="90.4613%" y="1535.50"></text></g><g><title>pgdog::backend::prepared_statements::PreparedStatements::handle (4,225,290 samples, 0.09%)</title><rect x="90.2645%" y="1605" width="0.0910%" height="15" fill="rgb(215,115,40)" fg:x="4192556516" fg:w="4225290"/><text x="90.5145%" y="1615.50"></text></g><g><title>[libc.so.6] (2,451,461 samples, 0.05%)</title><rect x="90.3555%" y="1557" width="0.0528%" height="15" fill="rgb(222,69,34)" fg:x="4196781806" fg:w="2451461"/><text x="90.6055%" y="1567.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1,341,214 samples, 0.03%)</title><rect x="90.4082%" y="1557" width="0.0289%" height="15" fill="rgb(209,161,10)" fg:x="4199233267" fg:w="1341214"/><text x="90.6582%" y="1567.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1,341,214 samples, 0.03%)</title><rect x="90.4082%" y="1541" width="0.0289%" height="15" fill="rgb(217,6,38)" fg:x="4199233267" fg:w="1341214"/><text x="90.6582%" y="1551.50"></text></g><g><title>hashbrown::map::make_hash (1,623,444 samples, 0.03%)</title><rect x="90.4371%" y="1509" width="0.0350%" height="15" fill="rgb(229,229,48)" fg:x="4200574481" fg:w="1623444"/><text x="90.6871%" y="1519.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,623,444 samples, 0.03%)</title><rect x="90.4371%" y="1493" width="0.0350%" height="15" fill="rgb(225,21,28)" fg:x="4200574481" fg:w="1623444"/><text x="90.6871%" y="1503.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,623,444 samples, 0.03%)</title><rect x="90.4371%" y="1477" width="0.0350%" height="15" fill="rgb(206,33,13)" fg:x="4200574481" fg:w="1623444"/><text x="90.6871%" y="1487.50"></text></g><g><title>&lt;pgdog::net::messages::backend_key::BackendKeyData as core::hash::Hash&gt;::hash (1,623,444 samples, 0.03%)</title><rect x="90.4371%" y="1461" width="0.0350%" height="15" fill="rgb(242,178,17)" fg:x="4200574481" fg:w="1623444"/><text x="90.6871%" y="1471.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i32&gt;::hash (1,623,444 samples, 0.03%)</title><rect x="90.4371%" y="1445" width="0.0350%" height="15" fill="rgb(220,162,5)" fg:x="4200574481" fg:w="1623444"/><text x="90.6871%" y="1455.50"></text></g><g><title>core::hash::Hasher::write_i32 (1,623,444 samples, 0.03%)</title><rect x="90.4371%" y="1429" width="0.0350%" height="15" fill="rgb(210,33,43)" fg:x="4200574481" fg:w="1623444"/><text x="90.6871%" y="1439.50"></text></g><g><title>core::hash::Hasher::write_u32 (1,623,444 samples, 0.03%)</title><rect x="90.4371%" y="1413" width="0.0350%" height="15" fill="rgb(216,116,54)" fg:x="4200574481" fg:w="1623444"/><text x="90.6871%" y="1423.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (1,623,444 samples, 0.03%)</title><rect x="90.4371%" y="1397" width="0.0350%" height="15" fill="rgb(249,92,24)" fg:x="4200574481" fg:w="1623444"/><text x="90.6871%" y="1407.50"></text></g><g><title>core::intrinsics::likely (6,629,587 samples, 0.14%)</title><rect x="90.4721%" y="1461" width="0.1427%" height="15" fill="rgb(231,189,14)" fg:x="4202197925" fg:w="6629587"/><text x="90.7221%" y="1471.50"></text></g><g><title>pgdog::backend::stats::Stats::update (13,380,762 samples, 0.29%)</title><rect x="90.3555%" y="1589" width="0.2881%" height="15" fill="rgb(230,8,41)" fg:x="4196781806" fg:w="13380762"/><text x="90.6055%" y="1599.50"></text></g><g><title>pgdog::backend::stats::update (13,380,762 samples, 0.29%)</title><rect x="90.3555%" y="1573" width="0.2881%" height="15" fill="rgb(249,7,27)" fg:x="4196781806" fg:w="13380762"/><text x="90.6055%" y="1583.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (9,588,087 samples, 0.21%)</title><rect x="90.4371%" y="1557" width="0.2064%" height="15" fill="rgb(232,86,5)" fg:x="4200574481" fg:w="9588087"/><text x="90.6871%" y="1567.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (9,588,087 samples, 0.21%)</title><rect x="90.4371%" y="1541" width="0.2064%" height="15" fill="rgb(224,175,18)" fg:x="4200574481" fg:w="9588087"/><text x="90.6871%" y="1551.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (9,588,087 samples, 0.21%)</title><rect x="90.4371%" y="1525" width="0.2064%" height="15" fill="rgb(220,129,12)" fg:x="4200574481" fg:w="9588087"/><text x="90.6871%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (7,964,643 samples, 0.17%)</title><rect x="90.4721%" y="1509" width="0.1715%" height="15" fill="rgb(210,19,36)" fg:x="4202197925" fg:w="7964643"/><text x="90.7221%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7,964,643 samples, 0.17%)</title><rect x="90.4721%" y="1493" width="0.1715%" height="15" fill="rgb(219,96,14)" fg:x="4202197925" fg:w="7964643"/><text x="90.7221%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (7,964,643 samples, 0.17%)</title><rect x="90.4721%" y="1477" width="0.1715%" height="15" fill="rgb(249,106,1)" fg:x="4202197925" fg:w="7964643"/><text x="90.7221%" y="1487.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (1,335,056 samples, 0.03%)</title><rect x="90.6148%" y="1461" width="0.0287%" height="15" fill="rgb(249,155,20)" fg:x="4208827512" fg:w="1335056"/><text x="90.8648%" y="1471.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,335,056 samples, 0.03%)</title><rect x="90.6148%" y="1445" width="0.0287%" height="15" fill="rgb(244,168,9)" fg:x="4208827512" fg:w="1335056"/><text x="90.8648%" y="1455.50"></text></g><g><title>pgdog::backend::stats::Stats::state (23,461,956 samples, 0.51%)</title><rect x="90.3555%" y="1605" width="0.5051%" height="15" fill="rgb(216,23,50)" fg:x="4196781806" fg:w="23461956"/><text x="90.6055%" y="1615.50"></text></g><g><title>std::time::Instant::now (10,081,194 samples, 0.22%)</title><rect x="90.6436%" y="1589" width="0.2170%" height="15" fill="rgb(224,219,20)" fg:x="4210162568" fg:w="10081194"/><text x="90.8936%" y="1599.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (10,081,194 samples, 0.22%)</title><rect x="90.6436%" y="1573" width="0.2170%" height="15" fill="rgb(222,156,15)" fg:x="4210162568" fg:w="10081194"/><text x="90.8936%" y="1583.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (10,081,194 samples, 0.22%)</title><rect x="90.6436%" y="1557" width="0.2170%" height="15" fill="rgb(231,97,17)" fg:x="4210162568" fg:w="10081194"/><text x="90.8936%" y="1567.50"></text></g><g><title>clock_gettime (10,081,194 samples, 0.22%)</title><rect x="90.6436%" y="1541" width="0.2170%" height="15" fill="rgb(218,70,48)" fg:x="4210162568" fg:w="10081194"/><text x="90.8936%" y="1551.50"></text></g><g><title>__vdso_clock_gettime (10,081,194 samples, 0.22%)</title><rect x="90.6436%" y="1525" width="0.2170%" height="15" fill="rgb(212,196,52)" fg:x="4210162568" fg:w="10081194"/><text x="90.8936%" y="1535.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5,681,622 samples, 0.12%)</title><rect x="91.1687%" y="1589" width="0.1223%" height="15" fill="rgb(243,203,18)" fg:x="4234553142" fg:w="5681622"/><text x="91.4187%" y="1599.50"></text></g><g><title>&lt;pgdog::net::messages::sync::Sync as pgdog::net::messages::ToBytes&gt;::to_bytes (1,673,908 samples, 0.04%)</title><rect x="91.7274%" y="1573" width="0.0360%" height="15" fill="rgb(252,125,41)" fg:x="4260502556" fg:w="1673908"/><text x="91.9774%" y="1583.50"></text></g><g><title>pgdog::net::messages::payload::Payload::named (1,673,908 samples, 0.04%)</title><rect x="91.7274%" y="1557" width="0.0360%" height="15" fill="rgb(223,180,33)" fg:x="4260502556" fg:w="1673908"/><text x="91.9774%" y="1567.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (2,840,049 samples, 0.06%)</title><rect x="91.7634%" y="1557" width="0.0611%" height="15" fill="rgb(254,159,46)" fg:x="4262176464" fg:w="2840049"/><text x="92.0134%" y="1567.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1,801,954 samples, 0.04%)</title><rect x="91.7857%" y="1541" width="0.0388%" height="15" fill="rgb(254,38,10)" fg:x="4263214559" fg:w="1801954"/><text x="92.0357%" y="1551.50"></text></g><g><title>core::sync::atomic::atomic_add (1,801,954 samples, 0.04%)</title><rect x="91.7857%" y="1525" width="0.0388%" height="15" fill="rgb(208,217,32)" fg:x="4263214559" fg:w="1801954"/><text x="92.0357%" y="1535.50"></text></g><g><title>bytes::bytes::shared_clone (9,443,174 samples, 0.20%)</title><rect x="91.7634%" y="1573" width="0.2033%" height="15" fill="rgb(221,120,13)" fg:x="4262176464" fg:w="9443174"/><text x="92.0134%" y="1583.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (6,603,125 samples, 0.14%)</title><rect x="91.8245%" y="1557" width="0.1422%" height="15" fill="rgb(246,54,52)" fg:x="4265016513" fg:w="6603125"/><text x="92.0745%" y="1567.50"></text></g><g><title>core::sync::atomic::atomic_load (6,603,125 samples, 0.14%)</title><rect x="91.8245%" y="1541" width="0.1422%" height="15" fill="rgb(242,34,25)" fg:x="4265016513" fg:w="6603125"/><text x="92.0745%" y="1551.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (1,581,169 samples, 0.03%)</title><rect x="91.9908%" y="1541" width="0.0340%" height="15" fill="rgb(247,209,9)" fg:x="4272738241" fg:w="1581169"/><text x="92.2408%" y="1551.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,581,169 samples, 0.03%)</title><rect x="91.9908%" y="1525" width="0.0340%" height="15" fill="rgb(228,71,26)" fg:x="4272738241" fg:w="1581169"/><text x="92.2408%" y="1535.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (1,581,169 samples, 0.03%)</title><rect x="91.9908%" y="1509" width="0.0340%" height="15" fill="rgb(222,145,49)" fg:x="4272738241" fg:w="1581169"/><text x="92.2408%" y="1519.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,581,169 samples, 0.03%)</title><rect x="91.9908%" y="1493" width="0.0340%" height="15" fill="rgb(218,121,17)" fg:x="4272738241" fg:w="1581169"/><text x="92.2408%" y="1503.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,581,169 samples, 0.03%)</title><rect x="91.9908%" y="1477" width="0.0340%" height="15" fill="rgb(244,50,7)" fg:x="4272738241" fg:w="1581169"/><text x="92.2408%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,581,169 samples, 0.03%)</title><rect x="91.9908%" y="1461" width="0.0340%" height="15" fill="rgb(246,229,37)" fg:x="4272738241" fg:w="1581169"/><text x="92.2408%" y="1471.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,581,169 samples, 0.03%)</title><rect x="91.9908%" y="1445" width="0.0340%" height="15" fill="rgb(225,18,5)" fg:x="4272738241" fg:w="1581169"/><text x="92.2408%" y="1455.50"></text></g><g><title>alloc::alloc::alloc (1,581,169 samples, 0.03%)</title><rect x="91.9908%" y="1429" width="0.0340%" height="15" fill="rgb(213,204,8)" fg:x="4272738241" fg:w="1581169"/><text x="92.2408%" y="1439.50"></text></g><g><title>__rust_alloc (1,581,169 samples, 0.03%)</title><rect x="91.9908%" y="1413" width="0.0340%" height="15" fill="rgb(238,103,6)" fg:x="4272738241" fg:w="1581169"/><text x="92.2408%" y="1423.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,581,169 samples, 0.03%)</title><rect x="91.9908%" y="1397" width="0.0340%" height="15" fill="rgb(222,25,35)" fg:x="4272738241" fg:w="1581169"/><text x="92.2408%" y="1407.50"></text></g><g><title>_rjem_malloc (1,581,169 samples, 0.03%)</title><rect x="91.9908%" y="1381" width="0.0340%" height="15" fill="rgb(213,203,35)" fg:x="4272738241" fg:w="1581169"/><text x="92.2408%" y="1391.50"></text></g><g><title>imalloc_fastpath (1,581,169 samples, 0.03%)</title><rect x="91.9908%" y="1365" width="0.0340%" height="15" fill="rgb(221,79,53)" fg:x="4272738241" fg:w="1581169"/><text x="92.2408%" y="1375.50"></text></g><g><title>cache_bin_alloc_easy (1,581,169 samples, 0.03%)</title><rect x="91.9908%" y="1349" width="0.0340%" height="15" fill="rgb(243,200,35)" fg:x="4272738241" fg:w="1581169"/><text x="92.2408%" y="1359.50"></text></g><g><title>cache_bin_alloc_impl (1,581,169 samples, 0.03%)</title><rect x="91.9908%" y="1333" width="0.0340%" height="15" fill="rgb(248,60,25)" fg:x="4272738241" fg:w="1581169"/><text x="92.2408%" y="1343.50"></text></g><g><title>&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage as pgdog::net::messages::ToBytes&gt;::to_bytes (37,705,916 samples, 0.81%)</title><rect x="91.2910%" y="1589" width="0.8118%" height="15" fill="rgb(227,53,46)" fg:x="4240234764" fg:w="37705916"/><text x="91.5410%" y="1599.50"></text></g><g><title>pgdog::net::messages::payload::Payload::freeze (6,321,042 samples, 0.14%)</title><rect x="91.9667%" y="1573" width="0.1361%" height="15" fill="rgb(216,120,32)" fg:x="4271619638" fg:w="6321042"/><text x="92.2167%" y="1583.50"></text></g><g><title>&lt;pgdog::net::messages::payload::Payload as pgdog::net::messages::ToBytes&gt;::to_bytes (5,202,439 samples, 0.11%)</title><rect x="91.9908%" y="1557" width="0.1120%" height="15" fill="rgb(220,134,1)" fg:x="4272738241" fg:w="5202439"/><text x="92.2408%" y="1567.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (3,621,270 samples, 0.08%)</title><rect x="92.0248%" y="1541" width="0.0780%" height="15" fill="rgb(237,168,5)" fg:x="4274319410" fg:w="3621270"/><text x="92.2748%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,621,270 samples, 0.08%)</title><rect x="92.0248%" y="1525" width="0.0780%" height="15" fill="rgb(231,100,33)" fg:x="4274319410" fg:w="3621270"/><text x="92.2748%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,621,270 samples, 0.08%)</title><rect x="92.0248%" y="1509" width="0.0780%" height="15" fill="rgb(236,177,47)" fg:x="4274319410" fg:w="3621270"/><text x="92.2748%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,621,270 samples, 0.08%)</title><rect x="92.0248%" y="1493" width="0.0780%" height="15" fill="rgb(235,7,49)" fg:x="4274319410" fg:w="3621270"/><text x="92.2748%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,621,270 samples, 0.08%)</title><rect x="92.0248%" y="1477" width="0.0780%" height="15" fill="rgb(232,119,22)" fg:x="4274319410" fg:w="3621270"/><text x="92.2748%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,621,270 samples, 0.08%)</title><rect x="92.0248%" y="1461" width="0.0780%" height="15" fill="rgb(254,73,53)" fg:x="4274319410" fg:w="3621270"/><text x="92.2748%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,621,270 samples, 0.08%)</title><rect x="92.0248%" y="1445" width="0.0780%" height="15" fill="rgb(251,35,20)" fg:x="4274319410" fg:w="3621270"/><text x="92.2748%" y="1455.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,621,270 samples, 0.08%)</title><rect x="92.0248%" y="1429" width="0.0780%" height="15" fill="rgb(241,119,20)" fg:x="4274319410" fg:w="3621270"/><text x="92.2748%" y="1439.50"></text></g><g><title>alloc::alloc::alloc (3,621,270 samples, 0.08%)</title><rect x="92.0248%" y="1413" width="0.0780%" height="15" fill="rgb(207,102,14)" fg:x="4274319410" fg:w="3621270"/><text x="92.2748%" y="1423.50"></text></g><g><title>__rust_alloc (3,621,270 samples, 0.08%)</title><rect x="92.0248%" y="1397" width="0.0780%" height="15" fill="rgb(248,201,50)" fg:x="4274319410" fg:w="3621270"/><text x="92.2748%" y="1407.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3,621,270 samples, 0.08%)</title><rect x="92.0248%" y="1381" width="0.0780%" height="15" fill="rgb(222,185,44)" fg:x="4274319410" fg:w="3621270"/><text x="92.2748%" y="1391.50"></text></g><g><title>_rjem_malloc (3,621,270 samples, 0.08%)</title><rect x="92.0248%" y="1365" width="0.0780%" height="15" fill="rgb(218,107,18)" fg:x="4274319410" fg:w="3621270"/><text x="92.2748%" y="1375.50"></text></g><g><title>imalloc_fastpath (3,621,270 samples, 0.08%)</title><rect x="92.0248%" y="1349" width="0.0780%" height="15" fill="rgb(237,177,39)" fg:x="4274319410" fg:w="3621270"/><text x="92.2748%" y="1359.50"></text></g><g><title>cache_bin_alloc_easy (1,976,449 samples, 0.04%)</title><rect x="92.0602%" y="1333" width="0.0426%" height="15" fill="rgb(246,69,6)" fg:x="4275964231" fg:w="1976449"/><text x="92.3102%" y="1343.50"></text></g><g><title>cache_bin_alloc_impl (1,976,449 samples, 0.04%)</title><rect x="92.0602%" y="1317" width="0.0426%" height="15" fill="rgb(234,208,37)" fg:x="4275964231" fg:w="1976449"/><text x="92.3102%" y="1327.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (18,079,286 samples, 0.39%)</title><rect x="92.2129%" y="1573" width="0.3892%" height="15" fill="rgb(225,4,6)" fg:x="4283053576" fg:w="18079286"/><text x="92.4629%" y="1583.50"></text></g><g><title>&lt;tokio::io::util::buf_stream::BufStream&lt;RW&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (18,079,286 samples, 0.39%)</title><rect x="92.2129%" y="1557" width="0.3892%" height="15" fill="rgb(233,45,0)" fg:x="4283053576" fg:w="18079286"/><text x="92.4629%" y="1567.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (18,079,286 samples, 0.39%)</title><rect x="92.2129%" y="1541" width="0.3892%" height="15" fill="rgb(226,136,5)" fg:x="4283053576" fg:w="18079286"/><text x="92.4629%" y="1551.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (18,079,286 samples, 0.39%)</title><rect x="92.2129%" y="1525" width="0.3892%" height="15" fill="rgb(211,91,47)" fg:x="4283053576" fg:w="18079286"/><text x="92.4629%" y="1535.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write (16,779,759 samples, 0.36%)</title><rect x="92.2409%" y="1509" width="0.3613%" height="15" fill="rgb(242,88,51)" fg:x="4284353103" fg:w="16779759"/><text x="92.4909%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16,779,759 samples, 0.36%)</title><rect x="92.2409%" y="1493" width="0.3613%" height="15" fill="rgb(230,91,28)" fg:x="4284353103" fg:w="16779759"/><text x="92.4909%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16,779,759 samples, 0.36%)</title><rect x="92.2409%" y="1477" width="0.3613%" height="15" fill="rgb(254,186,29)" fg:x="4284353103" fg:w="16779759"/><text x="92.4909%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16,779,759 samples, 0.36%)</title><rect x="92.2409%" y="1461" width="0.3613%" height="15" fill="rgb(238,6,4)" fg:x="4284353103" fg:w="16779759"/><text x="92.4909%" y="1471.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16,779,759 samples, 0.36%)</title><rect x="92.2409%" y="1445" width="0.3613%" height="15" fill="rgb(221,151,16)" fg:x="4284353103" fg:w="16779759"/><text x="92.4909%" y="1455.50"></text></g><g><title>[libc.so.6] (16,779,759 samples, 0.36%)</title><rect x="92.2409%" y="1429" width="0.3613%" height="15" fill="rgb(251,143,52)" fg:x="4284353103" fg:w="16779759"/><text x="92.4909%" y="1439.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (25,639,726 samples, 0.55%)</title><rect x="92.1028%" y="1589" width="0.5520%" height="15" fill="rgb(206,90,15)" fg:x="4277940680" fg:w="25639726"/><text x="92.3528%" y="1599.50"></text></g><g><title>core::mem::take (2,447,544 samples, 0.05%)</title><rect x="92.6021%" y="1573" width="0.0527%" height="15" fill="rgb(218,35,8)" fg:x="4301132862" fg:w="2447544"/><text x="92.8521%" y="1583.50"></text></g><g><title>core::mem::replace (2,447,544 samples, 0.05%)</title><rect x="92.6021%" y="1557" width="0.0527%" height="15" fill="rgb(239,215,6)" fg:x="4301132862" fg:w="2447544"/><text x="92.8521%" y="1567.50"></text></g><g><title>core::ptr::read (2,447,544 samples, 0.05%)</title><rect x="92.6021%" y="1541" width="0.0527%" height="15" fill="rgb(245,116,39)" fg:x="4301132862" fg:w="2447544"/><text x="92.8521%" y="1551.50"></text></g><g><title>pgdog::backend::server::Server::send_one::_{{closure}} (343,022,528 samples, 7.39%)</title><rect x="85.4596%" y="1621" width="7.3852%" height="15" fill="rgb(242,65,28)" fg:x="3969380677" fg:w="343022528"/><text x="85.7096%" y="1631.50">pgdog::bac..</text></g><g><title>pgdog::net::stream::Stream::send::_{{closure}} (92,159,443 samples, 1.98%)</title><rect x="90.8606%" y="1605" width="1.9842%" height="15" fill="rgb(252,132,53)" fg:x="4220243762" fg:w="92159443"/><text x="91.1106%" y="1615.50">p..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (8,822,799 samples, 0.19%)</title><rect x="92.6548%" y="1589" width="0.1900%" height="15" fill="rgb(224,159,50)" fg:x="4303580406" fg:w="8822799"/><text x="92.9048%" y="1599.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (8,822,799 samples, 0.19%)</title><rect x="92.6548%" y="1573" width="0.1900%" height="15" fill="rgb(224,93,4)" fg:x="4303580406" fg:w="8822799"/><text x="92.9048%" y="1583.50"></text></g><g><title>bytes::bytes::shared_drop (7,805,972 samples, 0.17%)</title><rect x="92.6767%" y="1557" width="0.1681%" height="15" fill="rgb(208,81,34)" fg:x="4304597233" fg:w="7805972"/><text x="92.9267%" y="1567.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (7,805,972 samples, 0.17%)</title><rect x="92.6767%" y="1541" width="0.1681%" height="15" fill="rgb(233,92,54)" fg:x="4304597233" fg:w="7805972"/><text x="92.9267%" y="1551.50"></text></g><g><title>bytes::bytes::shared_drop::_{{closure}} (7,805,972 samples, 0.17%)</title><rect x="92.6767%" y="1525" width="0.1681%" height="15" fill="rgb(237,21,14)" fg:x="4304597233" fg:w="7805972"/><text x="92.9267%" y="1535.50"></text></g><g><title>bytes::bytes::release_shared (6,781,323 samples, 0.15%)</title><rect x="92.6988%" y="1509" width="0.1460%" height="15" fill="rgb(249,128,51)" fg:x="4305621882" fg:w="6781323"/><text x="92.9488%" y="1519.50"></text></g><g><title>core::mem::drop (1,646,825 samples, 0.04%)</title><rect x="92.8093%" y="1493" width="0.0355%" height="15" fill="rgb(223,129,24)" fg:x="4310756380" fg:w="1646825"/><text x="93.0593%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes::Shared&gt;&gt; (1,646,825 samples, 0.04%)</title><rect x="92.8093%" y="1477" width="0.0355%" height="15" fill="rgb(231,168,25)" fg:x="4310756380" fg:w="1646825"/><text x="93.0593%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Shared&gt; (1,646,825 samples, 0.04%)</title><rect x="92.8093%" y="1461" width="0.0355%" height="15" fill="rgb(224,39,20)" fg:x="4310756380" fg:w="1646825"/><text x="93.0593%" y="1471.50"></text></g><g><title>&lt;bytes::bytes::Shared as core::ops::drop::Drop&gt;::drop (1,646,825 samples, 0.04%)</title><rect x="92.8093%" y="1445" width="0.0355%" height="15" fill="rgb(225,152,53)" fg:x="4310756380" fg:w="1646825"/><text x="93.0593%" y="1455.50"></text></g><g><title>alloc::alloc::dealloc (1,646,825 samples, 0.04%)</title><rect x="92.8093%" y="1429" width="0.0355%" height="15" fill="rgb(252,17,24)" fg:x="4310756380" fg:w="1646825"/><text x="93.0593%" y="1439.50"></text></g><g><title>__rust_dealloc (1,646,825 samples, 0.04%)</title><rect x="92.8093%" y="1413" width="0.0355%" height="15" fill="rgb(250,114,30)" fg:x="4310756380" fg:w="1646825"/><text x="93.0593%" y="1423.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1,646,825 samples, 0.04%)</title><rect x="92.8093%" y="1397" width="0.0355%" height="15" fill="rgb(229,5,4)" fg:x="4310756380" fg:w="1646825"/><text x="93.0593%" y="1407.50"></text></g><g><title>_rjem_sdallocx (1,646,825 samples, 0.04%)</title><rect x="92.8093%" y="1381" width="0.0355%" height="15" fill="rgb(225,176,49)" fg:x="4310756380" fg:w="1646825"/><text x="93.0593%" y="1391.50"></text></g><g><title>free_fastpath (1,646,825 samples, 0.04%)</title><rect x="92.8093%" y="1365" width="0.0355%" height="15" fill="rgb(224,221,49)" fg:x="4310756380" fg:w="1646825"/><text x="93.0593%" y="1375.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::send::_{{closure}} (794,065,334 samples, 17.10%)</title><rect x="76.0400%" y="1669" width="17.0960%" height="15" fill="rgb(253,169,27)" fg:x="3531863596" fg:w="794065334"/><text x="76.2900%" y="1679.50">pgdog::backend::pool::conn..</text></g><g><title>pgdog::backend::pool::connection::binding::Binding::send::_{{closure}} (792,084,626 samples, 17.05%)</title><rect x="76.0826%" y="1653" width="17.0533%" height="15" fill="rgb(211,206,16)" fg:x="3533844304" fg:w="792084626"/><text x="76.3326%" y="1663.50">pgdog::backend::pool::conn..</text></g><g><title>pgdog::backend::server::Server::send::_{{closure}} (785,144,427 samples, 16.90%)</title><rect x="76.2320%" y="1637" width="16.9039%" height="15" fill="rgb(244,87,35)" fg:x="3540784503" fg:w="785144427"/><text x="76.4820%" y="1647.50">pgdog::backend::server::Se..</text></g><g><title>std::time::Instant::now (13,525,725 samples, 0.29%)</title><rect x="92.8448%" y="1621" width="0.2912%" height="15" fill="rgb(246,28,10)" fg:x="4312403205" fg:w="13525725"/><text x="93.0948%" y="1631.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (13,525,725 samples, 0.29%)</title><rect x="92.8448%" y="1605" width="0.2912%" height="15" fill="rgb(229,12,44)" fg:x="4312403205" fg:w="13525725"/><text x="93.0948%" y="1615.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (13,525,725 samples, 0.29%)</title><rect x="92.8448%" y="1589" width="0.2912%" height="15" fill="rgb(210,145,37)" fg:x="4312403205" fg:w="13525725"/><text x="93.0948%" y="1599.50"></text></g><g><title>clock_gettime (13,525,725 samples, 0.29%)</title><rect x="92.8448%" y="1573" width="0.2912%" height="15" fill="rgb(227,112,52)" fg:x="4312403205" fg:w="13525725"/><text x="93.0948%" y="1583.50"></text></g><g><title>__vdso_clock_gettime (13,525,725 samples, 0.29%)</title><rect x="92.8448%" y="1557" width="0.2912%" height="15" fill="rgb(238,155,34)" fg:x="4312403205" fg:w="13525725"/><text x="93.0948%" y="1567.50"></text></g><g><title>pgdog::backend::pool::request::Request::new (5,829,700 samples, 0.13%)</title><rect x="93.1360%" y="1669" width="0.1255%" height="15" fill="rgb(239,226,36)" fg:x="4325928930" fg:w="5829700"/><text x="93.3860%" y="1679.50"></text></g><g><title>std::time::Instant::now (5,829,700 samples, 0.13%)</title><rect x="93.1360%" y="1653" width="0.1255%" height="15" fill="rgb(230,16,23)" fg:x="4325928930" fg:w="5829700"/><text x="93.3860%" y="1663.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (5,829,700 samples, 0.13%)</title><rect x="93.1360%" y="1637" width="0.1255%" height="15" fill="rgb(236,171,36)" fg:x="4325928930" fg:w="5829700"/><text x="93.3860%" y="1647.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (4,981,874 samples, 0.11%)</title><rect x="93.1542%" y="1621" width="0.1073%" height="15" fill="rgb(221,22,14)" fg:x="4326776756" fg:w="4981874"/><text x="93.4042%" y="1631.50"></text></g><g><title>clock_gettime (4,981,874 samples, 0.11%)</title><rect x="93.1542%" y="1605" width="0.1073%" height="15" fill="rgb(242,43,11)" fg:x="4326776756" fg:w="4981874"/><text x="93.4042%" y="1615.50"></text></g><g><title>__vdso_clock_gettime (4,981,874 samples, 0.11%)</title><rect x="93.1542%" y="1589" width="0.1073%" height="15" fill="rgb(232,69,23)" fg:x="4326776756" fg:w="4981874"/><text x="93.4042%" y="1599.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::copy (1,177,926 samples, 0.03%)</title><rect x="93.2615%" y="1669" width="0.0254%" height="15" fill="rgb(216,180,54)" fg:x="4331758630" fg:w="1177926"/><text x="93.5115%" y="1679.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,177,926 samples, 0.03%)</title><rect x="93.2615%" y="1653" width="0.0254%" height="15" fill="rgb(216,5,24)" fg:x="4331758630" fg:w="1177926"/><text x="93.5115%" y="1663.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::copy::_{{closure}} (1,177,926 samples, 0.03%)</title><rect x="93.2615%" y="1637" width="0.0254%" height="15" fill="rgb(225,89,9)" fg:x="4331758630" fg:w="1177926"/><text x="93.5115%" y="1647.50"></text></g><g><title>&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage as pgdog::net::messages::Protocol&gt;::code (1,177,926 samples, 0.03%)</title><rect x="93.2615%" y="1621" width="0.0254%" height="15" fill="rgb(243,75,33)" fg:x="4331758630" fg:w="1177926"/><text x="93.5115%" y="1631.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,188,592 samples, 0.05%)</title><rect x="93.3311%" y="1637" width="0.0471%" height="15" fill="rgb(247,141,45)" fg:x="4334991201" fg:w="2188592"/><text x="93.5811%" y="1647.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2,188,592 samples, 0.05%)</title><rect x="93.3311%" y="1621" width="0.0471%" height="15" fill="rgb(232,177,36)" fg:x="4334991201" fg:w="2188592"/><text x="93.5811%" y="1631.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::executable (6,544,617 samples, 0.14%)</title><rect x="93.2868%" y="1669" width="0.1409%" height="15" fill="rgb(219,125,36)" fg:x="4332936556" fg:w="6544617"/><text x="93.5368%" y="1679.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (6,544,617 samples, 0.14%)</title><rect x="93.2868%" y="1653" width="0.1409%" height="15" fill="rgb(227,94,9)" fg:x="4332936556" fg:w="6544617"/><text x="93.5368%" y="1663.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::executable::_{{closure}} (2,301,380 samples, 0.05%)</title><rect x="93.3782%" y="1637" width="0.0495%" height="15" fill="rgb(240,34,52)" fg:x="4337179793" fg:w="2301380"/><text x="93.6282%" y="1647.50"></text></g><g><title>&lt;pgdog::backend::protocol::protocol_message::ProtocolMessage as pgdog::net::messages::Protocol&gt;::code (2,301,380 samples, 0.05%)</title><rect x="93.3782%" y="1621" width="0.0495%" height="15" fill="rgb(216,45,12)" fg:x="4337179793" fg:w="2301380"/><text x="93.6282%" y="1631.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::len (2,824,474 samples, 0.06%)</title><rect x="93.4277%" y="1669" width="0.0608%" height="15" fill="rgb(246,21,19)" fg:x="4339481173" fg:w="2824474"/><text x="93.6777%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,175,111 samples, 0.03%)</title><rect x="93.4633%" y="1653" width="0.0253%" height="15" fill="rgb(213,98,42)" fg:x="4341130536" fg:w="1175111"/><text x="93.7133%" y="1663.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,175,111 samples, 0.03%)</title><rect x="93.4633%" y="1637" width="0.0253%" height="15" fill="rgb(250,136,47)" fg:x="4341130536" fg:w="1175111"/><text x="93.7133%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,175,111 samples, 0.03%)</title><rect x="93.4633%" y="1621" width="0.0253%" height="15" fill="rgb(251,124,27)" fg:x="4341130536" fg:w="1175111"/><text x="93.7133%" y="1631.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,175,111 samples, 0.03%)</title><rect x="93.4633%" y="1605" width="0.0253%" height="15" fill="rgb(229,180,14)" fg:x="4341130536" fg:w="1175111"/><text x="93.7133%" y="1615.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,175,111 samples, 0.03%)</title><rect x="93.4633%" y="1589" width="0.0253%" height="15" fill="rgb(245,216,25)" fg:x="4341130536" fg:w="1175111"/><text x="93.7133%" y="1599.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::len::_{{closure}} (1,175,111 samples, 0.03%)</title><rect x="93.4633%" y="1573" width="0.0253%" height="15" fill="rgb(251,43,5)" fg:x="4341130536" fg:w="1175111"/><text x="93.7133%" y="1583.50"></text></g><g><title>pgdog::backend::protocol::protocol_message::ProtocolMessage::len (1,175,111 samples, 0.03%)</title><rect x="93.4633%" y="1557" width="0.0253%" height="15" fill="rgb(250,128,24)" fg:x="4341130536" fg:w="1175111"/><text x="93.7133%" y="1567.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3,570,387 samples, 0.08%)</title><rect x="93.7703%" y="1589" width="0.0769%" height="15" fill="rgb(217,117,27)" fg:x="4355393050" fg:w="3570387"/><text x="94.0203%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::string::String&gt;&gt; (669,069 samples, 0.01%)</title><rect x="93.8472%" y="1557" width="0.0144%" height="15" fill="rgb(245,147,4)" fg:x="4358963437" fg:w="669069"/><text x="94.0972%" y="1567.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (669,069 samples, 0.01%)</title><rect x="93.8472%" y="1541" width="0.0144%" height="15" fill="rgb(242,201,35)" fg:x="4358963437" fg:w="669069"/><text x="94.0972%" y="1551.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (669,069 samples, 0.01%)</title><rect x="93.8472%" y="1525" width="0.0144%" height="15" fill="rgb(218,181,1)" fg:x="4358963437" fg:w="669069"/><text x="94.0972%" y="1535.50"></text></g><g><title>core::sync::atomic::atomic_sub (669,069 samples, 0.01%)</title><rect x="93.8472%" y="1509" width="0.0144%" height="15" fill="rgb(222,6,29)" fg:x="4358963437" fg:w="669069"/><text x="94.0972%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::frontend::buffer::BufferedQuery&gt; (2,110,603 samples, 0.05%)</title><rect x="93.8472%" y="1589" width="0.0454%" height="15" fill="rgb(208,186,3)" fg:x="4358963437" fg:w="2110603"/><text x="94.0972%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::net::messages::parse::Parse&gt; (2,110,603 samples, 0.05%)</title><rect x="93.8472%" y="1573" width="0.0454%" height="15" fill="rgb(216,36,26)" fg:x="4358963437" fg:w="2110603"/><text x="94.0972%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;i32&gt;&gt;&gt; (1,441,534 samples, 0.03%)</title><rect x="93.8616%" y="1557" width="0.0310%" height="15" fill="rgb(248,201,23)" fg:x="4359632506" fg:w="1441534"/><text x="94.1116%" y="1567.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,441,534 samples, 0.03%)</title><rect x="93.8616%" y="1541" width="0.0310%" height="15" fill="rgb(251,170,31)" fg:x="4359632506" fg:w="1441534"/><text x="94.1116%" y="1551.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::parameters (1,283,509 samples, 0.03%)</title><rect x="93.8929%" y="1589" width="0.0276%" height="15" fill="rgb(207,110,25)" fg:x="4361087674" fg:w="1283509"/><text x="94.1429%" y="1599.50"></text></g><g><title>pgdog::frontend::buffer::Buffer::query (8,472,011 samples, 0.18%)</title><rect x="93.9206%" y="1589" width="0.1824%" height="15" fill="rgb(250,54,15)" fg:x="4362371183" fg:w="8472011"/><text x="94.1706%" y="1599.50"></text></g><g><title>&lt;pgdog::net::messages::parse::Parse as core::clone::Clone&gt;::clone (6,940,558 samples, 0.15%)</title><rect x="93.9535%" y="1573" width="0.1494%" height="15" fill="rgb(227,68,33)" fg:x="4363902636" fg:w="6940558"/><text x="94.2035%" y="1583.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,150,370 samples, 0.11%)</title><rect x="93.9921%" y="1557" width="0.1109%" height="15" fill="rgb(238,34,41)" fg:x="4365692824" fg:w="5150370"/><text x="94.2421%" y="1567.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (3,251,998 samples, 0.07%)</title><rect x="94.0329%" y="1541" width="0.0700%" height="15" fill="rgb(220,11,15)" fg:x="4367591196" fg:w="3251998"/><text x="94.2829%" y="1551.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3,251,998 samples, 0.07%)</title><rect x="94.0329%" y="1525" width="0.0700%" height="15" fill="rgb(246,111,35)" fg:x="4367591196" fg:w="3251998"/><text x="94.2829%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;pgdog::config::ShardedTable&gt;&gt;&gt; (3,066,766 samples, 0.07%)</title><rect x="94.1590%" y="1541" width="0.0660%" height="15" fill="rgb(209,88,53)" fg:x="4373445689" fg:w="3066766"/><text x="94.4090%" y="1551.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,066,766 samples, 0.07%)</title><rect x="94.1590%" y="1525" width="0.0660%" height="15" fill="rgb(231,185,47)" fg:x="4373445689" fg:w="3066766"/><text x="94.4090%" y="1535.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3,066,766 samples, 0.07%)</title><rect x="94.1590%" y="1509" width="0.0660%" height="15" fill="rgb(233,154,1)" fg:x="4373445689" fg:w="3066766"/><text x="94.4090%" y="1519.50"></text></g><g><title>core::sync::atomic::atomic_sub (3,066,766 samples, 0.07%)</title><rect x="94.1590%" y="1493" width="0.0660%" height="15" fill="rgb(225,15,46)" fg:x="4373445689" fg:w="3066766"/><text x="94.4090%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::pool::cluster::ShardingSchema&gt; (6,097,488 samples, 0.13%)</title><rect x="94.1590%" y="1573" width="0.1313%" height="15" fill="rgb(211,135,41)" fg:x="4373445689" fg:w="6097488"/><text x="94.4090%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::replication::sharded_tables::ShardedTables&gt; (6,097,488 samples, 0.13%)</title><rect x="94.1590%" y="1557" width="0.1313%" height="15" fill="rgb(208,54,0)" fg:x="4373445689" fg:w="6097488"/><text x="94.4090%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt;&gt; (3,030,722 samples, 0.07%)</title><rect x="94.2250%" y="1541" width="0.0653%" height="15" fill="rgb(244,136,14)" fg:x="4376512455" fg:w="3030722"/><text x="94.4750%" y="1551.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,030,722 samples, 0.07%)</title><rect x="94.2250%" y="1525" width="0.0653%" height="15" fill="rgb(241,56,14)" fg:x="4376512455" fg:w="3030722"/><text x="94.4750%" y="1535.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,543,825 samples, 0.03%)</title><rect x="94.2570%" y="1509" width="0.0332%" height="15" fill="rgb(205,80,24)" fg:x="4377999352" fg:w="1543825"/><text x="94.5070%" y="1519.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,543,825 samples, 0.03%)</title><rect x="94.2570%" y="1493" width="0.0332%" height="15" fill="rgb(220,57,4)" fg:x="4377999352" fg:w="1543825"/><text x="94.5070%" y="1503.50"></text></g><g><title>pgdog::backend::pool::cluster::Cluster::read_only (2,228,952 samples, 0.05%)</title><rect x="94.2903%" y="1573" width="0.0480%" height="15" fill="rgb(226,193,50)" fg:x="4379543177" fg:w="2228952"/><text x="94.5403%" y="1583.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,228,952 samples, 0.05%)</title><rect x="94.2903%" y="1557" width="0.0480%" height="15" fill="rgb(231,168,22)" fg:x="4379543177" fg:w="2228952"/><text x="94.5403%" y="1567.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2,228,952 samples, 0.05%)</title><rect x="94.2903%" y="1541" width="0.0480%" height="15" fill="rgb(254,215,14)" fg:x="4379543177" fg:w="2228952"/><text x="94.5403%" y="1551.50"></text></g><g><title>pgdog::backend::pool::cluster::Cluster::sharding_schema (2,454,423 samples, 0.05%)</title><rect x="94.3383%" y="1573" width="0.0528%" height="15" fill="rgb(211,115,16)" fg:x="4381772129" fg:w="2454423"/><text x="94.5883%" y="1583.50"></text></g><g><title>&lt;pgdog::backend::replication::sharded_tables::ShardedTables as core::clone::Clone&gt;::clone (2,454,423 samples, 0.05%)</title><rect x="94.3383%" y="1557" width="0.0528%" height="15" fill="rgb(236,210,16)" fg:x="4381772129" fg:w="2454423"/><text x="94.5883%" y="1567.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,454,423 samples, 0.05%)</title><rect x="94.3383%" y="1541" width="0.0528%" height="15" fill="rgb(221,94,12)" fg:x="4381772129" fg:w="2454423"/><text x="94.5883%" y="1551.50"></text></g><g><title>pgdog::backend::pool::cluster::Cluster::write_only (5,412,205 samples, 0.12%)</title><rect x="94.3911%" y="1573" width="0.1165%" height="15" fill="rgb(235,218,49)" fg:x="4384226552" fg:w="5412205"/><text x="94.6411%" y="1583.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,412,205 samples, 0.12%)</title><rect x="94.3911%" y="1557" width="0.1165%" height="15" fill="rgb(217,114,14)" fg:x="4384226552" fg:w="5412205"/><text x="94.6411%" y="1567.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,410,258 samples, 0.03%)</title><rect x="94.4773%" y="1541" width="0.0304%" height="15" fill="rgb(216,145,22)" fg:x="4388228499" fg:w="1410258"/><text x="94.7273%" y="1551.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (45,849,202 samples, 0.99%)</title><rect x="93.5843%" y="1653" width="0.9871%" height="15" fill="rgb(217,112,39)" fg:x="4346752191" fg:w="45849202"/><text x="93.8343%" y="1663.50"></text></g><g><title>pgdog::frontend::client::inner::Inner::command::_{{closure}} (45,849,202 samples, 0.99%)</title><rect x="93.5843%" y="1637" width="0.9871%" height="15" fill="rgb(225,85,32)" fg:x="4346752191" fg:w="45849202"/><text x="93.8343%" y="1647.50"></text></g><g><title>pgdog::frontend::router::Router::query (45,849,202 samples, 0.99%)</title><rect x="93.5843%" y="1621" width="0.9871%" height="15" fill="rgb(245,209,47)" fg:x="4346752191" fg:w="45849202"/><text x="93.8343%" y="1631.50"></text></g><g><title>pgdog::frontend::router::parser::query::QueryParser::parse (45,849,202 samples, 0.99%)</title><rect x="93.5843%" y="1605" width="0.9871%" height="15" fill="rgb(218,220,15)" fg:x="4346752191" fg:w="45849202"/><text x="93.8343%" y="1615.50"></text></g><g><title>pgdog::frontend::router::parser::query::QueryParser::query (21,758,199 samples, 0.47%)</title><rect x="94.1030%" y="1589" width="0.4684%" height="15" fill="rgb(222,202,31)" fg:x="4370843194" fg:w="21758199"/><text x="94.3530%" y="1599.50"></text></g><g><title>pgdog::config::config (2,962,636 samples, 0.06%)</title><rect x="94.5076%" y="1573" width="0.0638%" height="15" fill="rgb(243,203,4)" fg:x="4389638757" fg:w="2962636"/><text x="94.7576%" y="1583.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load (2,962,636 samples, 0.06%)</title><rect x="94.5076%" y="1557" width="0.0638%" height="15" fill="rgb(237,92,17)" fg:x="4389638757" fg:w="2962636"/><text x="94.7576%" y="1567.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load (2,962,636 samples, 0.06%)</title><rect x="94.5076%" y="1541" width="0.0638%" height="15" fill="rgb(231,119,7)" fg:x="4389638757" fg:w="2962636"/><text x="94.7576%" y="1551.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (2,962,636 samples, 0.06%)</title><rect x="94.5076%" y="1525" width="0.0638%" height="15" fill="rgb(237,82,41)" fg:x="4389638757" fg:w="2962636"/><text x="94.7576%" y="1535.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,962,636 samples, 0.06%)</title><rect x="94.5076%" y="1509" width="0.0638%" height="15" fill="rgb(226,81,48)" fg:x="4389638757" fg:w="2962636"/><text x="94.7576%" y="1519.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with::_{{closure}} (2,962,636 samples, 0.06%)</title><rect x="94.5076%" y="1493" width="0.0638%" height="15" fill="rgb(234,70,51)" fg:x="4389638757" fg:w="2962636"/><text x="94.7576%" y="1503.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load::_{{closure}} (2,962,636 samples, 0.06%)</title><rect x="94.5076%" y="1477" width="0.0638%" height="15" fill="rgb(251,86,4)" fg:x="4389638757" fg:w="2962636"/><text x="94.7576%" y="1487.50"></text></g><g><title>arc_swap::strategy::hybrid::HybridProtection&lt;T&gt;::attempt (2,962,636 samples, 0.06%)</title><rect x="94.5076%" y="1461" width="0.0638%" height="15" fill="rgb(244,144,28)" fg:x="4389638757" fg:w="2962636"/><text x="94.7576%" y="1471.50"></text></g><g><title>arc_swap::debt::list::LocalNode::new_fast (2,962,636 samples, 0.06%)</title><rect x="94.5076%" y="1445" width="0.0638%" height="15" fill="rgb(232,161,39)" fg:x="4389638757" fg:w="2962636"/><text x="94.7576%" y="1455.50"></text></g><g><title>arc_swap::debt::fast::Slots::get_debt (2,962,636 samples, 0.06%)</title><rect x="94.5076%" y="1429" width="0.0638%" height="15" fill="rgb(247,34,51)" fg:x="4389638757" fg:w="2962636"/><text x="94.7576%" y="1439.50"></text></g><g><title>pgdog::frontend::client::inner::Inner::command (53,543,502 samples, 1.15%)</title><rect x="93.4886%" y="1669" width="1.1528%" height="15" fill="rgb(225,132,2)" fg:x="4342305647" fg:w="53543502"/><text x="93.7386%" y="1679.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::cluster (3,247,756 samples, 0.07%)</title><rect x="94.5714%" y="1653" width="0.0699%" height="15" fill="rgb(209,159,44)" fg:x="4392601393" fg:w="3247756"/><text x="94.8214%" y="1663.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (3,247,756 samples, 0.07%)</title><rect x="94.5714%" y="1637" width="0.0699%" height="15" fill="rgb(251,214,1)" fg:x="4392601393" fg:w="3247756"/><text x="94.8214%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::error::Error&gt; (1,313,478 samples, 0.03%)</title><rect x="94.6131%" y="1621" width="0.0283%" height="15" fill="rgb(247,84,47)" fg:x="4394535671" fg:w="1313478"/><text x="94.8631%" y="1631.50"></text></g><g><title>[libc.so.6] (10,848,693 samples, 0.23%)</title><rect x="95.0252%" y="1653" width="0.2336%" height="15" fill="rgb(240,111,43)" fg:x="4413680523" fg:w="10848693"/><text x="95.2752%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;pgdog::backend::pool::address::Address&gt;&gt; (1,077,977 samples, 0.02%)</title><rect x="95.2588%" y="1653" width="0.0232%" height="15" fill="rgb(215,214,35)" fg:x="4424529216" fg:w="1077977"/><text x="95.5088%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;pgdog::backend::pool::address::Address&gt;&gt; (1,077,977 samples, 0.02%)</title><rect x="95.2588%" y="1637" width="0.0232%" height="15" fill="rgb(248,207,23)" fg:x="4424529216" fg:w="1077977"/><text x="95.5088%" y="1647.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,077,977 samples, 0.02%)</title><rect x="95.2588%" y="1621" width="0.0232%" height="15" fill="rgb(214,186,4)" fg:x="4424529216" fg:w="1077977"/><text x="95.5088%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,077,977 samples, 0.02%)</title><rect x="95.2588%" y="1605" width="0.0232%" height="15" fill="rgb(220,133,22)" fg:x="4424529216" fg:w="1077977"/><text x="95.5088%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1,077,977 samples, 0.02%)</title><rect x="95.2588%" y="1589" width="0.0232%" height="15" fill="rgb(239,134,19)" fg:x="4424529216" fg:w="1077977"/><text x="95.5088%" y="1599.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::addr (2,831,712 samples, 0.06%)</title><rect x="95.2820%" y="1653" width="0.0610%" height="15" fill="rgb(250,140,9)" fg:x="4425607288" fg:w="2831712"/><text x="95.5320%" y="1663.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (16,608,951 samples, 0.36%)</title><rect x="96.1593%" y="1621" width="0.3576%" height="15" fill="rgb(225,59,14)" fg:x="4466356702" fg:w="16608951"/><text x="96.4093%" y="1631.50"></text></g><g><title>[libc.so.6] (16,608,951 samples, 0.36%)</title><rect x="96.1593%" y="1605" width="0.3576%" height="15" fill="rgb(214,152,51)" fg:x="4466356702" fg:w="16608951"/><text x="96.4093%" y="1615.50"></text></g><g><title>[libc.so.6] (13,536,337 samples, 0.29%)</title><rect x="96.5169%" y="1621" width="0.2914%" height="15" fill="rgb(251,227,43)" fg:x="4482965653" fg:w="13536337"/><text x="96.7669%" y="1631.50"></text></g><g><title>core::ptr::read (17,091,701 samples, 0.37%)</title><rect x="96.8084%" y="1605" width="0.3680%" height="15" fill="rgb(241,96,17)" fg:x="4496501990" fg:w="17091701"/><text x="97.0584%" y="1615.50"></text></g><g><title>[libc.so.6] (17,091,701 samples, 0.37%)</title><rect x="96.8084%" y="1589" width="0.3680%" height="15" fill="rgb(234,198,43)" fg:x="4496501990" fg:w="17091701"/><text x="97.0584%" y="1599.50"></text></g><g><title>core::mem::replace (27,044,722 samples, 0.58%)</title><rect x="96.8084%" y="1621" width="0.5823%" height="15" fill="rgb(220,108,29)" fg:x="4496501990" fg:w="27044722"/><text x="97.0584%" y="1631.50"></text></g><g><title>core::ptr::write (9,953,021 samples, 0.21%)</title><rect x="97.1763%" y="1605" width="0.2143%" height="15" fill="rgb(226,163,33)" fg:x="4513593691" fg:w="9953021"/><text x="97.4263%" y="1615.50"></text></g><g><title>[libc.so.6] (9,953,021 samples, 0.21%)</title><rect x="97.1763%" y="1589" width="0.2143%" height="15" fill="rgb(205,194,45)" fg:x="4513593691" fg:w="9953021"/><text x="97.4263%" y="1599.50"></text></g><g><title>[libc.so.6] (8,023,169 samples, 0.17%)</title><rect x="97.4076%" y="1605" width="0.1727%" height="15" fill="rgb(206,143,44)" fg:x="4524336710" fg:w="8023169"/><text x="97.6576%" y="1615.50"></text></g><g><title>pgdog::backend::pool::cluster::Cluster::replica::_{{closure}} (14,239,067 samples, 0.31%)</title><rect x="97.3906%" y="1621" width="0.3066%" height="15" fill="rgb(236,136,36)" fg:x="4523546712" fg:w="14239067"/><text x="97.6406%" y="1631.50"></text></g><g><title>pgdog::backend::pool::shard::Shard::replica::_{{closure}} (5,425,900 samples, 0.12%)</title><rect x="97.5804%" y="1605" width="0.1168%" height="15" fill="rgb(249,172,42)" fg:x="4532359879" fg:w="5425900"/><text x="97.8304%" y="1615.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::cluster (2,907,764 samples, 0.06%)</title><rect x="97.6972%" y="1621" width="0.0626%" height="15" fill="rgb(216,139,23)" fg:x="4537785779" fg:w="2907764"/><text x="97.9472%" y="1631.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (2,907,764 samples, 0.06%)</title><rect x="97.6972%" y="1605" width="0.0626%" height="15" fill="rgb(207,166,20)" fg:x="4537785779" fg:w="2907764"/><text x="97.9472%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::error::Error&gt; (2,907,764 samples, 0.06%)</title><rect x="97.6972%" y="1589" width="0.0626%" height="15" fill="rgb(210,209,22)" fg:x="4537785779" fg:w="2907764"/><text x="97.9472%" y="1599.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1,221,091 samples, 0.03%)</title><rect x="97.7598%" y="1573" width="0.0263%" height="15" fill="rgb(232,118,20)" fg:x="4540693543" fg:w="1221091"/><text x="98.0098%" y="1583.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::connect::_{{closure}} (117,216,985 samples, 2.52%)</title><rect x="95.3430%" y="1653" width="2.5236%" height="15" fill="rgb(238,113,42)" fg:x="4428439000" fg:w="117216985"/><text x="95.5930%" y="1663.50">pg..</text></g><g><title>pgdog::backend::pool::connection::Connection::try_conn::_{{closure}} (90,275,235 samples, 1.94%)</title><rect x="95.9230%" y="1637" width="1.9436%" height="15" fill="rgb(231,42,5)" fg:x="4455380750" fg:w="90275235"/><text x="96.1730%" y="1647.50">p..</text></g><g><title>pgdog::backend::pool::connection::Connection::session_mode (4,962,442 samples, 0.11%)</title><rect x="97.7598%" y="1621" width="0.1068%" height="15" fill="rgb(243,166,24)" fg:x="4540693543" fg:w="4962442"/><text x="98.0098%" y="1631.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::transaction_mode (4,962,442 samples, 0.11%)</title><rect x="97.7598%" y="1605" width="0.1068%" height="15" fill="rgb(237,226,12)" fg:x="4540693543" fg:w="4962442"/><text x="98.0098%" y="1615.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::cluster (4,962,442 samples, 0.11%)</title><rect x="97.7598%" y="1589" width="0.1068%" height="15" fill="rgb(229,133,24)" fg:x="4540693543" fg:w="4962442"/><text x="98.0098%" y="1599.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (3,741,351 samples, 0.08%)</title><rect x="97.7861%" y="1573" width="0.0806%" height="15" fill="rgb(238,33,43)" fg:x="4541914634" fg:w="3741351"/><text x="98.0361%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::error::Error&gt; (3,741,351 samples, 0.08%)</title><rect x="97.7861%" y="1557" width="0.0806%" height="15" fill="rgb(227,59,38)" fg:x="4541914634" fg:w="3741351"/><text x="98.0361%" y="1567.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2,968,040 samples, 0.06%)</title><rect x="97.8666%" y="1637" width="0.0639%" height="15" fill="rgb(230,97,0)" fg:x="4545655985" fg:w="2968040"/><text x="98.1166%" y="1647.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2,968,040 samples, 0.06%)</title><rect x="97.8666%" y="1621" width="0.0639%" height="15" fill="rgb(250,173,50)" fg:x="4545655985" fg:w="2968040"/><text x="98.1166%" y="1631.50"></text></g><g><title>core::intrinsics::likely (1,248,614 samples, 0.03%)</title><rect x="97.9305%" y="1541" width="0.0269%" height="15" fill="rgb(240,15,50)" fg:x="4548624025" fg:w="1248614"/><text x="98.1805%" y="1551.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (3,655,927 samples, 0.08%)</title><rect x="97.9574%" y="1541" width="0.0787%" height="15" fill="rgb(221,93,22)" fg:x="4549872639" fg:w="3655927"/><text x="98.2074%" y="1551.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3,655,927 samples, 0.08%)</title><rect x="97.9574%" y="1525" width="0.0787%" height="15" fill="rgb(245,180,53)" fg:x="4549872639" fg:w="3655927"/><text x="98.2074%" y="1535.50"></text></g><g><title>pgdog::frontend::comms::Comms::stats (9,367,404 samples, 0.20%)</title><rect x="97.8666%" y="1653" width="0.2017%" height="15" fill="rgb(231,88,51)" fg:x="4545655985" fg:w="9367404"/><text x="98.1166%" y="1663.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (6,399,364 samples, 0.14%)</title><rect x="97.9305%" y="1637" width="0.1378%" height="15" fill="rgb(240,58,21)" fg:x="4548624025" fg:w="6399364"/><text x="98.1805%" y="1647.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (6,399,364 samples, 0.14%)</title><rect x="97.9305%" y="1621" width="0.1378%" height="15" fill="rgb(237,21,10)" fg:x="4548624025" fg:w="6399364"/><text x="98.1805%" y="1631.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (6,399,364 samples, 0.14%)</title><rect x="97.9305%" y="1605" width="0.1378%" height="15" fill="rgb(218,43,11)" fg:x="4548624025" fg:w="6399364"/><text x="98.1805%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (6,399,364 samples, 0.14%)</title><rect x="97.9305%" y="1589" width="0.1378%" height="15" fill="rgb(218,221,29)" fg:x="4548624025" fg:w="6399364"/><text x="98.1805%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6,399,364 samples, 0.14%)</title><rect x="97.9305%" y="1573" width="0.1378%" height="15" fill="rgb(214,118,42)" fg:x="4548624025" fg:w="6399364"/><text x="98.1805%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (6,399,364 samples, 0.14%)</title><rect x="97.9305%" y="1557" width="0.1378%" height="15" fill="rgb(251,200,26)" fg:x="4548624025" fg:w="6399364"/><text x="98.1805%" y="1567.50"></text></g><g><title>hashbrown::control::tag::Tag::full (1,494,823 samples, 0.03%)</title><rect x="98.0361%" y="1541" width="0.0322%" height="15" fill="rgb(237,101,39)" fg:x="4553528566" fg:w="1494823"/><text x="98.2861%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,807,173 samples, 0.06%)</title><rect x="98.2800%" y="1605" width="0.0604%" height="15" fill="rgb(251,117,11)" fg:x="4564858191" fg:w="2807173"/><text x="98.5300%" y="1615.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,807,173 samples, 0.06%)</title><rect x="98.2800%" y="1589" width="0.0604%" height="15" fill="rgb(216,223,23)" fg:x="4564858191" fg:w="2807173"/><text x="98.5300%" y="1599.50"></text></g><g><title>alloc::slice::hack::to_vec (2,807,173 samples, 0.06%)</title><rect x="98.2800%" y="1573" width="0.0604%" height="15" fill="rgb(251,54,12)" fg:x="4564858191" fg:w="2807173"/><text x="98.5300%" y="1583.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,807,173 samples, 0.06%)</title><rect x="98.2800%" y="1557" width="0.0604%" height="15" fill="rgb(254,176,54)" fg:x="4564858191" fg:w="2807173"/><text x="98.5300%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,782,524 samples, 0.04%)</title><rect x="98.3021%" y="1541" width="0.0384%" height="15" fill="rgb(210,32,8)" fg:x="4565882840" fg:w="1782524"/><text x="98.5521%" y="1551.50"></text></g><g><title>pgdog::frontend::router::Router::route (13,723,488 samples, 0.30%)</title><rect x="98.0683%" y="1653" width="0.2955%" height="15" fill="rgb(235,52,38)" fg:x="4555023389" fg:w="13723488"/><text x="98.3183%" y="1663.50"></text></g><g><title>pgdog::frontend::router::parser::query::QueryParser::route (13,723,488 samples, 0.30%)</title><rect x="98.0683%" y="1637" width="0.2955%" height="15" fill="rgb(231,4,44)" fg:x="4555023389" fg:w="13723488"/><text x="98.3183%" y="1647.50"></text></g><g><title>&lt;pgdog::frontend::router::parser::route::Route as core::clone::Clone&gt;::clone (11,864,483 samples, 0.26%)</title><rect x="98.1083%" y="1621" width="0.2554%" height="15" fill="rgb(249,2,32)" fg:x="4556882394" fg:w="11864483"/><text x="98.3583%" y="1631.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,081,513 samples, 0.02%)</title><rect x="98.3405%" y="1605" width="0.0233%" height="15" fill="rgb(224,65,26)" fg:x="4567665364" fg:w="1081513"/><text x="98.5905%" y="1615.50"></text></g><g><title>pgdog::frontend::client::inner::Inner::connect::_{{closure}} (178,792,156 samples, 3.85%)</title><rect x="94.6413%" y="1669" width="3.8493%" height="15" fill="rgb(250,73,40)" fg:x="4395849149" fg:w="178792156"/><text x="94.8913%" y="1679.50">pgdo..</text></g><g><title>pgdog::frontend::stats::Stats::connected (5,894,428 samples, 0.13%)</title><rect x="98.3638%" y="1653" width="0.1269%" height="15" fill="rgb(253,177,16)" fg:x="4568746877" fg:w="5894428"/><text x="98.6138%" y="1663.50"></text></g><g><title>std::time::Instant::now (2,801,228 samples, 0.06%)</title><rect x="98.4304%" y="1637" width="0.0603%" height="15" fill="rgb(217,32,34)" fg:x="4571840077" fg:w="2801228"/><text x="98.6804%" y="1647.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (2,801,228 samples, 0.06%)</title><rect x="98.4304%" y="1621" width="0.0603%" height="15" fill="rgb(212,7,10)" fg:x="4571840077" fg:w="2801228"/><text x="98.6804%" y="1631.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (2,801,228 samples, 0.06%)</title><rect x="98.4304%" y="1605" width="0.0603%" height="15" fill="rgb(245,89,8)" fg:x="4571840077" fg:w="2801228"/><text x="98.6804%" y="1615.50"></text></g><g><title>clock_gettime (1,373,356 samples, 0.03%)</title><rect x="98.4611%" y="1589" width="0.0296%" height="15" fill="rgb(237,16,53)" fg:x="4573267949" fg:w="1373356"/><text x="98.7111%" y="1599.50"></text></g><g><title>pgdog::frontend::client::inner::Inner::connected (2,775,082 samples, 0.06%)</title><rect x="98.4907%" y="1669" width="0.0597%" height="15" fill="rgb(250,204,30)" fg:x="4574641305" fg:w="2775082"/><text x="98.7407%" y="1679.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::connected (2,775,082 samples, 0.06%)</title><rect x="98.4907%" y="1653" width="0.0597%" height="15" fill="rgb(208,77,27)" fg:x="4574641305" fg:w="2775082"/><text x="98.7407%" y="1663.50"></text></g><g><title>pgdog::backend::pool::connection::binding::Binding::connected (2,775,082 samples, 0.06%)</title><rect x="98.4907%" y="1637" width="0.0597%" height="15" fill="rgb(250,204,28)" fg:x="4574641305" fg:w="2775082"/><text x="98.7407%" y="1647.50"></text></g><g><title>pgdog::frontend::client::timeouts::Timeouts::query_timeout (1,436,047 samples, 0.03%)</title><rect x="98.5504%" y="1669" width="0.0309%" height="15" fill="rgb(244,63,21)" fg:x="4577416387" fg:w="1436047"/><text x="98.8004%" y="1679.50"></text></g><g><title>std::time::Instant::now (17,519,118 samples, 0.38%)</title><rect x="98.5813%" y="1653" width="0.3772%" height="15" fill="rgb(236,85,44)" fg:x="4578852434" fg:w="17519118"/><text x="98.8313%" y="1663.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (17,519,118 samples, 0.38%)</title><rect x="98.5813%" y="1637" width="0.3772%" height="15" fill="rgb(215,98,4)" fg:x="4578852434" fg:w="17519118"/><text x="98.8313%" y="1647.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (16,569,524 samples, 0.36%)</title><rect x="98.6018%" y="1621" width="0.3567%" height="15" fill="rgb(235,38,11)" fg:x="4579802028" fg:w="16569524"/><text x="98.8518%" y="1631.50"></text></g><g><title>clock_gettime (14,777,724 samples, 0.32%)</title><rect x="98.6404%" y="1605" width="0.3182%" height="15" fill="rgb(254,186,25)" fg:x="4581593828" fg:w="14777724"/><text x="98.8904%" y="1615.50"></text></g><g><title>__vdso_clock_gettime (9,725,477 samples, 0.21%)</title><rect x="98.7491%" y="1589" width="0.2094%" height="15" fill="rgb(225,55,31)" fg:x="4586646075" fg:w="9725477"/><text x="98.9991%" y="1599.50"></text></g><g><title>pgdog::frontend::stats::Stats::received (25,423,139 samples, 0.55%)</title><rect x="98.5813%" y="1669" width="0.5474%" height="15" fill="rgb(211,15,21)" fg:x="4578852434" fg:w="25423139"/><text x="98.8313%" y="1679.50"></text></g><g><title>std::time::SystemTime::now (7,904,021 samples, 0.17%)</title><rect x="98.9585%" y="1653" width="0.1702%" height="15" fill="rgb(215,187,41)" fg:x="4596371552" fg:w="7904021"/><text x="99.2085%" y="1663.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::now (7,904,021 samples, 0.17%)</title><rect x="98.9585%" y="1637" width="0.1702%" height="15" fill="rgb(248,69,32)" fg:x="4596371552" fg:w="7904021"/><text x="99.2085%" y="1647.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (7,904,021 samples, 0.17%)</title><rect x="98.9585%" y="1621" width="0.1702%" height="15" fill="rgb(252,102,52)" fg:x="4596371552" fg:w="7904021"/><text x="99.2085%" y="1631.50"></text></g><g><title>clock_gettime (7,904,021 samples, 0.17%)</title><rect x="98.9585%" y="1605" width="0.1702%" height="15" fill="rgb(253,140,32)" fg:x="4596371552" fg:w="7904021"/><text x="99.2085%" y="1615.50"></text></g><g><title>__vdso_clock_gettime (7,904,021 samples, 0.17%)</title><rect x="98.9585%" y="1589" width="0.1702%" height="15" fill="rgb(216,56,42)" fg:x="4596371552" fg:w="7904021"/><text x="99.2085%" y="1599.50"></text></g><g><title>[libc.so.6] (16,772,092 samples, 0.36%)</title><rect x="99.1696%" y="1653" width="0.3611%" height="15" fill="rgb(216,184,14)" fg:x="4606175568" fg:w="16772092"/><text x="99.4196%" y="1663.50"></text></g><g><title>tokio::time::instant::Instant::now (13,041,579 samples, 0.28%)</title><rect x="99.5307%" y="1653" width="0.2808%" height="15" fill="rgb(237,187,27)" fg:x="4622947660" fg:w="13041579"/><text x="99.7807%" y="1663.50"></text></g><g><title>tokio::time::instant::variant::now (13,041,579 samples, 0.28%)</title><rect x="99.5307%" y="1637" width="0.2808%" height="15" fill="rgb(219,65,3)" fg:x="4622947660" fg:w="13041579"/><text x="99.7807%" y="1647.50"></text></g><g><title>std::time::Instant::now (13,041,579 samples, 0.28%)</title><rect x="99.5307%" y="1621" width="0.2808%" height="15" fill="rgb(245,83,25)" fg:x="4622947660" fg:w="13041579"/><text x="99.7807%" y="1631.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (13,041,579 samples, 0.28%)</title><rect x="99.5307%" y="1605" width="0.2808%" height="15" fill="rgb(214,205,45)" fg:x="4622947660" fg:w="13041579"/><text x="99.7807%" y="1615.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (13,041,579 samples, 0.28%)</title><rect x="99.5307%" y="1589" width="0.2808%" height="15" fill="rgb(241,20,18)" fg:x="4622947660" fg:w="13041579"/><text x="99.7807%" y="1599.50"></text></g><g><title>clock_gettime (11,826,113 samples, 0.25%)</title><rect x="99.5569%" y="1573" width="0.2546%" height="15" fill="rgb(232,163,23)" fg:x="4624163126" fg:w="11826113"/><text x="99.8069%" y="1583.50"></text></g><g><title>__vdso_clock_gettime (11,826,113 samples, 0.25%)</title><rect x="99.5569%" y="1557" width="0.2546%" height="15" fill="rgb(214,5,46)" fg:x="4624163126" fg:w="11826113"/><text x="99.8069%" y="1567.50"></text></g><g><title>tokio::runtime::scheduler::Handle::current (1,544,558 samples, 0.03%)</title><rect x="99.8367%" y="1637" width="0.0333%" height="15" fill="rgb(229,78,17)" fg:x="4637162712" fg:w="1544558"/><text x="100.0867%" y="1647.50"></text></g><g><title>tokio::runtime::context::current::with_current (1,544,558 samples, 0.03%)</title><rect x="99.8367%" y="1621" width="0.0333%" height="15" fill="rgb(248,89,10)" fg:x="4637162712" fg:w="1544558"/><text x="100.0867%" y="1631.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,544,558 samples, 0.03%)</title><rect x="99.8367%" y="1605" width="0.0333%" height="15" fill="rgb(248,54,15)" fg:x="4637162712" fg:w="1544558"/><text x="100.0867%" y="1615.50"></text></g><g><title>tokio::runtime::context::current::with_current::_{{closure}} (1,195,341 samples, 0.03%)</title><rect x="99.8443%" y="1589" width="0.0257%" height="15" fill="rgb(223,116,6)" fg:x="4637511929" fg:w="1195341"/><text x="100.0943%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;core::option::Option&lt;tokio::runtime::scheduler::Handle&gt;&gt;&gt; (1,195,341 samples, 0.03%)</title><rect x="99.8443%" y="1573" width="0.0257%" height="15" fill="rgb(205,125,38)" fg:x="4637511929" fg:w="1195341"/><text x="100.0943%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (1,195,341 samples, 0.03%)</title><rect x="99.8443%" y="1557" width="0.0257%" height="15" fill="rgb(251,78,38)" fg:x="4637511929" fg:w="1195341"/><text x="100.0943%" y="1567.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (1,195,341 samples, 0.03%)</title><rect x="99.8443%" y="1541" width="0.0257%" height="15" fill="rgb(253,78,28)" fg:x="4637511929" fg:w="1195341"/><text x="100.0943%" y="1551.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1,195,341 samples, 0.03%)</title><rect x="99.8443%" y="1525" width="0.0257%" height="15" fill="rgb(209,120,3)" fg:x="4637511929" fg:w="1195341"/><text x="100.0943%" y="1535.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1,195,341 samples, 0.03%)</title><rect x="99.8443%" y="1509" width="0.0257%" height="15" fill="rgb(238,229,9)" fg:x="4637511929" fg:w="1195341"/><text x="100.0943%" y="1519.50"></text></g><g><title>core::mem::replace (1,195,341 samples, 0.03%)</title><rect x="99.8443%" y="1493" width="0.0257%" height="15" fill="rgb(253,159,18)" fg:x="4637511929" fg:w="1195341"/><text x="100.0943%" y="1503.50"></text></g><g><title>core::ptr::write (1,195,341 samples, 0.03%)</title><rect x="99.8443%" y="1477" width="0.0257%" height="15" fill="rgb(244,42,34)" fg:x="4637511929" fg:w="1195341"/><text x="100.0943%" y="1487.50"></text></g><g><title>pgdog::frontend::client::Client::client_messages::_{{closure}} (1,232,508,225 samples, 26.54%)</title><rect x="73.3631%" y="1685" width="26.5355%" height="15" fill="rgb(224,8,7)" fg:x="3407529033" fg:w="1232508225"/><text x="73.6131%" y="1695.50">pgdog::frontend::client::Client::client_me..</text></g><g><title>tokio::time::timeout::timeout (35,761,685 samples, 0.77%)</title><rect x="99.1287%" y="1669" width="0.7699%" height="15" fill="rgb(210,201,45)" fg:x="4604275573" fg:w="35761685"/><text x="99.3787%" y="1679.50"></text></g><g><title>tokio::time::sleep::Sleep::new_timeout (4,048,019 samples, 0.09%)</title><rect x="99.8115%" y="1653" width="0.0872%" height="15" fill="rgb(252,185,21)" fg:x="4635989239" fg:w="4048019"/><text x="100.0615%" y="1663.50"></text></g><g><title>tokio::runtime::time::entry::TimerEntry::new (1,329,988 samples, 0.03%)</title><rect x="99.8700%" y="1637" width="0.0286%" height="15" fill="rgb(223,131,1)" fg:x="4638707270" fg:w="1329988"/><text x="100.1200%" y="1647.50"></text></g><g><title>tokio::runtime::driver::Handle::time (1,329,988 samples, 0.03%)</title><rect x="99.8700%" y="1621" width="0.0286%" height="15" fill="rgb(245,141,16)" fg:x="4638707270" fg:w="1329988"/><text x="100.1200%" y="1631.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1,329,988 samples, 0.03%)</title><rect x="99.8700%" y="1605" width="0.0286%" height="15" fill="rgb(229,55,45)" fg:x="4638707270" fg:w="1329988"/><text x="100.1200%" y="1615.50"></text></g><g><title>pgdog::backend::pool::cleanup::Cleanup::new (1,473,761 samples, 0.03%)</title><rect x="99.9169%" y="1541" width="0.0317%" height="15" fill="rgb(208,92,15)" fg:x="4640884778" fg:w="1473761"/><text x="100.1669%" y="1551.50"></text></g><g><title>[unknown] (1,473,761 samples, 0.03%)</title><rect x="99.9169%" y="1525" width="0.0317%" height="15" fill="rgb(234,185,47)" fg:x="4640884778" fg:w="1473761"/><text x="100.1669%" y="1535.50"></text></g><g><title>[unknown] (1,473,761 samples, 0.03%)</title><rect x="99.9169%" y="1509" width="0.0317%" height="15" fill="rgb(253,104,50)" fg:x="4640884778" fg:w="1473761"/><text x="100.1669%" y="1519.50"></text></g><g><title>[unknown] (1,473,761 samples, 0.03%)</title><rect x="99.9169%" y="1493" width="0.0317%" height="15" fill="rgb(205,70,7)" fg:x="4640884778" fg:w="1473761"/><text x="100.1669%" y="1503.50"></text></g><g><title>[unknown] (1,473,761 samples, 0.03%)</title><rect x="99.9169%" y="1477" width="0.0317%" height="15" fill="rgb(240,178,43)" fg:x="4640884778" fg:w="1473761"/><text x="100.1669%" y="1487.50"></text></g><g><title>[unknown] (1,473,761 samples, 0.03%)</title><rect x="99.9169%" y="1461" width="0.0317%" height="15" fill="rgb(214,112,2)" fg:x="4640884778" fg:w="1473761"/><text x="100.1669%" y="1471.50"></text></g><g><title>pgdog::frontend::listener::Listener::listen::_{{closure}}::_{{closure}} (1,245,902,667 samples, 26.82%)</title><rect x="73.1581%" y="1765" width="26.8239%" height="15" fill="rgb(206,46,17)" fg:x="3398005819" fg:w="1245902667"/><text x="73.4081%" y="1775.50">pgdog::frontend::listener::Listener::listen..</text></g><g><title>pgdog::frontend::listener::Listener::handle_client::_{{closure}} (1,245,902,667 samples, 26.82%)</title><rect x="73.1581%" y="1749" width="26.8239%" height="15" fill="rgb(225,220,16)" fg:x="3398005819" fg:w="1245902667"/><text x="73.4081%" y="1759.50">pgdog::frontend::listener::Listener::handle..</text></g><g><title>pgdog::frontend::client::Client::spawn::_{{closure}} (1,245,902,667 samples, 26.82%)</title><rect x="73.1581%" y="1733" width="26.8239%" height="15" fill="rgb(238,65,40)" fg:x="3398005819" fg:w="1245902667"/><text x="73.4081%" y="1743.50">pgdog::frontend::client::Client::spawn::_{{..</text></g><g><title>pgdog::frontend::client::Client::spawn_internal::_{{closure}} (1,245,902,667 samples, 26.82%)</title><rect x="73.1581%" y="1717" width="26.8239%" height="15" fill="rgb(230,151,21)" fg:x="3398005819" fg:w="1245902667"/><text x="73.4081%" y="1727.50">pgdog::frontend::client::Client::spawn_inte..</text></g><g><title>pgdog::frontend::client::Client::run::_{{closure}} (1,245,902,667 samples, 26.82%)</title><rect x="73.1581%" y="1701" width="26.8239%" height="15" fill="rgb(218,58,49)" fg:x="3398005819" fg:w="1245902667"/><text x="73.4081%" y="1711.50">pgdog::frontend::client::Client::run::_{{cl..</text></g><g><title>pgdog::frontend::client::Client::server_message::_{{closure}} (3,871,228 samples, 0.08%)</title><rect x="99.8986%" y="1685" width="0.0833%" height="15" fill="rgb(219,179,14)" fg:x="4640037258" fg:w="3871228"/><text x="100.1486%" y="1695.50"></text></g><g><title>pgdog::frontend::client::inner::Inner::disconnect (3,871,228 samples, 0.08%)</title><rect x="99.8986%" y="1669" width="0.0833%" height="15" fill="rgb(223,72,1)" fg:x="4640037258" fg:w="3871228"/><text x="100.1486%" y="1679.50"></text></g><g><title>pgdog::backend::pool::connection::Connection::disconnect (3,871,228 samples, 0.08%)</title><rect x="99.8986%" y="1653" width="0.0833%" height="15" fill="rgb(238,126,10)" fg:x="4640037258" fg:w="3871228"/><text x="100.1486%" y="1663.50"></text></g><g><title>pgdog::backend::pool::connection::binding::Binding::disconnect (3,871,228 samples, 0.08%)</title><rect x="99.8986%" y="1637" width="0.0833%" height="15" fill="rgb(224,206,38)" fg:x="4640037258" fg:w="3871228"/><text x="100.1486%" y="1647.50"></text></g><g><title>core::mem::drop (3,871,228 samples, 0.08%)</title><rect x="99.8986%" y="1621" width="0.0833%" height="15" fill="rgb(212,201,54)" fg:x="4640037258" fg:w="3871228"/><text x="100.1486%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;pgdog::backend::pool::guard::Guard&gt;&gt; (3,871,228 samples, 0.08%)</title><rect x="99.8986%" y="1605" width="0.0833%" height="15" fill="rgb(218,154,48)" fg:x="4640037258" fg:w="3871228"/><text x="100.1486%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;pgdog::backend::pool::guard::Guard&gt; (3,871,228 samples, 0.08%)</title><rect x="99.8986%" y="1589" width="0.0833%" height="15" fill="rgb(232,93,24)" fg:x="4640037258" fg:w="3871228"/><text x="100.1486%" y="1599.50"></text></g><g><title>&lt;pgdog::backend::pool::guard::Guard as core::ops::drop::Drop&gt;::drop (3,023,708 samples, 0.07%)</title><rect x="99.9169%" y="1573" width="0.0651%" height="15" fill="rgb(245,30,21)" fg:x="4640884778" fg:w="3023708"/><text x="100.1669%" y="1583.50"></text></g><g><title>pgdog::backend::pool::guard::Guard::cleanup (3,023,708 samples, 0.07%)</title><rect x="99.9169%" y="1557" width="0.0651%" height="15" fill="rgb(242,148,29)" fg:x="4640884778" fg:w="3023708"/><text x="100.1669%" y="1567.50"></text></g><g><title>pgdog::backend::pool::pool_impl::Pool::checkin (1,549,947 samples, 0.03%)</title><rect x="99.9486%" y="1541" width="0.0334%" height="15" fill="rgb(244,153,54)" fg:x="4642358539" fg:w="1549947"/><text x="100.1986%" y="1551.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (1,549,934 samples, 0.03%)</title><rect x="99.9486%" y="1525" width="0.0334%" height="15" fill="rgb(252,87,22)" fg:x="4642358552" fg:w="1549934"/><text x="100.1986%" y="1535.50"></text></g><g><title>tokio::sync::notify::Notify::notify_with_strategy (1,549,934 samples, 0.03%)</title><rect x="99.9486%" y="1509" width="0.0334%" height="15" fill="rgb(210,51,29)" fg:x="4642358552" fg:w="1549934"/><text x="100.1986%" y="1519.50"></text></g><g><title>all (4,644,745,725 samples, 100%)</title><rect x="0.0000%" y="1797" width="100.0000%" height="15" fill="rgb(242,136,47)" fg:x="0" fg:w="4644745725"/><text x="0.2500%" y="1807.50"></text></g><g><title>tokio-runtime-w (4,630,283,678 samples, 99.69%)</title><rect x="0.3114%" y="1781" width="99.6886%" height="15" fill="rgb(238,68,4)" fg:x="14462047" fg:w="4630283678"/><text x="0.5614%" y="1791.50">tokio-runtime-w</text></g><g><title>tokio::runtime::task::raw::poll (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1765" width="0.0180%" height="15" fill="rgb(242,161,30)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1775.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1749" width="0.0180%" height="15" fill="rgb(218,58,44)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1759.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1733" width="0.0180%" height="15" fill="rgb(252,125,32)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1743.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1717" width="0.0180%" height="15" fill="rgb(219,178,0)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1727.50"></text></g><g><title>std::panic::catch_unwind (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1701" width="0.0180%" height="15" fill="rgb(213,152,7)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1711.50"></text></g><g><title>std::panicking::try (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1685" width="0.0180%" height="15" fill="rgb(249,109,34)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1695.50"></text></g><g><title>std::panicking::try::do_call (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1669" width="0.0180%" height="15" fill="rgb(232,96,21)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1679.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1653" width="0.0180%" height="15" fill="rgb(228,27,39)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1663.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1637" width="0.0180%" height="15" fill="rgb(211,182,52)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1647.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1621" width="0.0180%" height="15" fill="rgb(234,178,38)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1631.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1605" width="0.0180%" height="15" fill="rgb(221,111,3)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1615.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1589" width="0.0180%" height="15" fill="rgb(228,175,21)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1599.50"></text></g><g><title>pgdog::backend::pool::monitor::Monitor::run::_{{closure}} (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1573" width="0.0180%" height="15" fill="rgb(228,174,43)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1583.50"></text></g><g><title>pgdog::backend::pool::monitor::Monitor::spawn::_{{closure}} (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1557" width="0.0180%" height="15" fill="rgb(211,191,0)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1567.50"></text></g><g><title>pgdog::backend::pool::monitor::Monitor::replenish::_{{closure}} (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1541" width="0.0180%" height="15" fill="rgb(253,117,3)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1551.50"></text></g><g><title>pgdog::backend::pool::monitor::Monitor::replenish::_{{closure}}::_{{closure}} (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1525" width="0.0180%" height="15" fill="rgb(241,127,19)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1535.50"></text></g><g><title>tracing_core::event::Event::dispatch (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1509" width="0.0180%" height="15" fill="rgb(218,103,12)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1519.50"></text></g><g><title>tracing_core::dispatcher::get_default (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1493" width="0.0180%" height="15" fill="rgb(236,214,43)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1503.50"></text></g><g><title>tracing_core::event::Event::dispatch::_{{closure}} (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1477" width="0.0180%" height="15" fill="rgb(244,144,19)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1487.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::event (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1461" width="0.0180%" height="15" fill="rgb(246,188,10)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1471.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1445" width="0.0180%" height="15" fill="rgb(212,193,33)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1455.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1429" width="0.0180%" height="15" fill="rgb(241,51,29)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1439.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1413" width="0.0180%" height="15" fill="rgb(211,58,19)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1423.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1397" width="0.0180%" height="15" fill="rgb(229,111,26)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1407.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1381" width="0.0180%" height="15" fill="rgb(213,115,40)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1391.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::_{{closure}} (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1365" width="0.0180%" height="15" fill="rgb(209,56,44)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1375.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,T&gt; as tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt;&gt;::format_event (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1349" width="0.0180%" height="15" fill="rgb(230,108,32)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1359.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::FmtContext&lt;S,N&gt; as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1333" width="0.0180%" height="15" fill="rgb(216,165,31)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1343.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1317" width="0.0180%" height="15" fill="rgb(218,122,21)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1327.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1301" width="0.0180%" height="15" fill="rgb(223,224,47)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1311.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_subscriber::field::RecordFields&gt;::record (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1285" width="0.0180%" height="15" fill="rgb(238,102,44)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1295.50"></text></g><g><title>tracing_core::event::Event::record (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1269" width="0.0180%" height="15" fill="rgb(236,46,40)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1279.50"></text></g><g><title>tracing_core::field::ValueSet::record (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1253" width="0.0180%" height="15" fill="rgb(247,202,50)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1263.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1237" width="0.0180%" height="15" fill="rgb(209,99,20)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1247.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1221" width="0.0180%" height="15" fill="rgb(252,27,34)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1231.50"></text></g><g><title>tracing_subscriber::fmt::format::Writer::write_fmt (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1205" width="0.0180%" height="15" fill="rgb(215,206,23)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1215.50"></text></g><g><title>core::fmt::write (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1189" width="0.0180%" height="15" fill="rgb(212,135,36)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1199.50"></text></g><g><title>core::fmt::rt::Argument::fmt (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1173" width="0.0180%" height="15" fill="rgb(240,189,1)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1183.50"></text></g><g><title>core::fmt::write (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1157" width="0.0180%" height="15" fill="rgb(242,56,20)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1167.50"></text></g><g><title>core::fmt::rt::Argument::fmt (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1141" width="0.0180%" height="15" fill="rgb(247,132,33)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1151.50"></text></g><g><title>&lt;pgdog::backend::error::Error as core::fmt::Display&gt;::fmt (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1125" width="0.0180%" height="15" fill="rgb(208,149,11)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1135.50"></text></g><g><title>core::fmt::Formatter::write_fmt (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1109" width="0.0180%" height="15" fill="rgb(211,33,11)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1119.50"></text></g><g><title>core::fmt::write (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1093" width="0.0180%" height="15" fill="rgb(221,29,38)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1103.50"></text></g><g><title>core::fmt::rt::Argument::fmt (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1077" width="0.0180%" height="15" fill="rgb(206,182,49)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1087.50"></text></g><g><title>&lt;std::io::error::Error as core::fmt::Display&gt;::fmt (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1061" width="0.0180%" height="15" fill="rgb(216,140,1)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1071.50"></text></g><g><title>core::fmt::Formatter::write_fmt (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1045" width="0.0180%" height="15" fill="rgb(232,57,40)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1055.50"></text></g><g><title>core::fmt::write (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1029" width="0.0180%" height="15" fill="rgb(224,186,18)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (837,239 samples, 0.02%)</title><rect x="99.9820%" y="1013" width="0.0180%" height="15" fill="rgb(215,121,11)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1023.50"></text></g><g><title>alloc::string::String::push_str (837,239 samples, 0.02%)</title><rect x="99.9820%" y="997" width="0.0180%" height="15" fill="rgb(245,147,10)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (837,239 samples, 0.02%)</title><rect x="99.9820%" y="981" width="0.0180%" height="15" fill="rgb(238,153,13)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (837,239 samples, 0.02%)</title><rect x="99.9820%" y="965" width="0.0180%" height="15" fill="rgb(233,108,0)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (837,239 samples, 0.02%)</title><rect x="99.9820%" y="949" width="0.0180%" height="15" fill="rgb(212,157,17)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (837,239 samples, 0.02%)</title><rect x="99.9820%" y="933" width="0.0180%" height="15" fill="rgb(225,213,38)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="943.50"></text></g><g><title>[libc.so.6] (837,239 samples, 0.02%)</title><rect x="99.9820%" y="917" width="0.0180%" height="15" fill="rgb(248,16,11)" fg:x="4643908486" fg:w="837239"/><text x="100.2320%" y="927.50"></text></g></svg></svg>